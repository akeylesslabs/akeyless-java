/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * AWSGatewayCloudIdentityExternalIdOpt
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class AWSGatewayCloudIdentityExternalIdOpt {
  public static final String SERIALIZED_NAME_GENERATED_EXTERNAL_ID = "generated_external_id";
  @SerializedName(SERIALIZED_NAME_GENERATED_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String generatedExternalId;

  public static final String SERIALIZED_NAME_IS_ENABLED = "is_enabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  @javax.annotation.Nullable
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_ROLE_ARN = "role_arn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  @javax.annotation.Nullable
  private String roleArn;

  public AWSGatewayCloudIdentityExternalIdOpt() {
  }

  public AWSGatewayCloudIdentityExternalIdOpt generatedExternalId(@javax.annotation.Nullable String generatedExternalId) {
    this.generatedExternalId = generatedExternalId;
    return this;
  }

  /**
   * Get generatedExternalId
   * @return generatedExternalId
   */
  @javax.annotation.Nullable
  public String getGeneratedExternalId() {
    return generatedExternalId;
  }

  public void setGeneratedExternalId(@javax.annotation.Nullable String generatedExternalId) {
    this.generatedExternalId = generatedExternalId;
  }


  public AWSGatewayCloudIdentityExternalIdOpt isEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Get isEnabled
   * @return isEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public AWSGatewayCloudIdentityExternalIdOpt roleArn(@javax.annotation.Nullable String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * Get roleArn
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(@javax.annotation.Nullable String roleArn) {
    this.roleArn = roleArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AWSGatewayCloudIdentityExternalIdOpt awSGatewayCloudIdentityExternalIdOpt = (AWSGatewayCloudIdentityExternalIdOpt) o;
    return Objects.equals(this.generatedExternalId, awSGatewayCloudIdentityExternalIdOpt.generatedExternalId) &&
        Objects.equals(this.isEnabled, awSGatewayCloudIdentityExternalIdOpt.isEnabled) &&
        Objects.equals(this.roleArn, awSGatewayCloudIdentityExternalIdOpt.roleArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(generatedExternalId, isEnabled, roleArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AWSGatewayCloudIdentityExternalIdOpt {\n");
    sb.append("    generatedExternalId: ").append(toIndentedString(generatedExternalId)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("generated_external_id");
    openapiFields.add("is_enabled");
    openapiFields.add("role_arn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AWSGatewayCloudIdentityExternalIdOpt
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AWSGatewayCloudIdentityExternalIdOpt.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AWSGatewayCloudIdentityExternalIdOpt is not found in the empty JSON string", AWSGatewayCloudIdentityExternalIdOpt.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AWSGatewayCloudIdentityExternalIdOpt.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AWSGatewayCloudIdentityExternalIdOpt` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("generated_external_id") != null && !jsonObj.get("generated_external_id").isJsonNull()) && !jsonObj.get("generated_external_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generated_external_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generated_external_id").toString()));
      }
      if ((jsonObj.get("role_arn") != null && !jsonObj.get("role_arn").isJsonNull()) && !jsonObj.get("role_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_arn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AWSGatewayCloudIdentityExternalIdOpt.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AWSGatewayCloudIdentityExternalIdOpt' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AWSGatewayCloudIdentityExternalIdOpt> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AWSGatewayCloudIdentityExternalIdOpt.class));

       return (TypeAdapter<T>) new TypeAdapter<AWSGatewayCloudIdentityExternalIdOpt>() {
           @Override
           public void write(JsonWriter out, AWSGatewayCloudIdentityExternalIdOpt value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AWSGatewayCloudIdentityExternalIdOpt read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AWSGatewayCloudIdentityExternalIdOpt given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AWSGatewayCloudIdentityExternalIdOpt
   * @throws IOException if the JSON string is invalid with respect to AWSGatewayCloudIdentityExternalIdOpt
   */
  public static AWSGatewayCloudIdentityExternalIdOpt fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AWSGatewayCloudIdentityExternalIdOpt.class);
  }

  /**
   * Convert an instance of AWSGatewayCloudIdentityExternalIdOpt to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

