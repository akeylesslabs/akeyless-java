/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.KubeconfigNamedCluster;
import io.akeyless.client.model.KubeconfigNamedContext;
import io.akeyless.client.model.KubeconfigUser;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * KubeConfigValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class KubeConfigValue {
  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  @javax.annotation.Nullable
  private String apiVersion;

  public static final String SERIALIZED_NAME_CLUSTERS = "clusters";
  @SerializedName(SERIALIZED_NAME_CLUSTERS)
  @javax.annotation.Nullable
  private List<KubeconfigNamedCluster> clusters = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTEXTS = "contexts";
  @SerializedName(SERIALIZED_NAME_CONTEXTS)
  @javax.annotation.Nullable
  private List<KubeconfigNamedContext> contexts = new ArrayList<>();

  public static final String SERIALIZED_NAME_CURRENT_CONTEXT = "current-context";
  @SerializedName(SERIALIZED_NAME_CURRENT_CONTEXT)
  @javax.annotation.Nullable
  private String currentContext;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  @javax.annotation.Nullable
  private String kind;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  @javax.annotation.Nullable
  private List<KubeconfigUser> users = new ArrayList<>();

  public KubeConfigValue() {
  }

  public KubeConfigValue apiVersion(@javax.annotation.Nullable String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * Get apiVersion
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(@javax.annotation.Nullable String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public KubeConfigValue clusters(@javax.annotation.Nullable List<KubeconfigNamedCluster> clusters) {
    this.clusters = clusters;
    return this;
  }

  public KubeConfigValue addClustersItem(KubeconfigNamedCluster clustersItem) {
    if (this.clusters == null) {
      this.clusters = new ArrayList<>();
    }
    this.clusters.add(clustersItem);
    return this;
  }

  /**
   * Get clusters
   * @return clusters
   */
  @javax.annotation.Nullable
  public List<KubeconfigNamedCluster> getClusters() {
    return clusters;
  }

  public void setClusters(@javax.annotation.Nullable List<KubeconfigNamedCluster> clusters) {
    this.clusters = clusters;
  }


  public KubeConfigValue contexts(@javax.annotation.Nullable List<KubeconfigNamedContext> contexts) {
    this.contexts = contexts;
    return this;
  }

  public KubeConfigValue addContextsItem(KubeconfigNamedContext contextsItem) {
    if (this.contexts == null) {
      this.contexts = new ArrayList<>();
    }
    this.contexts.add(contextsItem);
    return this;
  }

  /**
   * Get contexts
   * @return contexts
   */
  @javax.annotation.Nullable
  public List<KubeconfigNamedContext> getContexts() {
    return contexts;
  }

  public void setContexts(@javax.annotation.Nullable List<KubeconfigNamedContext> contexts) {
    this.contexts = contexts;
  }


  public KubeConfigValue currentContext(@javax.annotation.Nullable String currentContext) {
    this.currentContext = currentContext;
    return this;
  }

  /**
   * Get currentContext
   * @return currentContext
   */
  @javax.annotation.Nullable
  public String getCurrentContext() {
    return currentContext;
  }

  public void setCurrentContext(@javax.annotation.Nullable String currentContext) {
    this.currentContext = currentContext;
  }


  public KubeConfigValue kind(@javax.annotation.Nullable String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(@javax.annotation.Nullable String kind) {
    this.kind = kind;
  }


  public KubeConfigValue users(@javax.annotation.Nullable List<KubeconfigUser> users) {
    this.users = users;
    return this;
  }

  public KubeConfigValue addUsersItem(KubeconfigUser usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * Get users
   * @return users
   */
  @javax.annotation.Nullable
  public List<KubeconfigUser> getUsers() {
    return users;
  }

  public void setUsers(@javax.annotation.Nullable List<KubeconfigUser> users) {
    this.users = users;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubeConfigValue kubeConfigValue = (KubeConfigValue) o;
    return Objects.equals(this.apiVersion, kubeConfigValue.apiVersion) &&
        Objects.equals(this.clusters, kubeConfigValue.clusters) &&
        Objects.equals(this.contexts, kubeConfigValue.contexts) &&
        Objects.equals(this.currentContext, kubeConfigValue.currentContext) &&
        Objects.equals(this.kind, kubeConfigValue.kind) &&
        Objects.equals(this.users, kubeConfigValue.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, clusters, contexts, currentContext, kind, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubeConfigValue {\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    clusters: ").append(toIndentedString(clusters)).append("\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("    currentContext: ").append(toIndentedString(currentContext)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiVersion");
    openapiFields.add("clusters");
    openapiFields.add("contexts");
    openapiFields.add("current-context");
    openapiFields.add("kind");
    openapiFields.add("users");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to KubeConfigValue
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KubeConfigValue.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KubeConfigValue is not found in the empty JSON string", KubeConfigValue.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!KubeConfigValue.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KubeConfigValue` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiVersion") != null && !jsonObj.get("apiVersion").isJsonNull()) && !jsonObj.get("apiVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiVersion").toString()));
      }
      if (jsonObj.get("clusters") != null && !jsonObj.get("clusters").isJsonNull()) {
        JsonArray jsonArrayclusters = jsonObj.getAsJsonArray("clusters");
        if (jsonArrayclusters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clusters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clusters` to be an array in the JSON string but got `%s`", jsonObj.get("clusters").toString()));
          }

          // validate the optional field `clusters` (array)
          for (int i = 0; i < jsonArrayclusters.size(); i++) {
            KubeconfigNamedCluster.validateJsonElement(jsonArrayclusters.get(i));
          };
        }
      }
      if (jsonObj.get("contexts") != null && !jsonObj.get("contexts").isJsonNull()) {
        JsonArray jsonArraycontexts = jsonObj.getAsJsonArray("contexts");
        if (jsonArraycontexts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contexts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contexts` to be an array in the JSON string but got `%s`", jsonObj.get("contexts").toString()));
          }

          // validate the optional field `contexts` (array)
          for (int i = 0; i < jsonArraycontexts.size(); i++) {
            KubeconfigNamedContext.validateJsonElement(jsonArraycontexts.get(i));
          };
        }
      }
      if ((jsonObj.get("current-context") != null && !jsonObj.get("current-context").isJsonNull()) && !jsonObj.get("current-context").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current-context` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current-context").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if (jsonObj.get("users") != null && !jsonObj.get("users").isJsonNull()) {
        JsonArray jsonArrayusers = jsonObj.getAsJsonArray("users");
        if (jsonArrayusers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `users` to be an array in the JSON string but got `%s`", jsonObj.get("users").toString()));
          }

          // validate the optional field `users` (array)
          for (int i = 0; i < jsonArrayusers.size(); i++) {
            KubeconfigUser.validateJsonElement(jsonArrayusers.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KubeConfigValue.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KubeConfigValue' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KubeConfigValue> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KubeConfigValue.class));

       return (TypeAdapter<T>) new TypeAdapter<KubeConfigValue>() {
           @Override
           public void write(JsonWriter out, KubeConfigValue value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KubeConfigValue read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of KubeConfigValue given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of KubeConfigValue
   * @throws IOException if the JSON string is invalid with respect to KubeConfigValue
   */
  public static KubeConfigValue fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KubeConfigValue.class);
  }

  /**
   * Convert an instance of KubeConfigValue to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

