/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.KubeconfigNamedCluster;
import io.akeyless.client.model.KubeconfigNamedContext;
import io.akeyless.client.model.KubeconfigUser;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * KubeConfigValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KubeConfigValue {
  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_CLUSTERS = "clusters";
  @SerializedName(SERIALIZED_NAME_CLUSTERS)
  private List<KubeconfigNamedCluster> clusters = null;

  public static final String SERIALIZED_NAME_CONTEXTS = "contexts";
  @SerializedName(SERIALIZED_NAME_CONTEXTS)
  private List<KubeconfigNamedContext> contexts = null;

  public static final String SERIALIZED_NAME_CURRENT_CONTEXT = "current-context";
  @SerializedName(SERIALIZED_NAME_CURRENT_CONTEXT)
  private String currentContext;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private List<KubeconfigUser> users = null;

  public KubeConfigValue() { 
  }

  public KubeConfigValue apiVersion(String apiVersion) {
    
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * Get apiVersion
   * @return apiVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApiVersion() {
    return apiVersion;
  }


  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public KubeConfigValue clusters(List<KubeconfigNamedCluster> clusters) {
    
    this.clusters = clusters;
    return this;
  }

  public KubeConfigValue addClustersItem(KubeconfigNamedCluster clustersItem) {
    if (this.clusters == null) {
      this.clusters = new ArrayList<KubeconfigNamedCluster>();
    }
    this.clusters.add(clustersItem);
    return this;
  }

   /**
   * Get clusters
   * @return clusters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<KubeconfigNamedCluster> getClusters() {
    return clusters;
  }


  public void setClusters(List<KubeconfigNamedCluster> clusters) {
    this.clusters = clusters;
  }


  public KubeConfigValue contexts(List<KubeconfigNamedContext> contexts) {
    
    this.contexts = contexts;
    return this;
  }

  public KubeConfigValue addContextsItem(KubeconfigNamedContext contextsItem) {
    if (this.contexts == null) {
      this.contexts = new ArrayList<KubeconfigNamedContext>();
    }
    this.contexts.add(contextsItem);
    return this;
  }

   /**
   * Get contexts
   * @return contexts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<KubeconfigNamedContext> getContexts() {
    return contexts;
  }


  public void setContexts(List<KubeconfigNamedContext> contexts) {
    this.contexts = contexts;
  }


  public KubeConfigValue currentContext(String currentContext) {
    
    this.currentContext = currentContext;
    return this;
  }

   /**
   * Get currentContext
   * @return currentContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentContext() {
    return currentContext;
  }


  public void setCurrentContext(String currentContext) {
    this.currentContext = currentContext;
  }


  public KubeConfigValue kind(String kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Get kind
   * @return kind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKind() {
    return kind;
  }


  public void setKind(String kind) {
    this.kind = kind;
  }


  public KubeConfigValue users(List<KubeconfigUser> users) {
    
    this.users = users;
    return this;
  }

  public KubeConfigValue addUsersItem(KubeconfigUser usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<KubeconfigUser>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<KubeconfigUser> getUsers() {
    return users;
  }


  public void setUsers(List<KubeconfigUser> users) {
    this.users = users;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubeConfigValue kubeConfigValue = (KubeConfigValue) o;
    return Objects.equals(this.apiVersion, kubeConfigValue.apiVersion) &&
        Objects.equals(this.clusters, kubeConfigValue.clusters) &&
        Objects.equals(this.contexts, kubeConfigValue.contexts) &&
        Objects.equals(this.currentContext, kubeConfigValue.currentContext) &&
        Objects.equals(this.kind, kubeConfigValue.kind) &&
        Objects.equals(this.users, kubeConfigValue.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, clusters, contexts, currentContext, kind, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubeConfigValue {\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    clusters: ").append(toIndentedString(clusters)).append("\n");
    sb.append("    contexts: ").append(toIndentedString(contexts)).append("\n");
    sb.append("    currentContext: ").append(toIndentedString(currentContext)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

