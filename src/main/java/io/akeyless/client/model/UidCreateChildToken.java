/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * uidCreateChildToken is a command that creates a new child token using Akeyless Universal Identity.
 */
@ApiModel(description = "uidCreateChildToken is a command that creates a new child token using Akeyless Universal Identity.")

public class UidCreateChildToken {
  public static final String SERIALIZED_NAME_AUTH_METHOD_NAME = "auth-method-name";
  @SerializedName(SERIALIZED_NAME_AUTH_METHOD_NAME)
  private String authMethodName;

  public static final String SERIALIZED_NAME_CHILD_DENY_INHERITANCE = "child-deny-inheritance";
  @SerializedName(SERIALIZED_NAME_CHILD_DENY_INHERITANCE)
  private Boolean childDenyInheritance;

  public static final String SERIALIZED_NAME_CHILD_DENY_ROTATE = "child-deny-rotate";
  @SerializedName(SERIALIZED_NAME_CHILD_DENY_ROTATE)
  private Boolean childDenyRotate;

  public static final String SERIALIZED_NAME_CHILD_TTL = "child-ttl";
  @SerializedName(SERIALIZED_NAME_CHILD_TTL)
  private Integer childTtl;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_UID_TOKEN_ID = "uid-token-id";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN_ID)
  private String uidTokenId;


  public UidCreateChildToken authMethodName(String authMethodName) {
    
    this.authMethodName = authMethodName;
    return this;
  }

   /**
   * The universal identity auth method name, required only when uid-token is not provided
   * @return authMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity auth method name, required only when uid-token is not provided")

  public String getAuthMethodName() {
    return authMethodName;
  }


  public void setAuthMethodName(String authMethodName) {
    this.authMethodName = authMethodName;
  }


  public UidCreateChildToken childDenyInheritance(Boolean childDenyInheritance) {
    
    this.childDenyInheritance = childDenyInheritance;
    return this;
  }

   /**
   * Deny from new child to create their own children
   * @return childDenyInheritance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deny from new child to create their own children")

  public Boolean getChildDenyInheritance() {
    return childDenyInheritance;
  }


  public void setChildDenyInheritance(Boolean childDenyInheritance) {
    this.childDenyInheritance = childDenyInheritance;
  }


  public UidCreateChildToken childDenyRotate(Boolean childDenyRotate) {
    
    this.childDenyRotate = childDenyRotate;
    return this;
  }

   /**
   * Deny from new child to rotate
   * @return childDenyRotate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deny from new child to rotate")

  public Boolean getChildDenyRotate() {
    return childDenyRotate;
  }


  public void setChildDenyRotate(Boolean childDenyRotate) {
    this.childDenyRotate = childDenyRotate;
  }


  public UidCreateChildToken childTtl(Integer childTtl) {
    
    this.childTtl = childTtl;
    return this;
  }

   /**
   * New child token ttl
   * @return childTtl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "New child token ttl")

  public Integer getChildTtl() {
    return childTtl;
  }


  public void setChildTtl(Integer childTtl) {
    this.childTtl = childTtl;
  }


  public UidCreateChildToken comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Deprecated - use description
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated - use description")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public UidCreateChildToken description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the object
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the object")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public UidCreateChildToken json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public UidCreateChildToken token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public UidCreateChildToken uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public UidCreateChildToken uidTokenId(String uidTokenId) {
    
    this.uidTokenId = uidTokenId;
    return this;
  }

   /**
   * The ID of the uid-token, required only when uid-token is not provided
   * @return uidTokenId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the uid-token, required only when uid-token is not provided")

  public String getUidTokenId() {
    return uidTokenId;
  }


  public void setUidTokenId(String uidTokenId) {
    this.uidTokenId = uidTokenId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UidCreateChildToken uidCreateChildToken = (UidCreateChildToken) o;
    return Objects.equals(this.authMethodName, uidCreateChildToken.authMethodName) &&
        Objects.equals(this.childDenyInheritance, uidCreateChildToken.childDenyInheritance) &&
        Objects.equals(this.childDenyRotate, uidCreateChildToken.childDenyRotate) &&
        Objects.equals(this.childTtl, uidCreateChildToken.childTtl) &&
        Objects.equals(this.comment, uidCreateChildToken.comment) &&
        Objects.equals(this.description, uidCreateChildToken.description) &&
        Objects.equals(this.json, uidCreateChildToken.json) &&
        Objects.equals(this.token, uidCreateChildToken.token) &&
        Objects.equals(this.uidToken, uidCreateChildToken.uidToken) &&
        Objects.equals(this.uidTokenId, uidCreateChildToken.uidTokenId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authMethodName, childDenyInheritance, childDenyRotate, childTtl, comment, description, json, token, uidToken, uidTokenId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UidCreateChildToken {\n");
    sb.append("    authMethodName: ").append(toIndentedString(authMethodName)).append("\n");
    sb.append("    childDenyInheritance: ").append(toIndentedString(childDenyInheritance)).append("\n");
    sb.append("    childDenyRotate: ").append(toIndentedString(childDenyRotate)).append("\n");
    sb.append("    childTtl: ").append(toIndentedString(childTtl)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    uidTokenId: ").append(toIndentedString(uidTokenId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

