/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * gatewayUpdateRemoteAccessRdpRecordings is a command that update remote access rdp recording config
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GatewayUpdateRemoteAccessRdpRecordings {
  public static final String SERIALIZED_NAME_AWS_STORAGE_ACCESS_KEY_ID = "aws-storage-access-key-id";
  @SerializedName(SERIALIZED_NAME_AWS_STORAGE_ACCESS_KEY_ID)
  @javax.annotation.Nullable
  private String awsStorageAccessKeyId;

  public static final String SERIALIZED_NAME_AWS_STORAGE_BUCKET_NAME = "aws-storage-bucket-name";
  @SerializedName(SERIALIZED_NAME_AWS_STORAGE_BUCKET_NAME)
  @javax.annotation.Nullable
  private String awsStorageBucketName;

  public static final String SERIALIZED_NAME_AWS_STORAGE_BUCKET_PREFIX = "aws-storage-bucket-prefix";
  @SerializedName(SERIALIZED_NAME_AWS_STORAGE_BUCKET_PREFIX)
  @javax.annotation.Nullable
  private String awsStorageBucketPrefix;

  public static final String SERIALIZED_NAME_AWS_STORAGE_REGION = "aws-storage-region";
  @SerializedName(SERIALIZED_NAME_AWS_STORAGE_REGION)
  @javax.annotation.Nullable
  private String awsStorageRegion;

  public static final String SERIALIZED_NAME_AWS_STORAGE_SECRET_ACCESS_KEY = "aws-storage-secret-access-key";
  @SerializedName(SERIALIZED_NAME_AWS_STORAGE_SECRET_ACCESS_KEY)
  @javax.annotation.Nullable
  private String awsStorageSecretAccessKey;

  public static final String SERIALIZED_NAME_AZURE_STORAGE_ACCOUNT_NAME = "azure-storage-account-name";
  @SerializedName(SERIALIZED_NAME_AZURE_STORAGE_ACCOUNT_NAME)
  @javax.annotation.Nullable
  private String azureStorageAccountName;

  public static final String SERIALIZED_NAME_AZURE_STORAGE_CLIENT_ID = "azure-storage-client-id";
  @SerializedName(SERIALIZED_NAME_AZURE_STORAGE_CLIENT_ID)
  @javax.annotation.Nullable
  private String azureStorageClientId;

  public static final String SERIALIZED_NAME_AZURE_STORAGE_CLIENT_SECRET = "azure-storage-client-secret";
  @SerializedName(SERIALIZED_NAME_AZURE_STORAGE_CLIENT_SECRET)
  @javax.annotation.Nullable
  private String azureStorageClientSecret;

  public static final String SERIALIZED_NAME_AZURE_STORAGE_CONTAINER_NAME = "azure-storage-container-name";
  @SerializedName(SERIALIZED_NAME_AZURE_STORAGE_CONTAINER_NAME)
  @javax.annotation.Nullable
  private String azureStorageContainerName;

  public static final String SERIALIZED_NAME_AZURE_STORAGE_TENANT_ID = "azure-storage-tenant-id";
  @SerializedName(SERIALIZED_NAME_AZURE_STORAGE_TENANT_ID)
  @javax.annotation.Nullable
  private String azureStorageTenantId;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  @javax.annotation.Nullable
  private Boolean json = false;

  public static final String SERIALIZED_NAME_RDP_SESSION_RECORDING = "rdp-session-recording";
  @SerializedName(SERIALIZED_NAME_RDP_SESSION_RECORDING)
  @javax.annotation.Nullable
  private String rdpSessionRecording;

  public static final String SERIALIZED_NAME_RDP_SESSION_STORAGE = "rdp-session-storage";
  @SerializedName(SERIALIZED_NAME_RDP_SESSION_STORAGE)
  @javax.annotation.Nullable
  private String rdpSessionStorage;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  @javax.annotation.Nullable
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  @javax.annotation.Nullable
  private String uidToken;

  public GatewayUpdateRemoteAccessRdpRecordings() {
  }

  public GatewayUpdateRemoteAccessRdpRecordings awsStorageAccessKeyId(@javax.annotation.Nullable String awsStorageAccessKeyId) {
    this.awsStorageAccessKeyId = awsStorageAccessKeyId;
    return this;
  }

  /**
   * AWS access key id. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html
   * @return awsStorageAccessKeyId
   */
  @javax.annotation.Nullable
  public String getAwsStorageAccessKeyId() {
    return awsStorageAccessKeyId;
  }

  public void setAwsStorageAccessKeyId(@javax.annotation.Nullable String awsStorageAccessKeyId) {
    this.awsStorageAccessKeyId = awsStorageAccessKeyId;
  }


  public GatewayUpdateRemoteAccessRdpRecordings awsStorageBucketName(@javax.annotation.Nullable String awsStorageBucketName) {
    this.awsStorageBucketName = awsStorageBucketName;
    return this;
  }

  /**
   * The AWS bucket name. For more information refer to https://docs.aws.amazon.com/s3/
   * @return awsStorageBucketName
   */
  @javax.annotation.Nullable
  public String getAwsStorageBucketName() {
    return awsStorageBucketName;
  }

  public void setAwsStorageBucketName(@javax.annotation.Nullable String awsStorageBucketName) {
    this.awsStorageBucketName = awsStorageBucketName;
  }


  public GatewayUpdateRemoteAccessRdpRecordings awsStorageBucketPrefix(@javax.annotation.Nullable String awsStorageBucketPrefix) {
    this.awsStorageBucketPrefix = awsStorageBucketPrefix;
    return this;
  }

  /**
   * The folder name in S3 bucket. For more information refer to https://docs.aws.amazon.com/s3/
   * @return awsStorageBucketPrefix
   */
  @javax.annotation.Nullable
  public String getAwsStorageBucketPrefix() {
    return awsStorageBucketPrefix;
  }

  public void setAwsStorageBucketPrefix(@javax.annotation.Nullable String awsStorageBucketPrefix) {
    this.awsStorageBucketPrefix = awsStorageBucketPrefix;
  }


  public GatewayUpdateRemoteAccessRdpRecordings awsStorageRegion(@javax.annotation.Nullable String awsStorageRegion) {
    this.awsStorageRegion = awsStorageRegion;
    return this;
  }

  /**
   * The region where the storage is located
   * @return awsStorageRegion
   */
  @javax.annotation.Nullable
  public String getAwsStorageRegion() {
    return awsStorageRegion;
  }

  public void setAwsStorageRegion(@javax.annotation.Nullable String awsStorageRegion) {
    this.awsStorageRegion = awsStorageRegion;
  }


  public GatewayUpdateRemoteAccessRdpRecordings awsStorageSecretAccessKey(@javax.annotation.Nullable String awsStorageSecretAccessKey) {
    this.awsStorageSecretAccessKey = awsStorageSecretAccessKey;
    return this;
  }

  /**
   * AWS secret access key. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html
   * @return awsStorageSecretAccessKey
   */
  @javax.annotation.Nullable
  public String getAwsStorageSecretAccessKey() {
    return awsStorageSecretAccessKey;
  }

  public void setAwsStorageSecretAccessKey(@javax.annotation.Nullable String awsStorageSecretAccessKey) {
    this.awsStorageSecretAccessKey = awsStorageSecretAccessKey;
  }


  public GatewayUpdateRemoteAccessRdpRecordings azureStorageAccountName(@javax.annotation.Nullable String azureStorageAccountName) {
    this.azureStorageAccountName = azureStorageAccountName;
    return this;
  }

  /**
   * Azure account name. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-overview
   * @return azureStorageAccountName
   */
  @javax.annotation.Nullable
  public String getAzureStorageAccountName() {
    return azureStorageAccountName;
  }

  public void setAzureStorageAccountName(@javax.annotation.Nullable String azureStorageAccountName) {
    this.azureStorageAccountName = azureStorageAccountName;
  }


  public GatewayUpdateRemoteAccessRdpRecordings azureStorageClientId(@javax.annotation.Nullable String azureStorageClientId) {
    this.azureStorageClientId = azureStorageClientId;
    return this;
  }

  /**
   * Azure client id. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal
   * @return azureStorageClientId
   */
  @javax.annotation.Nullable
  public String getAzureStorageClientId() {
    return azureStorageClientId;
  }

  public void setAzureStorageClientId(@javax.annotation.Nullable String azureStorageClientId) {
    this.azureStorageClientId = azureStorageClientId;
  }


  public GatewayUpdateRemoteAccessRdpRecordings azureStorageClientSecret(@javax.annotation.Nullable String azureStorageClientSecret) {
    this.azureStorageClientSecret = azureStorageClientSecret;
    return this;
  }

  /**
   * Azure client secret. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal
   * @return azureStorageClientSecret
   */
  @javax.annotation.Nullable
  public String getAzureStorageClientSecret() {
    return azureStorageClientSecret;
  }

  public void setAzureStorageClientSecret(@javax.annotation.Nullable String azureStorageClientSecret) {
    this.azureStorageClientSecret = azureStorageClientSecret;
  }


  public GatewayUpdateRemoteAccessRdpRecordings azureStorageContainerName(@javax.annotation.Nullable String azureStorageContainerName) {
    this.azureStorageContainerName = azureStorageContainerName;
    return this;
  }

  /**
   * Azure container name. For more information refer to https://learn.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata
   * @return azureStorageContainerName
   */
  @javax.annotation.Nullable
  public String getAzureStorageContainerName() {
    return azureStorageContainerName;
  }

  public void setAzureStorageContainerName(@javax.annotation.Nullable String azureStorageContainerName) {
    this.azureStorageContainerName = azureStorageContainerName;
  }


  public GatewayUpdateRemoteAccessRdpRecordings azureStorageTenantId(@javax.annotation.Nullable String azureStorageTenantId) {
    this.azureStorageTenantId = azureStorageTenantId;
    return this;
  }

  /**
   * Azure tenant id. For more information refer to https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant
   * @return azureStorageTenantId
   */
  @javax.annotation.Nullable
  public String getAzureStorageTenantId() {
    return azureStorageTenantId;
  }

  public void setAzureStorageTenantId(@javax.annotation.Nullable String azureStorageTenantId) {
    this.azureStorageTenantId = azureStorageTenantId;
  }


  public GatewayUpdateRemoteAccessRdpRecordings json(@javax.annotation.Nullable Boolean json) {
    this.json = json;
    return this;
  }

  /**
   * Set output format to JSON
   * @return json
   */
  @javax.annotation.Nullable
  public Boolean getJson() {
    return json;
  }

  public void setJson(@javax.annotation.Nullable Boolean json) {
    this.json = json;
  }


  public GatewayUpdateRemoteAccessRdpRecordings rdpSessionRecording(@javax.annotation.Nullable String rdpSessionRecording) {
    this.rdpSessionRecording = rdpSessionRecording;
    return this;
  }

  /**
   * Enable recording of rdp session [true/false]
   * @return rdpSessionRecording
   */
  @javax.annotation.Nullable
  public String getRdpSessionRecording() {
    return rdpSessionRecording;
  }

  public void setRdpSessionRecording(@javax.annotation.Nullable String rdpSessionRecording) {
    this.rdpSessionRecording = rdpSessionRecording;
  }


  public GatewayUpdateRemoteAccessRdpRecordings rdpSessionStorage(@javax.annotation.Nullable String rdpSessionStorage) {
    this.rdpSessionStorage = rdpSessionStorage;
    return this;
  }

  /**
   * Rdp session recording storage destination [local/aws/azure]
   * @return rdpSessionStorage
   */
  @javax.annotation.Nullable
  public String getRdpSessionStorage() {
    return rdpSessionStorage;
  }

  public void setRdpSessionStorage(@javax.annotation.Nullable String rdpSessionStorage) {
    this.rdpSessionStorage = rdpSessionStorage;
  }


  public GatewayUpdateRemoteAccessRdpRecordings token(@javax.annotation.Nullable String token) {
    this.token = token;
    return this;
  }

  /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
   */
  @javax.annotation.Nullable
  public String getToken() {
    return token;
  }

  public void setToken(@javax.annotation.Nullable String token) {
    this.token = token;
  }


  public GatewayUpdateRemoteAccessRdpRecordings uidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
    return this;
  }

  /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
   */
  @javax.annotation.Nullable
  public String getUidToken() {
    return uidToken;
  }

  public void setUidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayUpdateRemoteAccessRdpRecordings gatewayUpdateRemoteAccessRdpRecordings = (GatewayUpdateRemoteAccessRdpRecordings) o;
    return Objects.equals(this.awsStorageAccessKeyId, gatewayUpdateRemoteAccessRdpRecordings.awsStorageAccessKeyId) &&
        Objects.equals(this.awsStorageBucketName, gatewayUpdateRemoteAccessRdpRecordings.awsStorageBucketName) &&
        Objects.equals(this.awsStorageBucketPrefix, gatewayUpdateRemoteAccessRdpRecordings.awsStorageBucketPrefix) &&
        Objects.equals(this.awsStorageRegion, gatewayUpdateRemoteAccessRdpRecordings.awsStorageRegion) &&
        Objects.equals(this.awsStorageSecretAccessKey, gatewayUpdateRemoteAccessRdpRecordings.awsStorageSecretAccessKey) &&
        Objects.equals(this.azureStorageAccountName, gatewayUpdateRemoteAccessRdpRecordings.azureStorageAccountName) &&
        Objects.equals(this.azureStorageClientId, gatewayUpdateRemoteAccessRdpRecordings.azureStorageClientId) &&
        Objects.equals(this.azureStorageClientSecret, gatewayUpdateRemoteAccessRdpRecordings.azureStorageClientSecret) &&
        Objects.equals(this.azureStorageContainerName, gatewayUpdateRemoteAccessRdpRecordings.azureStorageContainerName) &&
        Objects.equals(this.azureStorageTenantId, gatewayUpdateRemoteAccessRdpRecordings.azureStorageTenantId) &&
        Objects.equals(this.json, gatewayUpdateRemoteAccessRdpRecordings.json) &&
        Objects.equals(this.rdpSessionRecording, gatewayUpdateRemoteAccessRdpRecordings.rdpSessionRecording) &&
        Objects.equals(this.rdpSessionStorage, gatewayUpdateRemoteAccessRdpRecordings.rdpSessionStorage) &&
        Objects.equals(this.token, gatewayUpdateRemoteAccessRdpRecordings.token) &&
        Objects.equals(this.uidToken, gatewayUpdateRemoteAccessRdpRecordings.uidToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsStorageAccessKeyId, awsStorageBucketName, awsStorageBucketPrefix, awsStorageRegion, awsStorageSecretAccessKey, azureStorageAccountName, azureStorageClientId, azureStorageClientSecret, azureStorageContainerName, azureStorageTenantId, json, rdpSessionRecording, rdpSessionStorage, token, uidToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayUpdateRemoteAccessRdpRecordings {\n");
    sb.append("    awsStorageAccessKeyId: ").append(toIndentedString(awsStorageAccessKeyId)).append("\n");
    sb.append("    awsStorageBucketName: ").append(toIndentedString(awsStorageBucketName)).append("\n");
    sb.append("    awsStorageBucketPrefix: ").append(toIndentedString(awsStorageBucketPrefix)).append("\n");
    sb.append("    awsStorageRegion: ").append(toIndentedString(awsStorageRegion)).append("\n");
    sb.append("    awsStorageSecretAccessKey: ").append(toIndentedString(awsStorageSecretAccessKey)).append("\n");
    sb.append("    azureStorageAccountName: ").append(toIndentedString(azureStorageAccountName)).append("\n");
    sb.append("    azureStorageClientId: ").append(toIndentedString(azureStorageClientId)).append("\n");
    sb.append("    azureStorageClientSecret: ").append(toIndentedString(azureStorageClientSecret)).append("\n");
    sb.append("    azureStorageContainerName: ").append(toIndentedString(azureStorageContainerName)).append("\n");
    sb.append("    azureStorageTenantId: ").append(toIndentedString(azureStorageTenantId)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    rdpSessionRecording: ").append(toIndentedString(rdpSessionRecording)).append("\n");
    sb.append("    rdpSessionStorage: ").append(toIndentedString(rdpSessionStorage)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aws-storage-access-key-id");
    openapiFields.add("aws-storage-bucket-name");
    openapiFields.add("aws-storage-bucket-prefix");
    openapiFields.add("aws-storage-region");
    openapiFields.add("aws-storage-secret-access-key");
    openapiFields.add("azure-storage-account-name");
    openapiFields.add("azure-storage-client-id");
    openapiFields.add("azure-storage-client-secret");
    openapiFields.add("azure-storage-container-name");
    openapiFields.add("azure-storage-tenant-id");
    openapiFields.add("json");
    openapiFields.add("rdp-session-recording");
    openapiFields.add("rdp-session-storage");
    openapiFields.add("token");
    openapiFields.add("uid-token");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GatewayUpdateRemoteAccessRdpRecordings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GatewayUpdateRemoteAccessRdpRecordings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GatewayUpdateRemoteAccessRdpRecordings is not found in the empty JSON string", GatewayUpdateRemoteAccessRdpRecordings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GatewayUpdateRemoteAccessRdpRecordings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GatewayUpdateRemoteAccessRdpRecordings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("aws-storage-access-key-id") != null && !jsonObj.get("aws-storage-access-key-id").isJsonNull()) && !jsonObj.get("aws-storage-access-key-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-storage-access-key-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-storage-access-key-id").toString()));
      }
      if ((jsonObj.get("aws-storage-bucket-name") != null && !jsonObj.get("aws-storage-bucket-name").isJsonNull()) && !jsonObj.get("aws-storage-bucket-name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-storage-bucket-name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-storage-bucket-name").toString()));
      }
      if ((jsonObj.get("aws-storage-bucket-prefix") != null && !jsonObj.get("aws-storage-bucket-prefix").isJsonNull()) && !jsonObj.get("aws-storage-bucket-prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-storage-bucket-prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-storage-bucket-prefix").toString()));
      }
      if ((jsonObj.get("aws-storage-region") != null && !jsonObj.get("aws-storage-region").isJsonNull()) && !jsonObj.get("aws-storage-region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-storage-region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-storage-region").toString()));
      }
      if ((jsonObj.get("aws-storage-secret-access-key") != null && !jsonObj.get("aws-storage-secret-access-key").isJsonNull()) && !jsonObj.get("aws-storage-secret-access-key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-storage-secret-access-key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-storage-secret-access-key").toString()));
      }
      if ((jsonObj.get("azure-storage-account-name") != null && !jsonObj.get("azure-storage-account-name").isJsonNull()) && !jsonObj.get("azure-storage-account-name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azure-storage-account-name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azure-storage-account-name").toString()));
      }
      if ((jsonObj.get("azure-storage-client-id") != null && !jsonObj.get("azure-storage-client-id").isJsonNull()) && !jsonObj.get("azure-storage-client-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azure-storage-client-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azure-storage-client-id").toString()));
      }
      if ((jsonObj.get("azure-storage-client-secret") != null && !jsonObj.get("azure-storage-client-secret").isJsonNull()) && !jsonObj.get("azure-storage-client-secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azure-storage-client-secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azure-storage-client-secret").toString()));
      }
      if ((jsonObj.get("azure-storage-container-name") != null && !jsonObj.get("azure-storage-container-name").isJsonNull()) && !jsonObj.get("azure-storage-container-name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azure-storage-container-name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azure-storage-container-name").toString()));
      }
      if ((jsonObj.get("azure-storage-tenant-id") != null && !jsonObj.get("azure-storage-tenant-id").isJsonNull()) && !jsonObj.get("azure-storage-tenant-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azure-storage-tenant-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azure-storage-tenant-id").toString()));
      }
      if ((jsonObj.get("rdp-session-recording") != null && !jsonObj.get("rdp-session-recording").isJsonNull()) && !jsonObj.get("rdp-session-recording").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rdp-session-recording` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rdp-session-recording").toString()));
      }
      if ((jsonObj.get("rdp-session-storage") != null && !jsonObj.get("rdp-session-storage").isJsonNull()) && !jsonObj.get("rdp-session-storage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rdp-session-storage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rdp-session-storage").toString()));
      }
      if ((jsonObj.get("token") != null && !jsonObj.get("token").isJsonNull()) && !jsonObj.get("token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token").toString()));
      }
      if ((jsonObj.get("uid-token") != null && !jsonObj.get("uid-token").isJsonNull()) && !jsonObj.get("uid-token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid-token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid-token").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GatewayUpdateRemoteAccessRdpRecordings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GatewayUpdateRemoteAccessRdpRecordings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GatewayUpdateRemoteAccessRdpRecordings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GatewayUpdateRemoteAccessRdpRecordings.class));

       return (TypeAdapter<T>) new TypeAdapter<GatewayUpdateRemoteAccessRdpRecordings>() {
           @Override
           public void write(JsonWriter out, GatewayUpdateRemoteAccessRdpRecordings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GatewayUpdateRemoteAccessRdpRecordings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GatewayUpdateRemoteAccessRdpRecordings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GatewayUpdateRemoteAccessRdpRecordings
   * @throws IOException if the JSON string is invalid with respect to GatewayUpdateRemoteAccessRdpRecordings
   */
  public static GatewayUpdateRemoteAccessRdpRecordings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GatewayUpdateRemoteAccessRdpRecordings.class);
  }

  /**
   * Convert an instance of GatewayUpdateRemoteAccessRdpRecordings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

