/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * SSHCertificateIssueDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SSHCertificateIssueDetails {
  public static final String SERIALIZED_NAME_ALLOWED_DOMAINS = "allowed_domains";
  @SerializedName(SERIALIZED_NAME_ALLOWED_DOMAINS)
  private List<String> allowedDomains = null;

  public static final String SERIALIZED_NAME_ALLOWED_USER_KEY_LENGTHS = "allowed_user_key_lengths";
  @SerializedName(SERIALIZED_NAME_ALLOWED_USER_KEY_LENGTHS)
  private Map<String, Long> allowedUserKeyLengths = null;

  public static final String SERIALIZED_NAME_ALLOWED_USERS = "allowed_users";
  @SerializedName(SERIALIZED_NAME_ALLOWED_USERS)
  private List<String> allowedUsers = null;

  public static final String SERIALIZED_NAME_CERT_TYPE = "cert_type";
  @SerializedName(SERIALIZED_NAME_CERT_TYPE)
  private Integer certType;

  public static final String SERIALIZED_NAME_CRITICAL_OPTIONS = "critical_options";
  @SerializedName(SERIALIZED_NAME_CRITICAL_OPTIONS)
  private Map<String, String> criticalOptions = null;

  public static final String SERIALIZED_NAME_EXTENSIONS = "extensions";
  @SerializedName(SERIALIZED_NAME_EXTENSIONS)
  private Map<String, String> extensions = null;

  public static final String SERIALIZED_NAME_PRINCIPALS = "principals";
  @SerializedName(SERIALIZED_NAME_PRINCIPALS)
  private List<String> principals = null;

  public static final String SERIALIZED_NAME_STATIC_KEY_ID = "static_key_id";
  @SerializedName(SERIALIZED_NAME_STATIC_KEY_ID)
  private String staticKeyId;

  public SSHCertificateIssueDetails() { 
  }

  public SSHCertificateIssueDetails allowedDomains(List<String> allowedDomains) {
    
    this.allowedDomains = allowedDomains;
    return this;
  }

  public SSHCertificateIssueDetails addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null) {
      this.allowedDomains = new ArrayList<String>();
    }
    this.allowedDomains.add(allowedDomainsItem);
    return this;
  }

   /**
   * Relevant for host certificate
   * @return allowedDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Relevant for host certificate")

  public List<String> getAllowedDomains() {
    return allowedDomains;
  }


  public void setAllowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }


  public SSHCertificateIssueDetails allowedUserKeyLengths(Map<String, Long> allowedUserKeyLengths) {
    
    this.allowedUserKeyLengths = allowedUserKeyLengths;
    return this;
  }

  public SSHCertificateIssueDetails putAllowedUserKeyLengthsItem(String key, Long allowedUserKeyLengthsItem) {
    if (this.allowedUserKeyLengths == null) {
      this.allowedUserKeyLengths = new HashMap<String, Long>();
    }
    this.allowedUserKeyLengths.put(key, allowedUserKeyLengthsItem);
    return this;
  }

   /**
   * Get allowedUserKeyLengths
   * @return allowedUserKeyLengths
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Long> getAllowedUserKeyLengths() {
    return allowedUserKeyLengths;
  }


  public void setAllowedUserKeyLengths(Map<String, Long> allowedUserKeyLengths) {
    this.allowedUserKeyLengths = allowedUserKeyLengths;
  }


  public SSHCertificateIssueDetails allowedUsers(List<String> allowedUsers) {
    
    this.allowedUsers = allowedUsers;
    return this;
  }

  public SSHCertificateIssueDetails addAllowedUsersItem(String allowedUsersItem) {
    if (this.allowedUsers == null) {
      this.allowedUsers = new ArrayList<String>();
    }
    this.allowedUsers.add(allowedUsersItem);
    return this;
  }

   /**
   * Relevant for user certificate
   * @return allowedUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Relevant for user certificate")

  public List<String> getAllowedUsers() {
    return allowedUsers;
  }


  public void setAllowedUsers(List<String> allowedUsers) {
    this.allowedUsers = allowedUsers;
  }


  public SSHCertificateIssueDetails certType(Integer certType) {
    
    this.certType = certType;
    return this;
  }

   /**
   * Get certType
   * @return certType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCertType() {
    return certType;
  }


  public void setCertType(Integer certType) {
    this.certType = certType;
  }


  public SSHCertificateIssueDetails criticalOptions(Map<String, String> criticalOptions) {
    
    this.criticalOptions = criticalOptions;
    return this;
  }

  public SSHCertificateIssueDetails putCriticalOptionsItem(String key, String criticalOptionsItem) {
    if (this.criticalOptions == null) {
      this.criticalOptions = new HashMap<String, String>();
    }
    this.criticalOptions.put(key, criticalOptionsItem);
    return this;
  }

   /**
   * Get criticalOptions
   * @return criticalOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getCriticalOptions() {
    return criticalOptions;
  }


  public void setCriticalOptions(Map<String, String> criticalOptions) {
    this.criticalOptions = criticalOptions;
  }


  public SSHCertificateIssueDetails extensions(Map<String, String> extensions) {
    
    this.extensions = extensions;
    return this;
  }

  public SSHCertificateIssueDetails putExtensionsItem(String key, String extensionsItem) {
    if (this.extensions == null) {
      this.extensions = new HashMap<String, String>();
    }
    this.extensions.put(key, extensionsItem);
    return this;
  }

   /**
   * Get extensions
   * @return extensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getExtensions() {
    return extensions;
  }


  public void setExtensions(Map<String, String> extensions) {
    this.extensions = extensions;
  }


  public SSHCertificateIssueDetails principals(List<String> principals) {
    
    this.principals = principals;
    return this;
  }

  public SSHCertificateIssueDetails addPrincipalsItem(String principalsItem) {
    if (this.principals == null) {
      this.principals = new ArrayList<String>();
    }
    this.principals.add(principalsItem);
    return this;
  }

   /**
   * Get principals
   * @return principals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPrincipals() {
    return principals;
  }


  public void setPrincipals(List<String> principals) {
    this.principals = principals;
  }


  public SSHCertificateIssueDetails staticKeyId(String staticKeyId) {
    
    this.staticKeyId = staticKeyId;
    return this;
  }

   /**
   * In case it is empty, the key ID will be combination of user identifiers and a random string
   * @return staticKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "In case it is empty, the key ID will be combination of user identifiers and a random string")

  public String getStaticKeyId() {
    return staticKeyId;
  }


  public void setStaticKeyId(String staticKeyId) {
    this.staticKeyId = staticKeyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SSHCertificateIssueDetails ssHCertificateIssueDetails = (SSHCertificateIssueDetails) o;
    return Objects.equals(this.allowedDomains, ssHCertificateIssueDetails.allowedDomains) &&
        Objects.equals(this.allowedUserKeyLengths, ssHCertificateIssueDetails.allowedUserKeyLengths) &&
        Objects.equals(this.allowedUsers, ssHCertificateIssueDetails.allowedUsers) &&
        Objects.equals(this.certType, ssHCertificateIssueDetails.certType) &&
        Objects.equals(this.criticalOptions, ssHCertificateIssueDetails.criticalOptions) &&
        Objects.equals(this.extensions, ssHCertificateIssueDetails.extensions) &&
        Objects.equals(this.principals, ssHCertificateIssueDetails.principals) &&
        Objects.equals(this.staticKeyId, ssHCertificateIssueDetails.staticKeyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedDomains, allowedUserKeyLengths, allowedUsers, certType, criticalOptions, extensions, principals, staticKeyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SSHCertificateIssueDetails {\n");
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    allowedUserKeyLengths: ").append(toIndentedString(allowedUserKeyLengths)).append("\n");
    sb.append("    allowedUsers: ").append(toIndentedString(allowedUsers)).append("\n");
    sb.append("    certType: ").append(toIndentedString(certType)).append("\n");
    sb.append("    criticalOptions: ").append(toIndentedString(criticalOptions)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("    principals: ").append(toIndentedString(principals)).append("\n");
    sb.append("    staticKeyId: ").append(toIndentedString(staticKeyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

