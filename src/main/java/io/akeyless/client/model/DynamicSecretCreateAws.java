/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * dynamicSecretCreateAws is a command that creates aws dynamic secret
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class DynamicSecretCreateAws {
  public static final String SERIALIZED_NAME_ACCESS_MODE = "access-mode";
  @SerializedName(SERIALIZED_NAME_ACCESS_MODE)
  @javax.annotation.Nullable
  private String accessMode;

  public static final String SERIALIZED_NAME_ADMIN_ROTATION_INTERVAL_DAYS = "admin-rotation-interval-days";
  @SerializedName(SERIALIZED_NAME_ADMIN_ROTATION_INTERVAL_DAYS)
  @javax.annotation.Nullable
  private Long adminRotationIntervalDays = 0l;

  public static final String SERIALIZED_NAME_AWS_ACCESS_KEY_ID = "aws-access-key-id";
  @SerializedName(SERIALIZED_NAME_AWS_ACCESS_KEY_ID)
  @javax.annotation.Nullable
  private String awsAccessKeyId;

  public static final String SERIALIZED_NAME_AWS_ACCESS_SECRET_KEY = "aws-access-secret-key";
  @SerializedName(SERIALIZED_NAME_AWS_ACCESS_SECRET_KEY)
  @javax.annotation.Nullable
  private String awsAccessSecretKey;

  public static final String SERIALIZED_NAME_AWS_EXTERNAL_ID = "aws-external-id";
  @SerializedName(SERIALIZED_NAME_AWS_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String awsExternalId;

  public static final String SERIALIZED_NAME_AWS_ROLE_ARNS = "aws-role-arns";
  @SerializedName(SERIALIZED_NAME_AWS_ROLE_ARNS)
  @javax.annotation.Nullable
  private String awsRoleArns;

  public static final String SERIALIZED_NAME_AWS_USER_CONSOLE_ACCESS = "aws-user-console-access";
  @SerializedName(SERIALIZED_NAME_AWS_USER_CONSOLE_ACCESS)
  @javax.annotation.Nullable
  private Boolean awsUserConsoleAccess = false;

  public static final String SERIALIZED_NAME_AWS_USER_GROUPS = "aws-user-groups";
  @SerializedName(SERIALIZED_NAME_AWS_USER_GROUPS)
  @javax.annotation.Nullable
  private String awsUserGroups;

  public static final String SERIALIZED_NAME_AWS_USER_POLICIES = "aws-user-policies";
  @SerializedName(SERIALIZED_NAME_AWS_USER_POLICIES)
  @javax.annotation.Nullable
  private String awsUserPolicies;

  public static final String SERIALIZED_NAME_AWS_USER_PROGRAMMATIC_ACCESS = "aws-user-programmatic-access";
  @SerializedName(SERIALIZED_NAME_AWS_USER_PROGRAMMATIC_ACCESS)
  @javax.annotation.Nullable
  private Boolean awsUserProgrammaticAccess = true;

  public static final String SERIALIZED_NAME_CUSTOM_USERNAME_TEMPLATE = "custom-username-template";
  @SerializedName(SERIALIZED_NAME_CUSTOM_USERNAME_TEMPLATE)
  @javax.annotation.Nullable
  private String customUsernameTemplate;

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  @javax.annotation.Nullable
  private String deleteProtection;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_ENABLE_ADMIN_ROTATION = "enable-admin-rotation";
  @SerializedName(SERIALIZED_NAME_ENABLE_ADMIN_ROTATION)
  @javax.annotation.Nullable
  private Boolean enableAdminRotation = false;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  @javax.annotation.Nullable
  private Boolean json = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_PASSWORD_LENGTH = "password-length";
  @SerializedName(SERIALIZED_NAME_PASSWORD_LENGTH)
  @javax.annotation.Nullable
  private String passwordLength;

  public static final String SERIALIZED_NAME_PRODUCER_ENCRYPTION_KEY_NAME = "producer-encryption-key-name";
  @SerializedName(SERIALIZED_NAME_PRODUCER_ENCRYPTION_KEY_NAME)
  @javax.annotation.Nullable
  private String producerEncryptionKeyName;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region = "us-east-2";

  public static final String SERIALIZED_NAME_SECURE_ACCESS_AWS_ACCOUNT_ID = "secure-access-aws-account-id";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_AWS_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String secureAccessAwsAccountId;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_AWS_NATIVE_CLI = "secure-access-aws-native-cli";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_AWS_NATIVE_CLI)
  @javax.annotation.Nullable
  private Boolean secureAccessAwsNativeCli;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_BASTION_ISSUER = "secure-access-bastion-issuer";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_BASTION_ISSUER)
  @javax.annotation.Nullable
  private String secureAccessBastionIssuer;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_CERTIFICATE_ISSUER = "secure-access-certificate-issuer";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_CERTIFICATE_ISSUER)
  @javax.annotation.Nullable
  private String secureAccessCertificateIssuer;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_DELAY = "secure-access-delay";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_DELAY)
  @javax.annotation.Nullable
  private Long secureAccessDelay;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_ENABLE = "secure-access-enable";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_ENABLE)
  @javax.annotation.Nullable
  private String secureAccessEnable;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB = "secure-access-web";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB)
  @javax.annotation.Nullable
  private Boolean secureAccessWeb = true;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB_BROWSING = "secure-access-web-browsing";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB_BROWSING)
  @javax.annotation.Nullable
  private Boolean secureAccessWebBrowsing = false;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB_PROXY = "secure-access-web-proxy";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB_PROXY)
  @javax.annotation.Nullable
  private Boolean secureAccessWebProxy = false;

  public static final String SERIALIZED_NAME_SESSION_TAGS = "session-tags";
  @SerializedName(SERIALIZED_NAME_SESSION_TAGS)
  @javax.annotation.Nullable
  private String sessionTags;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  @javax.annotation.Nullable
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGET_NAME = "target-name";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME)
  @javax.annotation.Nullable
  private String targetName;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  @javax.annotation.Nullable
  private String token;

  public static final String SERIALIZED_NAME_TRANSITIVE_TAG_KEYS = "transitive-tag-keys";
  @SerializedName(SERIALIZED_NAME_TRANSITIVE_TAG_KEYS)
  @javax.annotation.Nullable
  private String transitiveTagKeys;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  @javax.annotation.Nullable
  private String uidToken;

  public static final String SERIALIZED_NAME_USER_TTL = "user-ttl";
  @SerializedName(SERIALIZED_NAME_USER_TTL)
  @javax.annotation.Nullable
  private String userTtl = "60m";

  public DynamicSecretCreateAws() {
  }

  public DynamicSecretCreateAws accessMode(@javax.annotation.Nullable String accessMode) {
    this.accessMode = accessMode;
    return this;
  }

  /**
   * Get accessMode
   * @return accessMode
   */
  @javax.annotation.Nullable
  public String getAccessMode() {
    return accessMode;
  }

  public void setAccessMode(@javax.annotation.Nullable String accessMode) {
    this.accessMode = accessMode;
  }


  public DynamicSecretCreateAws adminRotationIntervalDays(@javax.annotation.Nullable Long adminRotationIntervalDays) {
    this.adminRotationIntervalDays = adminRotationIntervalDays;
    return this;
  }

  /**
   * Admin credentials rotation interval (days)
   * @return adminRotationIntervalDays
   */
  @javax.annotation.Nullable
  public Long getAdminRotationIntervalDays() {
    return adminRotationIntervalDays;
  }

  public void setAdminRotationIntervalDays(@javax.annotation.Nullable Long adminRotationIntervalDays) {
    this.adminRotationIntervalDays = adminRotationIntervalDays;
  }


  public DynamicSecretCreateAws awsAccessKeyId(@javax.annotation.Nullable String awsAccessKeyId) {
    this.awsAccessKeyId = awsAccessKeyId;
    return this;
  }

  /**
   * Access Key ID
   * @return awsAccessKeyId
   */
  @javax.annotation.Nullable
  public String getAwsAccessKeyId() {
    return awsAccessKeyId;
  }

  public void setAwsAccessKeyId(@javax.annotation.Nullable String awsAccessKeyId) {
    this.awsAccessKeyId = awsAccessKeyId;
  }


  public DynamicSecretCreateAws awsAccessSecretKey(@javax.annotation.Nullable String awsAccessSecretKey) {
    this.awsAccessSecretKey = awsAccessSecretKey;
    return this;
  }

  /**
   * Secret Access Key
   * @return awsAccessSecretKey
   */
  @javax.annotation.Nullable
  public String getAwsAccessSecretKey() {
    return awsAccessSecretKey;
  }

  public void setAwsAccessSecretKey(@javax.annotation.Nullable String awsAccessSecretKey) {
    this.awsAccessSecretKey = awsAccessSecretKey;
  }


  public DynamicSecretCreateAws awsExternalId(@javax.annotation.Nullable String awsExternalId) {
    this.awsExternalId = awsExternalId;
    return this;
  }

  /**
   * The AWS External ID associated with the AWS role (relevant only for assume_role mode)
   * @return awsExternalId
   */
  @javax.annotation.Nullable
  public String getAwsExternalId() {
    return awsExternalId;
  }

  public void setAwsExternalId(@javax.annotation.Nullable String awsExternalId) {
    this.awsExternalId = awsExternalId;
  }


  public DynamicSecretCreateAws awsRoleArns(@javax.annotation.Nullable String awsRoleArns) {
    this.awsRoleArns = awsRoleArns;
    return this;
  }

  /**
   * AWS Role ARNs to be used in the Assume Role operation (relevant only for assume_role mode)
   * @return awsRoleArns
   */
  @javax.annotation.Nullable
  public String getAwsRoleArns() {
    return awsRoleArns;
  }

  public void setAwsRoleArns(@javax.annotation.Nullable String awsRoleArns) {
    this.awsRoleArns = awsRoleArns;
  }


  public DynamicSecretCreateAws awsUserConsoleAccess(@javax.annotation.Nullable Boolean awsUserConsoleAccess) {
    this.awsUserConsoleAccess = awsUserConsoleAccess;
    return this;
  }

  /**
   * AWS User console access
   * @return awsUserConsoleAccess
   */
  @javax.annotation.Nullable
  public Boolean getAwsUserConsoleAccess() {
    return awsUserConsoleAccess;
  }

  public void setAwsUserConsoleAccess(@javax.annotation.Nullable Boolean awsUserConsoleAccess) {
    this.awsUserConsoleAccess = awsUserConsoleAccess;
  }


  public DynamicSecretCreateAws awsUserGroups(@javax.annotation.Nullable String awsUserGroups) {
    this.awsUserGroups = awsUserGroups;
    return this;
  }

  /**
   * AWS User groups
   * @return awsUserGroups
   */
  @javax.annotation.Nullable
  public String getAwsUserGroups() {
    return awsUserGroups;
  }

  public void setAwsUserGroups(@javax.annotation.Nullable String awsUserGroups) {
    this.awsUserGroups = awsUserGroups;
  }


  public DynamicSecretCreateAws awsUserPolicies(@javax.annotation.Nullable String awsUserPolicies) {
    this.awsUserPolicies = awsUserPolicies;
    return this;
  }

  /**
   * AWS User policies
   * @return awsUserPolicies
   */
  @javax.annotation.Nullable
  public String getAwsUserPolicies() {
    return awsUserPolicies;
  }

  public void setAwsUserPolicies(@javax.annotation.Nullable String awsUserPolicies) {
    this.awsUserPolicies = awsUserPolicies;
  }


  public DynamicSecretCreateAws awsUserProgrammaticAccess(@javax.annotation.Nullable Boolean awsUserProgrammaticAccess) {
    this.awsUserProgrammaticAccess = awsUserProgrammaticAccess;
    return this;
  }

  /**
   * Enable AWS User programmatic access
   * @return awsUserProgrammaticAccess
   */
  @javax.annotation.Nullable
  public Boolean getAwsUserProgrammaticAccess() {
    return awsUserProgrammaticAccess;
  }

  public void setAwsUserProgrammaticAccess(@javax.annotation.Nullable Boolean awsUserProgrammaticAccess) {
    this.awsUserProgrammaticAccess = awsUserProgrammaticAccess;
  }


  public DynamicSecretCreateAws customUsernameTemplate(@javax.annotation.Nullable String customUsernameTemplate) {
    this.customUsernameTemplate = customUsernameTemplate;
    return this;
  }

  /**
   * Customize how temporary usernames are generated using go template
   * @return customUsernameTemplate
   */
  @javax.annotation.Nullable
  public String getCustomUsernameTemplate() {
    return customUsernameTemplate;
  }

  public void setCustomUsernameTemplate(@javax.annotation.Nullable String customUsernameTemplate) {
    this.customUsernameTemplate = customUsernameTemplate;
  }


  public DynamicSecretCreateAws deleteProtection(@javax.annotation.Nullable String deleteProtection) {
    this.deleteProtection = deleteProtection;
    return this;
  }

  /**
   * Protection from accidental deletion of this object [true/false]
   * @return deleteProtection
   */
  @javax.annotation.Nullable
  public String getDeleteProtection() {
    return deleteProtection;
  }

  public void setDeleteProtection(@javax.annotation.Nullable String deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public DynamicSecretCreateAws description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the object
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public DynamicSecretCreateAws enableAdminRotation(@javax.annotation.Nullable Boolean enableAdminRotation) {
    this.enableAdminRotation = enableAdminRotation;
    return this;
  }

  /**
   * Automatic admin credentials rotation
   * @return enableAdminRotation
   */
  @javax.annotation.Nullable
  public Boolean getEnableAdminRotation() {
    return enableAdminRotation;
  }

  public void setEnableAdminRotation(@javax.annotation.Nullable Boolean enableAdminRotation) {
    this.enableAdminRotation = enableAdminRotation;
  }


  public DynamicSecretCreateAws json(@javax.annotation.Nullable Boolean json) {
    this.json = json;
    return this;
  }

  /**
   * Set output format to JSON
   * @return json
   */
  @javax.annotation.Nullable
  public Boolean getJson() {
    return json;
  }

  public void setJson(@javax.annotation.Nullable Boolean json) {
    this.json = json;
  }


  public DynamicSecretCreateAws name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Dynamic secret name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public DynamicSecretCreateAws passwordLength(@javax.annotation.Nullable String passwordLength) {
    this.passwordLength = passwordLength;
    return this;
  }

  /**
   * The length of the password to be generated
   * @return passwordLength
   */
  @javax.annotation.Nullable
  public String getPasswordLength() {
    return passwordLength;
  }

  public void setPasswordLength(@javax.annotation.Nullable String passwordLength) {
    this.passwordLength = passwordLength;
  }


  public DynamicSecretCreateAws producerEncryptionKeyName(@javax.annotation.Nullable String producerEncryptionKeyName) {
    this.producerEncryptionKeyName = producerEncryptionKeyName;
    return this;
  }

  /**
   * Dynamic producer encryption key
   * @return producerEncryptionKeyName
   */
  @javax.annotation.Nullable
  public String getProducerEncryptionKeyName() {
    return producerEncryptionKeyName;
  }

  public void setProducerEncryptionKeyName(@javax.annotation.Nullable String producerEncryptionKeyName) {
    this.producerEncryptionKeyName = producerEncryptionKeyName;
  }


  public DynamicSecretCreateAws region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * Region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public DynamicSecretCreateAws secureAccessAwsAccountId(@javax.annotation.Nullable String secureAccessAwsAccountId) {
    this.secureAccessAwsAccountId = secureAccessAwsAccountId;
    return this;
  }

  /**
   * The AWS account id
   * @return secureAccessAwsAccountId
   */
  @javax.annotation.Nullable
  public String getSecureAccessAwsAccountId() {
    return secureAccessAwsAccountId;
  }

  public void setSecureAccessAwsAccountId(@javax.annotation.Nullable String secureAccessAwsAccountId) {
    this.secureAccessAwsAccountId = secureAccessAwsAccountId;
  }


  public DynamicSecretCreateAws secureAccessAwsNativeCli(@javax.annotation.Nullable Boolean secureAccessAwsNativeCli) {
    this.secureAccessAwsNativeCli = secureAccessAwsNativeCli;
    return this;
  }

  /**
   * The AWS native cli
   * @return secureAccessAwsNativeCli
   */
  @javax.annotation.Nullable
  public Boolean getSecureAccessAwsNativeCli() {
    return secureAccessAwsNativeCli;
  }

  public void setSecureAccessAwsNativeCli(@javax.annotation.Nullable Boolean secureAccessAwsNativeCli) {
    this.secureAccessAwsNativeCli = secureAccessAwsNativeCli;
  }


  public DynamicSecretCreateAws secureAccessBastionIssuer(@javax.annotation.Nullable String secureAccessBastionIssuer) {
    this.secureAccessBastionIssuer = secureAccessBastionIssuer;
    return this;
  }

  /**
   * Deprecated. use secure-access-certificate-issuer
   * @return secureAccessBastionIssuer
   */
  @javax.annotation.Nullable
  public String getSecureAccessBastionIssuer() {
    return secureAccessBastionIssuer;
  }

  public void setSecureAccessBastionIssuer(@javax.annotation.Nullable String secureAccessBastionIssuer) {
    this.secureAccessBastionIssuer = secureAccessBastionIssuer;
  }


  public DynamicSecretCreateAws secureAccessCertificateIssuer(@javax.annotation.Nullable String secureAccessCertificateIssuer) {
    this.secureAccessCertificateIssuer = secureAccessCertificateIssuer;
    return this;
  }

  /**
   * Path to the SSH Certificate Issuer for your Akeyless Secure Access
   * @return secureAccessCertificateIssuer
   */
  @javax.annotation.Nullable
  public String getSecureAccessCertificateIssuer() {
    return secureAccessCertificateIssuer;
  }

  public void setSecureAccessCertificateIssuer(@javax.annotation.Nullable String secureAccessCertificateIssuer) {
    this.secureAccessCertificateIssuer = secureAccessCertificateIssuer;
  }


  public DynamicSecretCreateAws secureAccessDelay(@javax.annotation.Nullable Long secureAccessDelay) {
    this.secureAccessDelay = secureAccessDelay;
    return this;
  }

  /**
   * The delay duration, in seconds, to wait after generating just-in-time credentials. Accepted range: 0-120 seconds
   * @return secureAccessDelay
   */
  @javax.annotation.Nullable
  public Long getSecureAccessDelay() {
    return secureAccessDelay;
  }

  public void setSecureAccessDelay(@javax.annotation.Nullable Long secureAccessDelay) {
    this.secureAccessDelay = secureAccessDelay;
  }


  public DynamicSecretCreateAws secureAccessEnable(@javax.annotation.Nullable String secureAccessEnable) {
    this.secureAccessEnable = secureAccessEnable;
    return this;
  }

  /**
   * Enable/Disable secure remote access [true/false]
   * @return secureAccessEnable
   */
  @javax.annotation.Nullable
  public String getSecureAccessEnable() {
    return secureAccessEnable;
  }

  public void setSecureAccessEnable(@javax.annotation.Nullable String secureAccessEnable) {
    this.secureAccessEnable = secureAccessEnable;
  }


  public DynamicSecretCreateAws secureAccessWeb(@javax.annotation.Nullable Boolean secureAccessWeb) {
    this.secureAccessWeb = secureAccessWeb;
    return this;
  }

  /**
   * Enable Web Secure Remote Access
   * @return secureAccessWeb
   */
  @javax.annotation.Nullable
  public Boolean getSecureAccessWeb() {
    return secureAccessWeb;
  }

  public void setSecureAccessWeb(@javax.annotation.Nullable Boolean secureAccessWeb) {
    this.secureAccessWeb = secureAccessWeb;
  }


  public DynamicSecretCreateAws secureAccessWebBrowsing(@javax.annotation.Nullable Boolean secureAccessWebBrowsing) {
    this.secureAccessWebBrowsing = secureAccessWebBrowsing;
    return this;
  }

  /**
   * Secure browser via Akeyless&#39;s Secure Remote Access (SRA)
   * @return secureAccessWebBrowsing
   */
  @javax.annotation.Nullable
  public Boolean getSecureAccessWebBrowsing() {
    return secureAccessWebBrowsing;
  }

  public void setSecureAccessWebBrowsing(@javax.annotation.Nullable Boolean secureAccessWebBrowsing) {
    this.secureAccessWebBrowsing = secureAccessWebBrowsing;
  }


  public DynamicSecretCreateAws secureAccessWebProxy(@javax.annotation.Nullable Boolean secureAccessWebProxy) {
    this.secureAccessWebProxy = secureAccessWebProxy;
    return this;
  }

  /**
   * Web-Proxy via Akeyless&#39;s Secure Remote Access (SRA)
   * @return secureAccessWebProxy
   */
  @javax.annotation.Nullable
  public Boolean getSecureAccessWebProxy() {
    return secureAccessWebProxy;
  }

  public void setSecureAccessWebProxy(@javax.annotation.Nullable Boolean secureAccessWebProxy) {
    this.secureAccessWebProxy = secureAccessWebProxy;
  }


  public DynamicSecretCreateAws sessionTags(@javax.annotation.Nullable String sessionTags) {
    this.sessionTags = sessionTags;
    return this;
  }

  /**
   * String of Key value session tags comma separated, relevant only for Assumed Role
   * @return sessionTags
   */
  @javax.annotation.Nullable
  public String getSessionTags() {
    return sessionTags;
  }

  public void setSessionTags(@javax.annotation.Nullable String sessionTags) {
    this.sessionTags = sessionTags;
  }


  public DynamicSecretCreateAws tags(@javax.annotation.Nullable List<String> tags) {
    this.tags = tags;
    return this;
  }

  public DynamicSecretCreateAws addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Add tags attached to this object
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(@javax.annotation.Nullable List<String> tags) {
    this.tags = tags;
  }


  public DynamicSecretCreateAws targetName(@javax.annotation.Nullable String targetName) {
    this.targetName = targetName;
    return this;
  }

  /**
   * Target name
   * @return targetName
   */
  @javax.annotation.Nullable
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(@javax.annotation.Nullable String targetName) {
    this.targetName = targetName;
  }


  public DynamicSecretCreateAws token(@javax.annotation.Nullable String token) {
    this.token = token;
    return this;
  }

  /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
   */
  @javax.annotation.Nullable
  public String getToken() {
    return token;
  }

  public void setToken(@javax.annotation.Nullable String token) {
    this.token = token;
  }


  public DynamicSecretCreateAws transitiveTagKeys(@javax.annotation.Nullable String transitiveTagKeys) {
    this.transitiveTagKeys = transitiveTagKeys;
    return this;
  }

  /**
   * String of transitive tag keys space separated, relevant only for Assumed Role
   * @return transitiveTagKeys
   */
  @javax.annotation.Nullable
  public String getTransitiveTagKeys() {
    return transitiveTagKeys;
  }

  public void setTransitiveTagKeys(@javax.annotation.Nullable String transitiveTagKeys) {
    this.transitiveTagKeys = transitiveTagKeys;
  }


  public DynamicSecretCreateAws uidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
    return this;
  }

  /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
   */
  @javax.annotation.Nullable
  public String getUidToken() {
    return uidToken;
  }

  public void setUidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
  }


  public DynamicSecretCreateAws userTtl(@javax.annotation.Nullable String userTtl) {
    this.userTtl = userTtl;
    return this;
  }

  /**
   * User TTL
   * @return userTtl
   */
  @javax.annotation.Nullable
  public String getUserTtl() {
    return userTtl;
  }

  public void setUserTtl(@javax.annotation.Nullable String userTtl) {
    this.userTtl = userTtl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicSecretCreateAws dynamicSecretCreateAws = (DynamicSecretCreateAws) o;
    return Objects.equals(this.accessMode, dynamicSecretCreateAws.accessMode) &&
        Objects.equals(this.adminRotationIntervalDays, dynamicSecretCreateAws.adminRotationIntervalDays) &&
        Objects.equals(this.awsAccessKeyId, dynamicSecretCreateAws.awsAccessKeyId) &&
        Objects.equals(this.awsAccessSecretKey, dynamicSecretCreateAws.awsAccessSecretKey) &&
        Objects.equals(this.awsExternalId, dynamicSecretCreateAws.awsExternalId) &&
        Objects.equals(this.awsRoleArns, dynamicSecretCreateAws.awsRoleArns) &&
        Objects.equals(this.awsUserConsoleAccess, dynamicSecretCreateAws.awsUserConsoleAccess) &&
        Objects.equals(this.awsUserGroups, dynamicSecretCreateAws.awsUserGroups) &&
        Objects.equals(this.awsUserPolicies, dynamicSecretCreateAws.awsUserPolicies) &&
        Objects.equals(this.awsUserProgrammaticAccess, dynamicSecretCreateAws.awsUserProgrammaticAccess) &&
        Objects.equals(this.customUsernameTemplate, dynamicSecretCreateAws.customUsernameTemplate) &&
        Objects.equals(this.deleteProtection, dynamicSecretCreateAws.deleteProtection) &&
        Objects.equals(this.description, dynamicSecretCreateAws.description) &&
        Objects.equals(this.enableAdminRotation, dynamicSecretCreateAws.enableAdminRotation) &&
        Objects.equals(this.json, dynamicSecretCreateAws.json) &&
        Objects.equals(this.name, dynamicSecretCreateAws.name) &&
        Objects.equals(this.passwordLength, dynamicSecretCreateAws.passwordLength) &&
        Objects.equals(this.producerEncryptionKeyName, dynamicSecretCreateAws.producerEncryptionKeyName) &&
        Objects.equals(this.region, dynamicSecretCreateAws.region) &&
        Objects.equals(this.secureAccessAwsAccountId, dynamicSecretCreateAws.secureAccessAwsAccountId) &&
        Objects.equals(this.secureAccessAwsNativeCli, dynamicSecretCreateAws.secureAccessAwsNativeCli) &&
        Objects.equals(this.secureAccessBastionIssuer, dynamicSecretCreateAws.secureAccessBastionIssuer) &&
        Objects.equals(this.secureAccessCertificateIssuer, dynamicSecretCreateAws.secureAccessCertificateIssuer) &&
        Objects.equals(this.secureAccessDelay, dynamicSecretCreateAws.secureAccessDelay) &&
        Objects.equals(this.secureAccessEnable, dynamicSecretCreateAws.secureAccessEnable) &&
        Objects.equals(this.secureAccessWeb, dynamicSecretCreateAws.secureAccessWeb) &&
        Objects.equals(this.secureAccessWebBrowsing, dynamicSecretCreateAws.secureAccessWebBrowsing) &&
        Objects.equals(this.secureAccessWebProxy, dynamicSecretCreateAws.secureAccessWebProxy) &&
        Objects.equals(this.sessionTags, dynamicSecretCreateAws.sessionTags) &&
        Objects.equals(this.tags, dynamicSecretCreateAws.tags) &&
        Objects.equals(this.targetName, dynamicSecretCreateAws.targetName) &&
        Objects.equals(this.token, dynamicSecretCreateAws.token) &&
        Objects.equals(this.transitiveTagKeys, dynamicSecretCreateAws.transitiveTagKeys) &&
        Objects.equals(this.uidToken, dynamicSecretCreateAws.uidToken) &&
        Objects.equals(this.userTtl, dynamicSecretCreateAws.userTtl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessMode, adminRotationIntervalDays, awsAccessKeyId, awsAccessSecretKey, awsExternalId, awsRoleArns, awsUserConsoleAccess, awsUserGroups, awsUserPolicies, awsUserProgrammaticAccess, customUsernameTemplate, deleteProtection, description, enableAdminRotation, json, name, passwordLength, producerEncryptionKeyName, region, secureAccessAwsAccountId, secureAccessAwsNativeCli, secureAccessBastionIssuer, secureAccessCertificateIssuer, secureAccessDelay, secureAccessEnable, secureAccessWeb, secureAccessWebBrowsing, secureAccessWebProxy, sessionTags, tags, targetName, token, transitiveTagKeys, uidToken, userTtl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicSecretCreateAws {\n");
    sb.append("    accessMode: ").append(toIndentedString(accessMode)).append("\n");
    sb.append("    adminRotationIntervalDays: ").append(toIndentedString(adminRotationIntervalDays)).append("\n");
    sb.append("    awsAccessKeyId: ").append(toIndentedString(awsAccessKeyId)).append("\n");
    sb.append("    awsAccessSecretKey: ").append(toIndentedString(awsAccessSecretKey)).append("\n");
    sb.append("    awsExternalId: ").append(toIndentedString(awsExternalId)).append("\n");
    sb.append("    awsRoleArns: ").append(toIndentedString(awsRoleArns)).append("\n");
    sb.append("    awsUserConsoleAccess: ").append(toIndentedString(awsUserConsoleAccess)).append("\n");
    sb.append("    awsUserGroups: ").append(toIndentedString(awsUserGroups)).append("\n");
    sb.append("    awsUserPolicies: ").append(toIndentedString(awsUserPolicies)).append("\n");
    sb.append("    awsUserProgrammaticAccess: ").append(toIndentedString(awsUserProgrammaticAccess)).append("\n");
    sb.append("    customUsernameTemplate: ").append(toIndentedString(customUsernameTemplate)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enableAdminRotation: ").append(toIndentedString(enableAdminRotation)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    passwordLength: ").append(toIndentedString(passwordLength)).append("\n");
    sb.append("    producerEncryptionKeyName: ").append(toIndentedString(producerEncryptionKeyName)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    secureAccessAwsAccountId: ").append(toIndentedString(secureAccessAwsAccountId)).append("\n");
    sb.append("    secureAccessAwsNativeCli: ").append(toIndentedString(secureAccessAwsNativeCli)).append("\n");
    sb.append("    secureAccessBastionIssuer: ").append(toIndentedString(secureAccessBastionIssuer)).append("\n");
    sb.append("    secureAccessCertificateIssuer: ").append(toIndentedString(secureAccessCertificateIssuer)).append("\n");
    sb.append("    secureAccessDelay: ").append(toIndentedString(secureAccessDelay)).append("\n");
    sb.append("    secureAccessEnable: ").append(toIndentedString(secureAccessEnable)).append("\n");
    sb.append("    secureAccessWeb: ").append(toIndentedString(secureAccessWeb)).append("\n");
    sb.append("    secureAccessWebBrowsing: ").append(toIndentedString(secureAccessWebBrowsing)).append("\n");
    sb.append("    secureAccessWebProxy: ").append(toIndentedString(secureAccessWebProxy)).append("\n");
    sb.append("    sessionTags: ").append(toIndentedString(sessionTags)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    transitiveTagKeys: ").append(toIndentedString(transitiveTagKeys)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    userTtl: ").append(toIndentedString(userTtl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access-mode");
    openapiFields.add("admin-rotation-interval-days");
    openapiFields.add("aws-access-key-id");
    openapiFields.add("aws-access-secret-key");
    openapiFields.add("aws-external-id");
    openapiFields.add("aws-role-arns");
    openapiFields.add("aws-user-console-access");
    openapiFields.add("aws-user-groups");
    openapiFields.add("aws-user-policies");
    openapiFields.add("aws-user-programmatic-access");
    openapiFields.add("custom-username-template");
    openapiFields.add("delete_protection");
    openapiFields.add("description");
    openapiFields.add("enable-admin-rotation");
    openapiFields.add("json");
    openapiFields.add("name");
    openapiFields.add("password-length");
    openapiFields.add("producer-encryption-key-name");
    openapiFields.add("region");
    openapiFields.add("secure-access-aws-account-id");
    openapiFields.add("secure-access-aws-native-cli");
    openapiFields.add("secure-access-bastion-issuer");
    openapiFields.add("secure-access-certificate-issuer");
    openapiFields.add("secure-access-delay");
    openapiFields.add("secure-access-enable");
    openapiFields.add("secure-access-web");
    openapiFields.add("secure-access-web-browsing");
    openapiFields.add("secure-access-web-proxy");
    openapiFields.add("session-tags");
    openapiFields.add("tags");
    openapiFields.add("target-name");
    openapiFields.add("token");
    openapiFields.add("transitive-tag-keys");
    openapiFields.add("uid-token");
    openapiFields.add("user-ttl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DynamicSecretCreateAws
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DynamicSecretCreateAws.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DynamicSecretCreateAws is not found in the empty JSON string", DynamicSecretCreateAws.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DynamicSecretCreateAws.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DynamicSecretCreateAws` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DynamicSecretCreateAws.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("access-mode") != null && !jsonObj.get("access-mode").isJsonNull()) && !jsonObj.get("access-mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access-mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access-mode").toString()));
      }
      if ((jsonObj.get("aws-access-key-id") != null && !jsonObj.get("aws-access-key-id").isJsonNull()) && !jsonObj.get("aws-access-key-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-access-key-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-access-key-id").toString()));
      }
      if ((jsonObj.get("aws-access-secret-key") != null && !jsonObj.get("aws-access-secret-key").isJsonNull()) && !jsonObj.get("aws-access-secret-key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-access-secret-key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-access-secret-key").toString()));
      }
      if ((jsonObj.get("aws-external-id") != null && !jsonObj.get("aws-external-id").isJsonNull()) && !jsonObj.get("aws-external-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-external-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-external-id").toString()));
      }
      if ((jsonObj.get("aws-role-arns") != null && !jsonObj.get("aws-role-arns").isJsonNull()) && !jsonObj.get("aws-role-arns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-role-arns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-role-arns").toString()));
      }
      if ((jsonObj.get("aws-user-groups") != null && !jsonObj.get("aws-user-groups").isJsonNull()) && !jsonObj.get("aws-user-groups").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-user-groups` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-user-groups").toString()));
      }
      if ((jsonObj.get("aws-user-policies") != null && !jsonObj.get("aws-user-policies").isJsonNull()) && !jsonObj.get("aws-user-policies").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws-user-policies` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws-user-policies").toString()));
      }
      if ((jsonObj.get("custom-username-template") != null && !jsonObj.get("custom-username-template").isJsonNull()) && !jsonObj.get("custom-username-template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom-username-template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom-username-template").toString()));
      }
      if ((jsonObj.get("delete_protection") != null && !jsonObj.get("delete_protection").isJsonNull()) && !jsonObj.get("delete_protection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delete_protection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delete_protection").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("password-length") != null && !jsonObj.get("password-length").isJsonNull()) && !jsonObj.get("password-length").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password-length` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password-length").toString()));
      }
      if ((jsonObj.get("producer-encryption-key-name") != null && !jsonObj.get("producer-encryption-key-name").isJsonNull()) && !jsonObj.get("producer-encryption-key-name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `producer-encryption-key-name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("producer-encryption-key-name").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("secure-access-aws-account-id") != null && !jsonObj.get("secure-access-aws-account-id").isJsonNull()) && !jsonObj.get("secure-access-aws-account-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secure-access-aws-account-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secure-access-aws-account-id").toString()));
      }
      if ((jsonObj.get("secure-access-bastion-issuer") != null && !jsonObj.get("secure-access-bastion-issuer").isJsonNull()) && !jsonObj.get("secure-access-bastion-issuer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secure-access-bastion-issuer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secure-access-bastion-issuer").toString()));
      }
      if ((jsonObj.get("secure-access-certificate-issuer") != null && !jsonObj.get("secure-access-certificate-issuer").isJsonNull()) && !jsonObj.get("secure-access-certificate-issuer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secure-access-certificate-issuer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secure-access-certificate-issuer").toString()));
      }
      if ((jsonObj.get("secure-access-enable") != null && !jsonObj.get("secure-access-enable").isJsonNull()) && !jsonObj.get("secure-access-enable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secure-access-enable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secure-access-enable").toString()));
      }
      if ((jsonObj.get("session-tags") != null && !jsonObj.get("session-tags").isJsonNull()) && !jsonObj.get("session-tags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `session-tags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("session-tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("target-name") != null && !jsonObj.get("target-name").isJsonNull()) && !jsonObj.get("target-name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target-name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target-name").toString()));
      }
      if ((jsonObj.get("token") != null && !jsonObj.get("token").isJsonNull()) && !jsonObj.get("token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token").toString()));
      }
      if ((jsonObj.get("transitive-tag-keys") != null && !jsonObj.get("transitive-tag-keys").isJsonNull()) && !jsonObj.get("transitive-tag-keys").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitive-tag-keys` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transitive-tag-keys").toString()));
      }
      if ((jsonObj.get("uid-token") != null && !jsonObj.get("uid-token").isJsonNull()) && !jsonObj.get("uid-token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid-token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid-token").toString()));
      }
      if ((jsonObj.get("user-ttl") != null && !jsonObj.get("user-ttl").isJsonNull()) && !jsonObj.get("user-ttl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user-ttl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user-ttl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DynamicSecretCreateAws.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DynamicSecretCreateAws' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DynamicSecretCreateAws> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DynamicSecretCreateAws.class));

       return (TypeAdapter<T>) new TypeAdapter<DynamicSecretCreateAws>() {
           @Override
           public void write(JsonWriter out, DynamicSecretCreateAws value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DynamicSecretCreateAws read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DynamicSecretCreateAws given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DynamicSecretCreateAws
   * @throws IOException if the JSON string is invalid with respect to DynamicSecretCreateAws
   */
  public static DynamicSecretCreateAws fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DynamicSecretCreateAws.class);
  }

  /**
   * Convert an instance of DynamicSecretCreateAws to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

