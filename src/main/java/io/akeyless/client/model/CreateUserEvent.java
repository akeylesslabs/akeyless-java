/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateUserEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateUserEvent {
  public static final String SERIALIZED_NAME_CAPABILITIES = "capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  private List<String> capabilities = null;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EVENT_SOURCE = "event-source";
  @SerializedName(SERIALIZED_NAME_EVENT_SOURCE)
  private String eventSource;

  public static final String SERIALIZED_NAME_EVENT_TYPE = "event-type";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private String eventType;

  public static final String SERIALIZED_NAME_ITEM_NAME = "item-name";
  @SerializedName(SERIALIZED_NAME_ITEM_NAME)
  private String itemName;

  public static final String SERIALIZED_NAME_ITEM_TYPE = "item-type";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPE)
  private String itemType;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_REQUEST_ACCESS_TTL = "request-access-ttl";
  @SerializedName(SERIALIZED_NAME_REQUEST_ACCESS_TTL)
  private Long requestAccessTtl;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public CreateUserEvent() { 
  }

  public CreateUserEvent capabilities(List<String> capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

  public CreateUserEvent addCapabilitiesItem(String capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new ArrayList<String>();
    }
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * List of the required capabilities options: [read, update, delete,sra_transparently_connect]. Relevant only for request-access event types
   * @return capabilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of the required capabilities options: [read, update, delete,sra_transparently_connect]. Relevant only for request-access event types")

  public List<String> getCapabilities() {
    return capabilities;
  }


  public void setCapabilities(List<String> capabilities) {
    this.capabilities = capabilities;
  }


  public CreateUserEvent comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Deprecated - use description
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated - use description")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public CreateUserEvent description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the object
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the object")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreateUserEvent eventSource(String eventSource) {
    
    this.eventSource = eventSource;
    return this;
  }

   /**
   * Get eventSource
   * @return eventSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEventSource() {
    return eventSource;
  }


  public void setEventSource(String eventSource) {
    this.eventSource = eventSource;
  }


  public CreateUserEvent eventType(String eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getEventType() {
    return eventType;
  }


  public void setEventType(String eventType) {
    this.eventType = eventType;
  }


  public CreateUserEvent itemName(String itemName) {
    
    this.itemName = itemName;
    return this;
  }

   /**
   * Event item name
   * @return itemName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Event item name")

  public String getItemName() {
    return itemName;
  }


  public void setItemName(String itemName) {
    this.itemName = itemName;
  }


  public CreateUserEvent itemType(String itemType) {
    
    this.itemType = itemType;
    return this;
  }

   /**
   * Event item type can be either \&quot;target\&quot; or type of item eg \&quot;static_secret\&quot;/\&quot;dynamic_secret\&quot; To get type of some item run &#x60;akeyless describe-item -n {ITEM_NAME} --jq-expression .item_type&#x60;
   * @return itemType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Event item type can be either \"target\" or type of item eg \"static_secret\"/\"dynamic_secret\" To get type of some item run `akeyless describe-item -n {ITEM_NAME} --jq-expression .item_type`")

  public String getItemType() {
    return itemType;
  }


  public void setItemType(String itemType) {
    this.itemType = itemType;
  }


  public CreateUserEvent json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public CreateUserEvent requestAccessTtl(Long requestAccessTtl) {
    
    this.requestAccessTtl = requestAccessTtl;
    return this;
  }

   /**
   * TTL in minutes for how long to grant the requested access
   * @return requestAccessTtl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TTL in minutes for how long to grant the requested access")

  public Long getRequestAccessTtl() {
    return requestAccessTtl;
  }


  public void setRequestAccessTtl(Long requestAccessTtl) {
    this.requestAccessTtl = requestAccessTtl;
  }


  public CreateUserEvent token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public CreateUserEvent uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateUserEvent createUserEvent = (CreateUserEvent) o;
    return Objects.equals(this.capabilities, createUserEvent.capabilities) &&
        Objects.equals(this.comment, createUserEvent.comment) &&
        Objects.equals(this.description, createUserEvent.description) &&
        Objects.equals(this.eventSource, createUserEvent.eventSource) &&
        Objects.equals(this.eventType, createUserEvent.eventType) &&
        Objects.equals(this.itemName, createUserEvent.itemName) &&
        Objects.equals(this.itemType, createUserEvent.itemType) &&
        Objects.equals(this.json, createUserEvent.json) &&
        Objects.equals(this.requestAccessTtl, createUserEvent.requestAccessTtl) &&
        Objects.equals(this.token, createUserEvent.token) &&
        Objects.equals(this.uidToken, createUserEvent.uidToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capabilities, comment, description, eventSource, eventType, itemName, itemType, json, requestAccessTtl, token, uidToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateUserEvent {\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    eventSource: ").append(toIndentedString(eventSource)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    requestAccessTtl: ").append(toIndentedString(requestAccessTtl)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

