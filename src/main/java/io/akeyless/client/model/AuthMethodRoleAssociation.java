/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.Rules;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * AuthMethodRoleAssociation includes details of an association between an auth method and a role.
 */
@ApiModel(description = "AuthMethodRoleAssociation includes details of an association between an auth method and a role.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AuthMethodRoleAssociation {
  public static final String SERIALIZED_NAME_ALLOWED_OPS = "allowed_ops";
  @SerializedName(SERIALIZED_NAME_ALLOWED_OPS)
  private List<String> allowedOps = null;

  public static final String SERIALIZED_NAME_ASSOC_ID = "assoc_id";
  @SerializedName(SERIALIZED_NAME_ASSOC_ID)
  private String assocId;

  public static final String SERIALIZED_NAME_AUTH_METHOD_SUB_CLAIMS = "auth_method_sub_claims";
  @SerializedName(SERIALIZED_NAME_AUTH_METHOD_SUB_CLAIMS)
  private Map<String, List<String>> authMethodSubClaims = null;

  public static final String SERIALIZED_NAME_ROLE_NAME = "role_name";
  @SerializedName(SERIALIZED_NAME_ROLE_NAME)
  private String roleName;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private Rules rules;

  public AuthMethodRoleAssociation() { 
  }

  public AuthMethodRoleAssociation allowedOps(List<String> allowedOps) {
    
    this.allowedOps = allowedOps;
    return this;
  }

  public AuthMethodRoleAssociation addAllowedOpsItem(String allowedOpsItem) {
    if (this.allowedOps == null) {
      this.allowedOps = new ArrayList<String>();
    }
    this.allowedOps.add(allowedOpsItem);
    return this;
  }

   /**
   * Get allowedOps
   * @return allowedOps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getAllowedOps() {
    return allowedOps;
  }


  public void setAllowedOps(List<String> allowedOps) {
    this.allowedOps = allowedOps;
  }


  public AuthMethodRoleAssociation assocId(String assocId) {
    
    this.assocId = assocId;
    return this;
  }

   /**
   * Get assocId
   * @return assocId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAssocId() {
    return assocId;
  }


  public void setAssocId(String assocId) {
    this.assocId = assocId;
  }


  public AuthMethodRoleAssociation authMethodSubClaims(Map<String, List<String>> authMethodSubClaims) {
    
    this.authMethodSubClaims = authMethodSubClaims;
    return this;
  }

  public AuthMethodRoleAssociation putAuthMethodSubClaimsItem(String key, List<String> authMethodSubClaimsItem) {
    if (this.authMethodSubClaims == null) {
      this.authMethodSubClaims = new HashMap<String, List<String>>();
    }
    this.authMethodSubClaims.put(key, authMethodSubClaimsItem);
    return this;
  }

   /**
   * Get authMethodSubClaims
   * @return authMethodSubClaims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, List<String>> getAuthMethodSubClaims() {
    return authMethodSubClaims;
  }


  public void setAuthMethodSubClaims(Map<String, List<String>> authMethodSubClaims) {
    this.authMethodSubClaims = authMethodSubClaims;
  }


  public AuthMethodRoleAssociation roleName(String roleName) {
    
    this.roleName = roleName;
    return this;
  }

   /**
   * Get roleName
   * @return roleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRoleName() {
    return roleName;
  }


  public void setRoleName(String roleName) {
    this.roleName = roleName;
  }


  public AuthMethodRoleAssociation rules(Rules rules) {
    
    this.rules = rules;
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Rules getRules() {
    return rules;
  }


  public void setRules(Rules rules) {
    this.rules = rules;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthMethodRoleAssociation authMethodRoleAssociation = (AuthMethodRoleAssociation) o;
    return Objects.equals(this.allowedOps, authMethodRoleAssociation.allowedOps) &&
        Objects.equals(this.assocId, authMethodRoleAssociation.assocId) &&
        Objects.equals(this.authMethodSubClaims, authMethodRoleAssociation.authMethodSubClaims) &&
        Objects.equals(this.roleName, authMethodRoleAssociation.roleName) &&
        Objects.equals(this.rules, authMethodRoleAssociation.rules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedOps, assocId, authMethodSubClaims, roleName, rules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthMethodRoleAssociation {\n");
    sb.append("    allowedOps: ").append(toIndentedString(allowedOps)).append("\n");
    sb.append("    assocId: ").append(toIndentedString(assocId)).append("\n");
    sb.append("    authMethodSubClaims: ").append(toIndentedString(authMethodSubClaims)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

