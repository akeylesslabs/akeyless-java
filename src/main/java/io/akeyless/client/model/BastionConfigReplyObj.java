/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.BastionGlobalConf;
import io.akeyless.client.model.SshBastionConf;
import io.akeyless.client.model.WebBastionConf;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * BastionConfigReplyObj
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class BastionConfigReplyObj {
  public static final String SERIALIZED_NAME_API_GATEWAY_URL = "api_gateway_url";
  @SerializedName(SERIALIZED_NAME_API_GATEWAY_URL)
  @javax.annotation.Nullable
  private String apiGatewayUrl;

  public static final String SERIALIZED_NAME_CLUSTER_ID = "cluster_id";
  @SerializedName(SERIALIZED_NAME_CLUSTER_ID)
  @javax.annotation.Nullable
  private String clusterId;

  public static final String SERIALIZED_NAME_GATOR_CLUSTER_ID = "gator_cluster_id";
  @SerializedName(SERIALIZED_NAME_GATOR_CLUSTER_ID)
  @javax.annotation.Nullable
  private Long gatorClusterId;

  public static final String SERIALIZED_NAME_GLOBAL = "global";
  @SerializedName(SERIALIZED_NAME_GLOBAL)
  @javax.annotation.Nullable
  private BastionGlobalConf global;

  public static final String SERIALIZED_NAME_SSH_BASTION = "ssh_bastion";
  @SerializedName(SERIALIZED_NAME_SSH_BASTION)
  @javax.annotation.Nullable
  private SshBastionConf sshBastion;

  public static final String SERIALIZED_NAME_WEB_BASTION = "web_bastion";
  @SerializedName(SERIALIZED_NAME_WEB_BASTION)
  @javax.annotation.Nullable
  private WebBastionConf webBastion;

  public BastionConfigReplyObj() {
  }

  public BastionConfigReplyObj apiGatewayUrl(@javax.annotation.Nullable String apiGatewayUrl) {
    this.apiGatewayUrl = apiGatewayUrl;
    return this;
  }

  /**
   * Get apiGatewayUrl
   * @return apiGatewayUrl
   */
  @javax.annotation.Nullable
  public String getApiGatewayUrl() {
    return apiGatewayUrl;
  }

  public void setApiGatewayUrl(@javax.annotation.Nullable String apiGatewayUrl) {
    this.apiGatewayUrl = apiGatewayUrl;
  }


  public BastionConfigReplyObj clusterId(@javax.annotation.Nullable String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

  /**
   * Get clusterId
   * @return clusterId
   */
  @javax.annotation.Nullable
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(@javax.annotation.Nullable String clusterId) {
    this.clusterId = clusterId;
  }


  public BastionConfigReplyObj gatorClusterId(@javax.annotation.Nullable Long gatorClusterId) {
    this.gatorClusterId = gatorClusterId;
    return this;
  }

  /**
   * Get gatorClusterId
   * @return gatorClusterId
   */
  @javax.annotation.Nullable
  public Long getGatorClusterId() {
    return gatorClusterId;
  }

  public void setGatorClusterId(@javax.annotation.Nullable Long gatorClusterId) {
    this.gatorClusterId = gatorClusterId;
  }


  public BastionConfigReplyObj global(@javax.annotation.Nullable BastionGlobalConf global) {
    this.global = global;
    return this;
  }

  /**
   * Get global
   * @return global
   */
  @javax.annotation.Nullable
  public BastionGlobalConf getGlobal() {
    return global;
  }

  public void setGlobal(@javax.annotation.Nullable BastionGlobalConf global) {
    this.global = global;
  }


  public BastionConfigReplyObj sshBastion(@javax.annotation.Nullable SshBastionConf sshBastion) {
    this.sshBastion = sshBastion;
    return this;
  }

  /**
   * Get sshBastion
   * @return sshBastion
   */
  @javax.annotation.Nullable
  public SshBastionConf getSshBastion() {
    return sshBastion;
  }

  public void setSshBastion(@javax.annotation.Nullable SshBastionConf sshBastion) {
    this.sshBastion = sshBastion;
  }


  public BastionConfigReplyObj webBastion(@javax.annotation.Nullable WebBastionConf webBastion) {
    this.webBastion = webBastion;
    return this;
  }

  /**
   * Get webBastion
   * @return webBastion
   */
  @javax.annotation.Nullable
  public WebBastionConf getWebBastion() {
    return webBastion;
  }

  public void setWebBastion(@javax.annotation.Nullable WebBastionConf webBastion) {
    this.webBastion = webBastion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BastionConfigReplyObj bastionConfigReplyObj = (BastionConfigReplyObj) o;
    return Objects.equals(this.apiGatewayUrl, bastionConfigReplyObj.apiGatewayUrl) &&
        Objects.equals(this.clusterId, bastionConfigReplyObj.clusterId) &&
        Objects.equals(this.gatorClusterId, bastionConfigReplyObj.gatorClusterId) &&
        Objects.equals(this.global, bastionConfigReplyObj.global) &&
        Objects.equals(this.sshBastion, bastionConfigReplyObj.sshBastion) &&
        Objects.equals(this.webBastion, bastionConfigReplyObj.webBastion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiGatewayUrl, clusterId, gatorClusterId, global, sshBastion, webBastion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BastionConfigReplyObj {\n");
    sb.append("    apiGatewayUrl: ").append(toIndentedString(apiGatewayUrl)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    gatorClusterId: ").append(toIndentedString(gatorClusterId)).append("\n");
    sb.append("    global: ").append(toIndentedString(global)).append("\n");
    sb.append("    sshBastion: ").append(toIndentedString(sshBastion)).append("\n");
    sb.append("    webBastion: ").append(toIndentedString(webBastion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("api_gateway_url");
    openapiFields.add("cluster_id");
    openapiFields.add("gator_cluster_id");
    openapiFields.add("global");
    openapiFields.add("ssh_bastion");
    openapiFields.add("web_bastion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BastionConfigReplyObj
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BastionConfigReplyObj.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BastionConfigReplyObj is not found in the empty JSON string", BastionConfigReplyObj.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BastionConfigReplyObj.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BastionConfigReplyObj` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("api_gateway_url") != null && !jsonObj.get("api_gateway_url").isJsonNull()) && !jsonObj.get("api_gateway_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_gateway_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_gateway_url").toString()));
      }
      if ((jsonObj.get("cluster_id") != null && !jsonObj.get("cluster_id").isJsonNull()) && !jsonObj.get("cluster_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cluster_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cluster_id").toString()));
      }
      // validate the optional field `global`
      if (jsonObj.get("global") != null && !jsonObj.get("global").isJsonNull()) {
        BastionGlobalConf.validateJsonElement(jsonObj.get("global"));
      }
      // validate the optional field `ssh_bastion`
      if (jsonObj.get("ssh_bastion") != null && !jsonObj.get("ssh_bastion").isJsonNull()) {
        SshBastionConf.validateJsonElement(jsonObj.get("ssh_bastion"));
      }
      // validate the optional field `web_bastion`
      if (jsonObj.get("web_bastion") != null && !jsonObj.get("web_bastion").isJsonNull()) {
        WebBastionConf.validateJsonElement(jsonObj.get("web_bastion"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BastionConfigReplyObj.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BastionConfigReplyObj' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BastionConfigReplyObj> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BastionConfigReplyObj.class));

       return (TypeAdapter<T>) new TypeAdapter<BastionConfigReplyObj>() {
           @Override
           public void write(JsonWriter out, BastionConfigReplyObj value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BastionConfigReplyObj read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BastionConfigReplyObj given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BastionConfigReplyObj
   * @throws IOException if the JSON string is invalid with respect to BastionConfigReplyObj
   */
  public static BastionConfigReplyObj fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BastionConfigReplyObj.class);
  }

  /**
   * Convert an instance of BastionConfigReplyObj to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

