/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * of it.
 */
@ApiModel(description = "of it.")

public class RotateKey {
  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEW_CERT_PEM_DATA = "new-cert-pem-data";
  @SerializedName(SERIALIZED_NAME_NEW_CERT_PEM_DATA)
  private String newCertPemData;

  public static final String SERIALIZED_NAME_NEW_KEY_DATA = "new-key-data";
  @SerializedName(SERIALIZED_NAME_NEW_KEY_DATA)
  private String newKeyData;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;


  public RotateKey json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public RotateKey name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Key name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Key name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RotateKey newCertPemData(String newCertPemData) {
    
    this.newCertPemData = newCertPemData;
    return this;
  }

   /**
   * The new pem encoded certificate for the classic key. relevant only for keys provided by user (&#39;bring-your-own-key&#39;)
   * @return newCertPemData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new pem encoded certificate for the classic key. relevant only for keys provided by user ('bring-your-own-key')")

  public String getNewCertPemData() {
    return newCertPemData;
  }


  public void setNewCertPemData(String newCertPemData) {
    this.newCertPemData = newCertPemData;
  }


  public RotateKey newKeyData(String newKeyData) {
    
    this.newKeyData = newKeyData;
    return this;
  }

   /**
   * The new base64 encoded value for the classic key. relevant only for keys provided by user (&#39;bring-your-own-key&#39;)
   * @return newKeyData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new base64 encoded value for the classic key. relevant only for keys provided by user ('bring-your-own-key')")

  public String getNewKeyData() {
    return newKeyData;
  }


  public void setNewKeyData(String newKeyData) {
    this.newKeyData = newKeyData;
  }


  public RotateKey token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public RotateKey uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RotateKey rotateKey = (RotateKey) o;
    return Objects.equals(this.json, rotateKey.json) &&
        Objects.equals(this.name, rotateKey.name) &&
        Objects.equals(this.newCertPemData, rotateKey.newCertPemData) &&
        Objects.equals(this.newKeyData, rotateKey.newKeyData) &&
        Objects.equals(this.token, rotateKey.token) &&
        Objects.equals(this.uidToken, rotateKey.uidToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(json, name, newCertPemData, newKeyData, token, uidToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RotateKey {\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newCertPemData: ").append(toIndentedString(newCertPemData)).append("\n");
    sb.append("    newKeyData: ").append(toIndentedString(newKeyData)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

