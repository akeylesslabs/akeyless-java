/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * DynamicSecretProducerInfo The dynamic secret producer info This parameter relevant and required only in case of create update dynamic secret.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class DynamicSecretProducerInfo {
  public static final String SERIALIZED_NAME_FAILURE_MESSAGE = "failure_message";
  @SerializedName(SERIALIZED_NAME_FAILURE_MESSAGE)
  @javax.annotation.Nullable
  private String failureMessage;

  public static final String SERIALIZED_NAME_GW_CLUSTER_ID = "gw_cluster_id";
  @SerializedName(SERIALIZED_NAME_GW_CLUSTER_ID)
  @javax.annotation.Nullable
  private Long gwClusterId;

  public static final String SERIALIZED_NAME_K8S_ALLOWED_NAMESPACES = "k8s_allowed_namespaces";
  @SerializedName(SERIALIZED_NAME_K8S_ALLOWED_NAMESPACES)
  @javax.annotation.Nullable
  private String k8sAllowedNamespaces;

  public static final String SERIALIZED_NAME_K8S_DYNAMIC_MODE = "k8s_dynamic_mode";
  @SerializedName(SERIALIZED_NAME_K8S_DYNAMIC_MODE)
  @javax.annotation.Nullable
  private Boolean k8sDynamicMode;

  public static final String SERIALIZED_NAME_PRODUCER_LAST_KEEP_ALIVE = "producer_last_keep_alive";
  @SerializedName(SERIALIZED_NAME_PRODUCER_LAST_KEEP_ALIVE)
  @javax.annotation.Nullable
  private String producerLastKeepAlive;

  public static final String SERIALIZED_NAME_PRODUCER_METADATA = "producer_metadata";
  @SerializedName(SERIALIZED_NAME_PRODUCER_METADATA)
  @javax.annotation.Nullable
  private String producerMetadata;

  public static final String SERIALIZED_NAME_PRODUCER_STATUS = "producer_status";
  @SerializedName(SERIALIZED_NAME_PRODUCER_STATUS)
  @javax.annotation.Nullable
  private String producerStatus;

  public static final String SERIALIZED_NAME_PRODUCER_TYPE = "producer_type";
  @SerializedName(SERIALIZED_NAME_PRODUCER_TYPE)
  @javax.annotation.Nullable
  private String producerType;

  public static final String SERIALIZED_NAME_USER_TTL = "user_ttl";
  @SerializedName(SERIALIZED_NAME_USER_TTL)
  @javax.annotation.Nullable
  private String userTtl;

  public DynamicSecretProducerInfo() {
  }

  public DynamicSecretProducerInfo failureMessage(@javax.annotation.Nullable String failureMessage) {
    this.failureMessage = failureMessage;
    return this;
  }

  /**
   * Get failureMessage
   * @return failureMessage
   */
  @javax.annotation.Nullable
  public String getFailureMessage() {
    return failureMessage;
  }

  public void setFailureMessage(@javax.annotation.Nullable String failureMessage) {
    this.failureMessage = failureMessage;
  }


  public DynamicSecretProducerInfo gwClusterId(@javax.annotation.Nullable Long gwClusterId) {
    this.gwClusterId = gwClusterId;
    return this;
  }

  /**
   * Get gwClusterId
   * @return gwClusterId
   */
  @javax.annotation.Nullable
  public Long getGwClusterId() {
    return gwClusterId;
  }

  public void setGwClusterId(@javax.annotation.Nullable Long gwClusterId) {
    this.gwClusterId = gwClusterId;
  }


  public DynamicSecretProducerInfo k8sAllowedNamespaces(@javax.annotation.Nullable String k8sAllowedNamespaces) {
    this.k8sAllowedNamespaces = k8sAllowedNamespaces;
    return this;
  }

  /**
   * Relevant only for generic k8s producer
   * @return k8sAllowedNamespaces
   */
  @javax.annotation.Nullable
  public String getK8sAllowedNamespaces() {
    return k8sAllowedNamespaces;
  }

  public void setK8sAllowedNamespaces(@javax.annotation.Nullable String k8sAllowedNamespaces) {
    this.k8sAllowedNamespaces = k8sAllowedNamespaces;
  }


  public DynamicSecretProducerInfo k8sDynamicMode(@javax.annotation.Nullable Boolean k8sDynamicMode) {
    this.k8sDynamicMode = k8sDynamicMode;
    return this;
  }

  /**
   * Relevant only for generic k8s producer
   * @return k8sDynamicMode
   */
  @javax.annotation.Nullable
  public Boolean getK8sDynamicMode() {
    return k8sDynamicMode;
  }

  public void setK8sDynamicMode(@javax.annotation.Nullable Boolean k8sDynamicMode) {
    this.k8sDynamicMode = k8sDynamicMode;
  }


  public DynamicSecretProducerInfo producerLastKeepAlive(@javax.annotation.Nullable String producerLastKeepAlive) {
    this.producerLastKeepAlive = producerLastKeepAlive;
    return this;
  }

  /**
   * Get producerLastKeepAlive
   * @return producerLastKeepAlive
   */
  @javax.annotation.Nullable
  public String getProducerLastKeepAlive() {
    return producerLastKeepAlive;
  }

  public void setProducerLastKeepAlive(@javax.annotation.Nullable String producerLastKeepAlive) {
    this.producerLastKeepAlive = producerLastKeepAlive;
  }


  public DynamicSecretProducerInfo producerMetadata(@javax.annotation.Nullable String producerMetadata) {
    this.producerMetadata = producerMetadata;
    return this;
  }

  /**
   * Get producerMetadata
   * @return producerMetadata
   */
  @javax.annotation.Nullable
  public String getProducerMetadata() {
    return producerMetadata;
  }

  public void setProducerMetadata(@javax.annotation.Nullable String producerMetadata) {
    this.producerMetadata = producerMetadata;
  }


  public DynamicSecretProducerInfo producerStatus(@javax.annotation.Nullable String producerStatus) {
    this.producerStatus = producerStatus;
    return this;
  }

  /**
   * RotationStatus defines types of rotation Status
   * @return producerStatus
   */
  @javax.annotation.Nullable
  public String getProducerStatus() {
    return producerStatus;
  }

  public void setProducerStatus(@javax.annotation.Nullable String producerStatus) {
    this.producerStatus = producerStatus;
  }


  public DynamicSecretProducerInfo producerType(@javax.annotation.Nullable String producerType) {
    this.producerType = producerType;
    return this;
  }

  /**
   * Get producerType
   * @return producerType
   */
  @javax.annotation.Nullable
  public String getProducerType() {
    return producerType;
  }

  public void setProducerType(@javax.annotation.Nullable String producerType) {
    this.producerType = producerType;
  }


  public DynamicSecretProducerInfo userTtl(@javax.annotation.Nullable String userTtl) {
    this.userTtl = userTtl;
    return this;
  }

  /**
   * Get userTtl
   * @return userTtl
   */
  @javax.annotation.Nullable
  public String getUserTtl() {
    return userTtl;
  }

  public void setUserTtl(@javax.annotation.Nullable String userTtl) {
    this.userTtl = userTtl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicSecretProducerInfo dynamicSecretProducerInfo = (DynamicSecretProducerInfo) o;
    return Objects.equals(this.failureMessage, dynamicSecretProducerInfo.failureMessage) &&
        Objects.equals(this.gwClusterId, dynamicSecretProducerInfo.gwClusterId) &&
        Objects.equals(this.k8sAllowedNamespaces, dynamicSecretProducerInfo.k8sAllowedNamespaces) &&
        Objects.equals(this.k8sDynamicMode, dynamicSecretProducerInfo.k8sDynamicMode) &&
        Objects.equals(this.producerLastKeepAlive, dynamicSecretProducerInfo.producerLastKeepAlive) &&
        Objects.equals(this.producerMetadata, dynamicSecretProducerInfo.producerMetadata) &&
        Objects.equals(this.producerStatus, dynamicSecretProducerInfo.producerStatus) &&
        Objects.equals(this.producerType, dynamicSecretProducerInfo.producerType) &&
        Objects.equals(this.userTtl, dynamicSecretProducerInfo.userTtl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failureMessage, gwClusterId, k8sAllowedNamespaces, k8sDynamicMode, producerLastKeepAlive, producerMetadata, producerStatus, producerType, userTtl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicSecretProducerInfo {\n");
    sb.append("    failureMessage: ").append(toIndentedString(failureMessage)).append("\n");
    sb.append("    gwClusterId: ").append(toIndentedString(gwClusterId)).append("\n");
    sb.append("    k8sAllowedNamespaces: ").append(toIndentedString(k8sAllowedNamespaces)).append("\n");
    sb.append("    k8sDynamicMode: ").append(toIndentedString(k8sDynamicMode)).append("\n");
    sb.append("    producerLastKeepAlive: ").append(toIndentedString(producerLastKeepAlive)).append("\n");
    sb.append("    producerMetadata: ").append(toIndentedString(producerMetadata)).append("\n");
    sb.append("    producerStatus: ").append(toIndentedString(producerStatus)).append("\n");
    sb.append("    producerType: ").append(toIndentedString(producerType)).append("\n");
    sb.append("    userTtl: ").append(toIndentedString(userTtl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("failure_message");
    openapiFields.add("gw_cluster_id");
    openapiFields.add("k8s_allowed_namespaces");
    openapiFields.add("k8s_dynamic_mode");
    openapiFields.add("producer_last_keep_alive");
    openapiFields.add("producer_metadata");
    openapiFields.add("producer_status");
    openapiFields.add("producer_type");
    openapiFields.add("user_ttl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DynamicSecretProducerInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DynamicSecretProducerInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DynamicSecretProducerInfo is not found in the empty JSON string", DynamicSecretProducerInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DynamicSecretProducerInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DynamicSecretProducerInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("failure_message") != null && !jsonObj.get("failure_message").isJsonNull()) && !jsonObj.get("failure_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failure_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failure_message").toString()));
      }
      if ((jsonObj.get("k8s_allowed_namespaces") != null && !jsonObj.get("k8s_allowed_namespaces").isJsonNull()) && !jsonObj.get("k8s_allowed_namespaces").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `k8s_allowed_namespaces` to be a primitive type in the JSON string but got `%s`", jsonObj.get("k8s_allowed_namespaces").toString()));
      }
      if ((jsonObj.get("producer_last_keep_alive") != null && !jsonObj.get("producer_last_keep_alive").isJsonNull()) && !jsonObj.get("producer_last_keep_alive").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `producer_last_keep_alive` to be a primitive type in the JSON string but got `%s`", jsonObj.get("producer_last_keep_alive").toString()));
      }
      if ((jsonObj.get("producer_metadata") != null && !jsonObj.get("producer_metadata").isJsonNull()) && !jsonObj.get("producer_metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `producer_metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("producer_metadata").toString()));
      }
      if ((jsonObj.get("producer_status") != null && !jsonObj.get("producer_status").isJsonNull()) && !jsonObj.get("producer_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `producer_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("producer_status").toString()));
      }
      if ((jsonObj.get("producer_type") != null && !jsonObj.get("producer_type").isJsonNull()) && !jsonObj.get("producer_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `producer_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("producer_type").toString()));
      }
      if ((jsonObj.get("user_ttl") != null && !jsonObj.get("user_ttl").isJsonNull()) && !jsonObj.get("user_ttl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_ttl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_ttl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DynamicSecretProducerInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DynamicSecretProducerInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DynamicSecretProducerInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DynamicSecretProducerInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<DynamicSecretProducerInfo>() {
           @Override
           public void write(JsonWriter out, DynamicSecretProducerInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DynamicSecretProducerInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DynamicSecretProducerInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DynamicSecretProducerInfo
   * @throws IOException if the JSON string is invalid with respect to DynamicSecretProducerInfo
   */
  public static DynamicSecretProducerInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DynamicSecretProducerInfo.class);
  }

  /**
   * Convert an instance of DynamicSecretProducerInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

