/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AwsS3LogForwardingConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AwsS3LogForwardingConfig {
  public static final String SERIALIZED_NAME_AWS_ACCESS_ID = "aws_access_id";
  @SerializedName(SERIALIZED_NAME_AWS_ACCESS_ID)
  private String awsAccessId;

  public static final String SERIALIZED_NAME_AWS_ACCESS_KEY = "aws_access_key";
  @SerializedName(SERIALIZED_NAME_AWS_ACCESS_KEY)
  private String awsAccessKey;

  public static final String SERIALIZED_NAME_AWS_AUTH_TYPE = "aws_auth_type";
  @SerializedName(SERIALIZED_NAME_AWS_AUTH_TYPE)
  private String awsAuthType;

  public static final String SERIALIZED_NAME_AWS_REGION = "aws_region";
  @SerializedName(SERIALIZED_NAME_AWS_REGION)
  private String awsRegion;

  public static final String SERIALIZED_NAME_AWS_ROLE_ARN = "aws_role_arn";
  @SerializedName(SERIALIZED_NAME_AWS_ROLE_ARN)
  private String awsRoleArn;

  public static final String SERIALIZED_NAME_AWS_USE_GATEWAY_CLOUD_IDENTITY = "aws_use_gateway_cloud_identity";
  @SerializedName(SERIALIZED_NAME_AWS_USE_GATEWAY_CLOUD_IDENTITY)
  private Boolean awsUseGatewayCloudIdentity;

  public static final String SERIALIZED_NAME_BUCKET_NAME = "bucket_name";
  @SerializedName(SERIALIZED_NAME_BUCKET_NAME)
  private String bucketName;

  public static final String SERIALIZED_NAME_LOG_FOLDER = "log_folder";
  @SerializedName(SERIALIZED_NAME_LOG_FOLDER)
  private String logFolder;

  public AwsS3LogForwardingConfig() { 
  }

  public AwsS3LogForwardingConfig awsAccessId(String awsAccessId) {
    
    this.awsAccessId = awsAccessId;
    return this;
  }

   /**
   * Get awsAccessId
   * @return awsAccessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAwsAccessId() {
    return awsAccessId;
  }


  public void setAwsAccessId(String awsAccessId) {
    this.awsAccessId = awsAccessId;
  }


  public AwsS3LogForwardingConfig awsAccessKey(String awsAccessKey) {
    
    this.awsAccessKey = awsAccessKey;
    return this;
  }

   /**
   * Get awsAccessKey
   * @return awsAccessKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAwsAccessKey() {
    return awsAccessKey;
  }


  public void setAwsAccessKey(String awsAccessKey) {
    this.awsAccessKey = awsAccessKey;
  }


  public AwsS3LogForwardingConfig awsAuthType(String awsAuthType) {
    
    this.awsAuthType = awsAuthType;
    return this;
  }

   /**
   * Get awsAuthType
   * @return awsAuthType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAwsAuthType() {
    return awsAuthType;
  }


  public void setAwsAuthType(String awsAuthType) {
    this.awsAuthType = awsAuthType;
  }


  public AwsS3LogForwardingConfig awsRegion(String awsRegion) {
    
    this.awsRegion = awsRegion;
    return this;
  }

   /**
   * Get awsRegion
   * @return awsRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAwsRegion() {
    return awsRegion;
  }


  public void setAwsRegion(String awsRegion) {
    this.awsRegion = awsRegion;
  }


  public AwsS3LogForwardingConfig awsRoleArn(String awsRoleArn) {
    
    this.awsRoleArn = awsRoleArn;
    return this;
  }

   /**
   * Get awsRoleArn
   * @return awsRoleArn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAwsRoleArn() {
    return awsRoleArn;
  }


  public void setAwsRoleArn(String awsRoleArn) {
    this.awsRoleArn = awsRoleArn;
  }


  public AwsS3LogForwardingConfig awsUseGatewayCloudIdentity(Boolean awsUseGatewayCloudIdentity) {
    
    this.awsUseGatewayCloudIdentity = awsUseGatewayCloudIdentity;
    return this;
  }

   /**
   * deprecated
   * @return awsUseGatewayCloudIdentity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "deprecated")

  public Boolean getAwsUseGatewayCloudIdentity() {
    return awsUseGatewayCloudIdentity;
  }


  public void setAwsUseGatewayCloudIdentity(Boolean awsUseGatewayCloudIdentity) {
    this.awsUseGatewayCloudIdentity = awsUseGatewayCloudIdentity;
  }


  public AwsS3LogForwardingConfig bucketName(String bucketName) {
    
    this.bucketName = bucketName;
    return this;
  }

   /**
   * Get bucketName
   * @return bucketName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBucketName() {
    return bucketName;
  }


  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }


  public AwsS3LogForwardingConfig logFolder(String logFolder) {
    
    this.logFolder = logFolder;
    return this;
  }

   /**
   * Get logFolder
   * @return logFolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogFolder() {
    return logFolder;
  }


  public void setLogFolder(String logFolder) {
    this.logFolder = logFolder;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsS3LogForwardingConfig awsS3LogForwardingConfig = (AwsS3LogForwardingConfig) o;
    return Objects.equals(this.awsAccessId, awsS3LogForwardingConfig.awsAccessId) &&
        Objects.equals(this.awsAccessKey, awsS3LogForwardingConfig.awsAccessKey) &&
        Objects.equals(this.awsAuthType, awsS3LogForwardingConfig.awsAuthType) &&
        Objects.equals(this.awsRegion, awsS3LogForwardingConfig.awsRegion) &&
        Objects.equals(this.awsRoleArn, awsS3LogForwardingConfig.awsRoleArn) &&
        Objects.equals(this.awsUseGatewayCloudIdentity, awsS3LogForwardingConfig.awsUseGatewayCloudIdentity) &&
        Objects.equals(this.bucketName, awsS3LogForwardingConfig.bucketName) &&
        Objects.equals(this.logFolder, awsS3LogForwardingConfig.logFolder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsAccessId, awsAccessKey, awsAuthType, awsRegion, awsRoleArn, awsUseGatewayCloudIdentity, bucketName, logFolder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsS3LogForwardingConfig {\n");
    sb.append("    awsAccessId: ").append(toIndentedString(awsAccessId)).append("\n");
    sb.append("    awsAccessKey: ").append(toIndentedString(awsAccessKey)).append("\n");
    sb.append("    awsAuthType: ").append(toIndentedString(awsAuthType)).append("\n");
    sb.append("    awsRegion: ").append(toIndentedString(awsRegion)).append("\n");
    sb.append("    awsRoleArn: ").append(toIndentedString(awsRoleArn)).append("\n");
    sb.append("    awsUseGatewayCloudIdentity: ").append(toIndentedString(awsUseGatewayCloudIdentity)).append("\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    logFolder: ").append(toIndentedString(logFolder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

