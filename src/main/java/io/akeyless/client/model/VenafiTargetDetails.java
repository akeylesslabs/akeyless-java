/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * VenafiTargetDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class VenafiTargetDetails {
  public static final String SERIALIZED_NAME_VENAFI_API_KEY = "venafi_api_key";
  @SerializedName(SERIALIZED_NAME_VENAFI_API_KEY)
  @javax.annotation.Nullable
  private String venafiApiKey;

  public static final String SERIALIZED_NAME_VENAFI_BASE_URL = "venafi_base_url";
  @SerializedName(SERIALIZED_NAME_VENAFI_BASE_URL)
  @javax.annotation.Nullable
  private String venafiBaseUrl;

  public static final String SERIALIZED_NAME_VENAFI_TPP_ACCESS_TOKEN = "venafi_tpp_access_token";
  @SerializedName(SERIALIZED_NAME_VENAFI_TPP_ACCESS_TOKEN)
  @javax.annotation.Nullable
  private String venafiTppAccessToken;

  public static final String SERIALIZED_NAME_VENAFI_TPP_CLIENT_ID = "venafi_tpp_client_id";
  @SerializedName(SERIALIZED_NAME_VENAFI_TPP_CLIENT_ID)
  @javax.annotation.Nullable
  private String venafiTppClientId;

  public static final String SERIALIZED_NAME_VENAFI_TPP_PASSWORD = "venafi_tpp_password";
  @SerializedName(SERIALIZED_NAME_VENAFI_TPP_PASSWORD)
  @javax.annotation.Nullable
  private String venafiTppPassword;

  public static final String SERIALIZED_NAME_VENAFI_TPP_REFRESH_TOKEN = "venafi_tpp_refresh_token";
  @SerializedName(SERIALIZED_NAME_VENAFI_TPP_REFRESH_TOKEN)
  @javax.annotation.Nullable
  private String venafiTppRefreshToken;

  public static final String SERIALIZED_NAME_VENAFI_TPP_USERNAME = "venafi_tpp_username";
  @SerializedName(SERIALIZED_NAME_VENAFI_TPP_USERNAME)
  @javax.annotation.Nullable
  private String venafiTppUsername;

  public static final String SERIALIZED_NAME_VENAFI_USE_TPP = "venafi_use_tpp";
  @SerializedName(SERIALIZED_NAME_VENAFI_USE_TPP)
  @javax.annotation.Nullable
  private Boolean venafiUseTpp;

  public static final String SERIALIZED_NAME_VENAFI_ZONE = "venafi_zone";
  @SerializedName(SERIALIZED_NAME_VENAFI_ZONE)
  @javax.annotation.Nullable
  private String venafiZone;

  public VenafiTargetDetails() {
  }

  public VenafiTargetDetails venafiApiKey(@javax.annotation.Nullable String venafiApiKey) {
    this.venafiApiKey = venafiApiKey;
    return this;
  }

  /**
   * Get venafiApiKey
   * @return venafiApiKey
   */
  @javax.annotation.Nullable
  public String getVenafiApiKey() {
    return venafiApiKey;
  }

  public void setVenafiApiKey(@javax.annotation.Nullable String venafiApiKey) {
    this.venafiApiKey = venafiApiKey;
  }


  public VenafiTargetDetails venafiBaseUrl(@javax.annotation.Nullable String venafiBaseUrl) {
    this.venafiBaseUrl = venafiBaseUrl;
    return this;
  }

  /**
   * Get venafiBaseUrl
   * @return venafiBaseUrl
   */
  @javax.annotation.Nullable
  public String getVenafiBaseUrl() {
    return venafiBaseUrl;
  }

  public void setVenafiBaseUrl(@javax.annotation.Nullable String venafiBaseUrl) {
    this.venafiBaseUrl = venafiBaseUrl;
  }


  public VenafiTargetDetails venafiTppAccessToken(@javax.annotation.Nullable String venafiTppAccessToken) {
    this.venafiTppAccessToken = venafiTppAccessToken;
    return this;
  }

  /**
   * Get venafiTppAccessToken
   * @return venafiTppAccessToken
   */
  @javax.annotation.Nullable
  public String getVenafiTppAccessToken() {
    return venafiTppAccessToken;
  }

  public void setVenafiTppAccessToken(@javax.annotation.Nullable String venafiTppAccessToken) {
    this.venafiTppAccessToken = venafiTppAccessToken;
  }


  public VenafiTargetDetails venafiTppClientId(@javax.annotation.Nullable String venafiTppClientId) {
    this.venafiTppClientId = venafiTppClientId;
    return this;
  }

  /**
   * Get venafiTppClientId
   * @return venafiTppClientId
   */
  @javax.annotation.Nullable
  public String getVenafiTppClientId() {
    return venafiTppClientId;
  }

  public void setVenafiTppClientId(@javax.annotation.Nullable String venafiTppClientId) {
    this.venafiTppClientId = venafiTppClientId;
  }


  public VenafiTargetDetails venafiTppPassword(@javax.annotation.Nullable String venafiTppPassword) {
    this.venafiTppPassword = venafiTppPassword;
    return this;
  }

  /**
   * Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
   * @return venafiTppPassword
   */
  @javax.annotation.Nullable
  public String getVenafiTppPassword() {
    return venafiTppPassword;
  }

  public void setVenafiTppPassword(@javax.annotation.Nullable String venafiTppPassword) {
    this.venafiTppPassword = venafiTppPassword;
  }


  public VenafiTargetDetails venafiTppRefreshToken(@javax.annotation.Nullable String venafiTppRefreshToken) {
    this.venafiTppRefreshToken = venafiTppRefreshToken;
    return this;
  }

  /**
   * Get venafiTppRefreshToken
   * @return venafiTppRefreshToken
   */
  @javax.annotation.Nullable
  public String getVenafiTppRefreshToken() {
    return venafiTppRefreshToken;
  }

  public void setVenafiTppRefreshToken(@javax.annotation.Nullable String venafiTppRefreshToken) {
    this.venafiTppRefreshToken = venafiTppRefreshToken;
  }


  public VenafiTargetDetails venafiTppUsername(@javax.annotation.Nullable String venafiTppUsername) {
    this.venafiTppUsername = venafiTppUsername;
    return this;
  }

  /**
   * Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
   * @return venafiTppUsername
   */
  @javax.annotation.Nullable
  public String getVenafiTppUsername() {
    return venafiTppUsername;
  }

  public void setVenafiTppUsername(@javax.annotation.Nullable String venafiTppUsername) {
    this.venafiTppUsername = venafiTppUsername;
  }


  public VenafiTargetDetails venafiUseTpp(@javax.annotation.Nullable Boolean venafiUseTpp) {
    this.venafiUseTpp = venafiUseTpp;
    return this;
  }

  /**
   * Get venafiUseTpp
   * @return venafiUseTpp
   */
  @javax.annotation.Nullable
  public Boolean getVenafiUseTpp() {
    return venafiUseTpp;
  }

  public void setVenafiUseTpp(@javax.annotation.Nullable Boolean venafiUseTpp) {
    this.venafiUseTpp = venafiUseTpp;
  }


  public VenafiTargetDetails venafiZone(@javax.annotation.Nullable String venafiZone) {
    this.venafiZone = venafiZone;
    return this;
  }

  /**
   * Get venafiZone
   * @return venafiZone
   */
  @javax.annotation.Nullable
  public String getVenafiZone() {
    return venafiZone;
  }

  public void setVenafiZone(@javax.annotation.Nullable String venafiZone) {
    this.venafiZone = venafiZone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VenafiTargetDetails venafiTargetDetails = (VenafiTargetDetails) o;
    return Objects.equals(this.venafiApiKey, venafiTargetDetails.venafiApiKey) &&
        Objects.equals(this.venafiBaseUrl, venafiTargetDetails.venafiBaseUrl) &&
        Objects.equals(this.venafiTppAccessToken, venafiTargetDetails.venafiTppAccessToken) &&
        Objects.equals(this.venafiTppClientId, venafiTargetDetails.venafiTppClientId) &&
        Objects.equals(this.venafiTppPassword, venafiTargetDetails.venafiTppPassword) &&
        Objects.equals(this.venafiTppRefreshToken, venafiTargetDetails.venafiTppRefreshToken) &&
        Objects.equals(this.venafiTppUsername, venafiTargetDetails.venafiTppUsername) &&
        Objects.equals(this.venafiUseTpp, venafiTargetDetails.venafiUseTpp) &&
        Objects.equals(this.venafiZone, venafiTargetDetails.venafiZone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(venafiApiKey, venafiBaseUrl, venafiTppAccessToken, venafiTppClientId, venafiTppPassword, venafiTppRefreshToken, venafiTppUsername, venafiUseTpp, venafiZone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VenafiTargetDetails {\n");
    sb.append("    venafiApiKey: ").append(toIndentedString(venafiApiKey)).append("\n");
    sb.append("    venafiBaseUrl: ").append(toIndentedString(venafiBaseUrl)).append("\n");
    sb.append("    venafiTppAccessToken: ").append(toIndentedString(venafiTppAccessToken)).append("\n");
    sb.append("    venafiTppClientId: ").append(toIndentedString(venafiTppClientId)).append("\n");
    sb.append("    venafiTppPassword: ").append(toIndentedString(venafiTppPassword)).append("\n");
    sb.append("    venafiTppRefreshToken: ").append(toIndentedString(venafiTppRefreshToken)).append("\n");
    sb.append("    venafiTppUsername: ").append(toIndentedString(venafiTppUsername)).append("\n");
    sb.append("    venafiUseTpp: ").append(toIndentedString(venafiUseTpp)).append("\n");
    sb.append("    venafiZone: ").append(toIndentedString(venafiZone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("venafi_api_key");
    openapiFields.add("venafi_base_url");
    openapiFields.add("venafi_tpp_access_token");
    openapiFields.add("venafi_tpp_client_id");
    openapiFields.add("venafi_tpp_password");
    openapiFields.add("venafi_tpp_refresh_token");
    openapiFields.add("venafi_tpp_username");
    openapiFields.add("venafi_use_tpp");
    openapiFields.add("venafi_zone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VenafiTargetDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VenafiTargetDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VenafiTargetDetails is not found in the empty JSON string", VenafiTargetDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VenafiTargetDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VenafiTargetDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("venafi_api_key") != null && !jsonObj.get("venafi_api_key").isJsonNull()) && !jsonObj.get("venafi_api_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_api_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_api_key").toString()));
      }
      if ((jsonObj.get("venafi_base_url") != null && !jsonObj.get("venafi_base_url").isJsonNull()) && !jsonObj.get("venafi_base_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_base_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_base_url").toString()));
      }
      if ((jsonObj.get("venafi_tpp_access_token") != null && !jsonObj.get("venafi_tpp_access_token").isJsonNull()) && !jsonObj.get("venafi_tpp_access_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_tpp_access_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_tpp_access_token").toString()));
      }
      if ((jsonObj.get("venafi_tpp_client_id") != null && !jsonObj.get("venafi_tpp_client_id").isJsonNull()) && !jsonObj.get("venafi_tpp_client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_tpp_client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_tpp_client_id").toString()));
      }
      if ((jsonObj.get("venafi_tpp_password") != null && !jsonObj.get("venafi_tpp_password").isJsonNull()) && !jsonObj.get("venafi_tpp_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_tpp_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_tpp_password").toString()));
      }
      if ((jsonObj.get("venafi_tpp_refresh_token") != null && !jsonObj.get("venafi_tpp_refresh_token").isJsonNull()) && !jsonObj.get("venafi_tpp_refresh_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_tpp_refresh_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_tpp_refresh_token").toString()));
      }
      if ((jsonObj.get("venafi_tpp_username") != null && !jsonObj.get("venafi_tpp_username").isJsonNull()) && !jsonObj.get("venafi_tpp_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_tpp_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_tpp_username").toString()));
      }
      if ((jsonObj.get("venafi_zone") != null && !jsonObj.get("venafi_zone").isJsonNull()) && !jsonObj.get("venafi_zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `venafi_zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("venafi_zone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VenafiTargetDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VenafiTargetDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VenafiTargetDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VenafiTargetDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<VenafiTargetDetails>() {
           @Override
           public void write(JsonWriter out, VenafiTargetDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VenafiTargetDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VenafiTargetDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VenafiTargetDetails
   * @throws IOException if the JSON string is invalid with respect to VenafiTargetDetails
   */
  public static VenafiTargetDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VenafiTargetDetails.class);
  }

  /**
   * Convert an instance of VenafiTargetDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

