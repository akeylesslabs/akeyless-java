/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * authMethodUpdateAzureAD is a command that updates a new auth method that will be able to authenticate using Azure Active Directory credentials.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class AuthMethodUpdateAzureAD {
  public static final String SERIALIZED_NAME_ACCESS_EXPIRES = "access-expires";
  @SerializedName(SERIALIZED_NAME_ACCESS_EXPIRES)
  @javax.annotation.Nullable
  private Long accessExpires = 0l;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  @javax.annotation.Nullable
  private String audience = "https://management.azure.com/";

  public static final String SERIALIZED_NAME_AUDIT_LOGS_CLAIMS = "audit-logs-claims";
  @SerializedName(SERIALIZED_NAME_AUDIT_LOGS_CLAIMS)
  @javax.annotation.Nullable
  private List<String> auditLogsClaims = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_GROUP_ID = "bound-group-id";
  @SerializedName(SERIALIZED_NAME_BOUND_GROUP_ID)
  @javax.annotation.Nullable
  private List<String> boundGroupId = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_IPS = "bound-ips";
  @SerializedName(SERIALIZED_NAME_BOUND_IPS)
  @javax.annotation.Nullable
  private List<String> boundIps = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_PROVIDERS = "bound-providers";
  @SerializedName(SERIALIZED_NAME_BOUND_PROVIDERS)
  @javax.annotation.Nullable
  private List<String> boundProviders = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_RESOURCE_ID = "bound-resource-id";
  @SerializedName(SERIALIZED_NAME_BOUND_RESOURCE_ID)
  @javax.annotation.Nullable
  private List<String> boundResourceId = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_RESOURCE_NAMES = "bound-resource-names";
  @SerializedName(SERIALIZED_NAME_BOUND_RESOURCE_NAMES)
  @javax.annotation.Nullable
  private List<String> boundResourceNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_RESOURCE_TYPES = "bound-resource-types";
  @SerializedName(SERIALIZED_NAME_BOUND_RESOURCE_TYPES)
  @javax.annotation.Nullable
  private List<String> boundResourceTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_RG_ID = "bound-rg-id";
  @SerializedName(SERIALIZED_NAME_BOUND_RG_ID)
  @javax.annotation.Nullable
  private List<String> boundRgId = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_SPID = "bound-spid";
  @SerializedName(SERIALIZED_NAME_BOUND_SPID)
  @javax.annotation.Nullable
  private List<String> boundSpid = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_SUB_ID = "bound-sub-id";
  @SerializedName(SERIALIZED_NAME_BOUND_SUB_ID)
  @javax.annotation.Nullable
  private List<String> boundSubId = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_TENANT_ID = "bound-tenant-id";
  @SerializedName(SERIALIZED_NAME_BOUND_TENANT_ID)
  @javax.annotation.Nonnull
  private String boundTenantId;

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  @javax.annotation.Nullable
  private String deleteProtection;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_EXPIRATION_EVENT_IN = "expiration-event-in";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_EVENT_IN)
  @javax.annotation.Nullable
  private List<String> expirationEventIn = new ArrayList<>();

  public static final String SERIALIZED_NAME_FORCE_SUB_CLAIMS = "force-sub-claims";
  @SerializedName(SERIALIZED_NAME_FORCE_SUB_CLAIMS)
  @javax.annotation.Nullable
  private Boolean forceSubClaims;

  public static final String SERIALIZED_NAME_GW_BOUND_IPS = "gw-bound-ips";
  @SerializedName(SERIALIZED_NAME_GW_BOUND_IPS)
  @javax.annotation.Nullable
  private List<String> gwBoundIps = new ArrayList<>();

  public static final String SERIALIZED_NAME_ISSUER = "issuer";
  @SerializedName(SERIALIZED_NAME_ISSUER)
  @javax.annotation.Nullable
  private String issuer = "https://sts.windows.net/---bound_tenant_id---";

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  @javax.annotation.Nullable
  private Boolean json = false;

  public static final String SERIALIZED_NAME_JWKS_URI = "jwks-uri";
  @SerializedName(SERIALIZED_NAME_JWKS_URI)
  @javax.annotation.Nullable
  private String jwksUri = "https://login.microsoftonline.com/common/discovery/keys";

  public static final String SERIALIZED_NAME_JWT_TTL = "jwt-ttl";
  @SerializedName(SERIALIZED_NAME_JWT_TTL)
  @javax.annotation.Nullable
  private Long jwtTtl = 0l;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_NEW_NAME = "new-name";
  @SerializedName(SERIALIZED_NAME_NEW_NAME)
  @javax.annotation.Nullable
  private String newName;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "product-type";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  @javax.annotation.Nullable
  private List<String> productType = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  @javax.annotation.Nullable
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  @javax.annotation.Nullable
  private String uidToken;

  public static final String SERIALIZED_NAME_UNIQUE_IDENTIFIER = "unique-identifier";
  @SerializedName(SERIALIZED_NAME_UNIQUE_IDENTIFIER)
  @javax.annotation.Nullable
  private String uniqueIdentifier;

  public AuthMethodUpdateAzureAD() {
  }

  public AuthMethodUpdateAzureAD accessExpires(@javax.annotation.Nullable Long accessExpires) {
    this.accessExpires = accessExpires;
    return this;
  }

  /**
   * Access expiration date in Unix timestamp (select 0 for access without expiry date)
   * @return accessExpires
   */
  @javax.annotation.Nullable
  public Long getAccessExpires() {
    return accessExpires;
  }

  public void setAccessExpires(@javax.annotation.Nullable Long accessExpires) {
    this.accessExpires = accessExpires;
  }


  public AuthMethodUpdateAzureAD audience(@javax.annotation.Nullable String audience) {
    this.audience = audience;
    return this;
  }

  /**
   * Deprecated (Deprecated) The audience in the JWT
   * @return audience
   */
  @javax.annotation.Nullable
  public String getAudience() {
    return audience;
  }

  public void setAudience(@javax.annotation.Nullable String audience) {
    this.audience = audience;
  }


  public AuthMethodUpdateAzureAD auditLogsClaims(@javax.annotation.Nullable List<String> auditLogsClaims) {
    this.auditLogsClaims = auditLogsClaims;
    return this;
  }

  public AuthMethodUpdateAzureAD addAuditLogsClaimsItem(String auditLogsClaimsItem) {
    if (this.auditLogsClaims == null) {
      this.auditLogsClaims = new ArrayList<>();
    }
    this.auditLogsClaims.add(auditLogsClaimsItem);
    return this;
  }

  /**
   * Subclaims to include in audit logs, e.g \&quot;--audit-logs-claims email --audit-logs-claims username\&quot;
   * @return auditLogsClaims
   */
  @javax.annotation.Nullable
  public List<String> getAuditLogsClaims() {
    return auditLogsClaims;
  }

  public void setAuditLogsClaims(@javax.annotation.Nullable List<String> auditLogsClaims) {
    this.auditLogsClaims = auditLogsClaims;
  }


  public AuthMethodUpdateAzureAD boundGroupId(@javax.annotation.Nullable List<String> boundGroupId) {
    this.boundGroupId = boundGroupId;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundGroupIdItem(String boundGroupIdItem) {
    if (this.boundGroupId == null) {
      this.boundGroupId = new ArrayList<>();
    }
    this.boundGroupId.add(boundGroupIdItem);
    return this;
  }

  /**
   * A list of group ids that the access is restricted to
   * @return boundGroupId
   */
  @javax.annotation.Nullable
  public List<String> getBoundGroupId() {
    return boundGroupId;
  }

  public void setBoundGroupId(@javax.annotation.Nullable List<String> boundGroupId) {
    this.boundGroupId = boundGroupId;
  }


  public AuthMethodUpdateAzureAD boundIps(@javax.annotation.Nullable List<String> boundIps) {
    this.boundIps = boundIps;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundIpsItem(String boundIpsItem) {
    if (this.boundIps == null) {
      this.boundIps = new ArrayList<>();
    }
    this.boundIps.add(boundIpsItem);
    return this;
  }

  /**
   * A CIDR whitelist with the IPs that the access is restricted to
   * @return boundIps
   */
  @javax.annotation.Nullable
  public List<String> getBoundIps() {
    return boundIps;
  }

  public void setBoundIps(@javax.annotation.Nullable List<String> boundIps) {
    this.boundIps = boundIps;
  }


  public AuthMethodUpdateAzureAD boundProviders(@javax.annotation.Nullable List<String> boundProviders) {
    this.boundProviders = boundProviders;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundProvidersItem(String boundProvidersItem) {
    if (this.boundProviders == null) {
      this.boundProviders = new ArrayList<>();
    }
    this.boundProviders.add(boundProvidersItem);
    return this;
  }

  /**
   * A list of resource providers that the access is restricted to (e.g, Microsoft.Compute, Microsoft.ManagedIdentity, etc)
   * @return boundProviders
   */
  @javax.annotation.Nullable
  public List<String> getBoundProviders() {
    return boundProviders;
  }

  public void setBoundProviders(@javax.annotation.Nullable List<String> boundProviders) {
    this.boundProviders = boundProviders;
  }


  public AuthMethodUpdateAzureAD boundResourceId(@javax.annotation.Nullable List<String> boundResourceId) {
    this.boundResourceId = boundResourceId;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundResourceIdItem(String boundResourceIdItem) {
    if (this.boundResourceId == null) {
      this.boundResourceId = new ArrayList<>();
    }
    this.boundResourceId.add(boundResourceIdItem);
    return this;
  }

  /**
   * A list of full resource ids that the access is restricted to
   * @return boundResourceId
   */
  @javax.annotation.Nullable
  public List<String> getBoundResourceId() {
    return boundResourceId;
  }

  public void setBoundResourceId(@javax.annotation.Nullable List<String> boundResourceId) {
    this.boundResourceId = boundResourceId;
  }


  public AuthMethodUpdateAzureAD boundResourceNames(@javax.annotation.Nullable List<String> boundResourceNames) {
    this.boundResourceNames = boundResourceNames;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundResourceNamesItem(String boundResourceNamesItem) {
    if (this.boundResourceNames == null) {
      this.boundResourceNames = new ArrayList<>();
    }
    this.boundResourceNames.add(boundResourceNamesItem);
    return this;
  }

  /**
   * A list of resource names that the access is restricted to (e.g, a virtual machine name, scale set name, etc).
   * @return boundResourceNames
   */
  @javax.annotation.Nullable
  public List<String> getBoundResourceNames() {
    return boundResourceNames;
  }

  public void setBoundResourceNames(@javax.annotation.Nullable List<String> boundResourceNames) {
    this.boundResourceNames = boundResourceNames;
  }


  public AuthMethodUpdateAzureAD boundResourceTypes(@javax.annotation.Nullable List<String> boundResourceTypes) {
    this.boundResourceTypes = boundResourceTypes;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundResourceTypesItem(String boundResourceTypesItem) {
    if (this.boundResourceTypes == null) {
      this.boundResourceTypes = new ArrayList<>();
    }
    this.boundResourceTypes.add(boundResourceTypesItem);
    return this;
  }

  /**
   * A list of resource types that the access is restricted to (e.g, virtualMachines, userAssignedIdentities, etc)
   * @return boundResourceTypes
   */
  @javax.annotation.Nullable
  public List<String> getBoundResourceTypes() {
    return boundResourceTypes;
  }

  public void setBoundResourceTypes(@javax.annotation.Nullable List<String> boundResourceTypes) {
    this.boundResourceTypes = boundResourceTypes;
  }


  public AuthMethodUpdateAzureAD boundRgId(@javax.annotation.Nullable List<String> boundRgId) {
    this.boundRgId = boundRgId;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundRgIdItem(String boundRgIdItem) {
    if (this.boundRgId == null) {
      this.boundRgId = new ArrayList<>();
    }
    this.boundRgId.add(boundRgIdItem);
    return this;
  }

  /**
   * A list of resource groups that the access is restricted to
   * @return boundRgId
   */
  @javax.annotation.Nullable
  public List<String> getBoundRgId() {
    return boundRgId;
  }

  public void setBoundRgId(@javax.annotation.Nullable List<String> boundRgId) {
    this.boundRgId = boundRgId;
  }


  public AuthMethodUpdateAzureAD boundSpid(@javax.annotation.Nullable List<String> boundSpid) {
    this.boundSpid = boundSpid;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundSpidItem(String boundSpidItem) {
    if (this.boundSpid == null) {
      this.boundSpid = new ArrayList<>();
    }
    this.boundSpid.add(boundSpidItem);
    return this;
  }

  /**
   * A list of service principal IDs that the access is restricted to
   * @return boundSpid
   */
  @javax.annotation.Nullable
  public List<String> getBoundSpid() {
    return boundSpid;
  }

  public void setBoundSpid(@javax.annotation.Nullable List<String> boundSpid) {
    this.boundSpid = boundSpid;
  }


  public AuthMethodUpdateAzureAD boundSubId(@javax.annotation.Nullable List<String> boundSubId) {
    this.boundSubId = boundSubId;
    return this;
  }

  public AuthMethodUpdateAzureAD addBoundSubIdItem(String boundSubIdItem) {
    if (this.boundSubId == null) {
      this.boundSubId = new ArrayList<>();
    }
    this.boundSubId.add(boundSubIdItem);
    return this;
  }

  /**
   * A list of subscription ids that the access is restricted to
   * @return boundSubId
   */
  @javax.annotation.Nullable
  public List<String> getBoundSubId() {
    return boundSubId;
  }

  public void setBoundSubId(@javax.annotation.Nullable List<String> boundSubId) {
    this.boundSubId = boundSubId;
  }


  public AuthMethodUpdateAzureAD boundTenantId(@javax.annotation.Nonnull String boundTenantId) {
    this.boundTenantId = boundTenantId;
    return this;
  }

  /**
   * The Azure tenant id that the access is restricted to
   * @return boundTenantId
   */
  @javax.annotation.Nonnull
  public String getBoundTenantId() {
    return boundTenantId;
  }

  public void setBoundTenantId(@javax.annotation.Nonnull String boundTenantId) {
    this.boundTenantId = boundTenantId;
  }


  public AuthMethodUpdateAzureAD deleteProtection(@javax.annotation.Nullable String deleteProtection) {
    this.deleteProtection = deleteProtection;
    return this;
  }

  /**
   * Protection from accidental deletion of this object [true/false]
   * @return deleteProtection
   */
  @javax.annotation.Nullable
  public String getDeleteProtection() {
    return deleteProtection;
  }

  public void setDeleteProtection(@javax.annotation.Nullable String deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public AuthMethodUpdateAzureAD description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Auth Method description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public AuthMethodUpdateAzureAD expirationEventIn(@javax.annotation.Nullable List<String> expirationEventIn) {
    this.expirationEventIn = expirationEventIn;
    return this;
  }

  public AuthMethodUpdateAzureAD addExpirationEventInItem(String expirationEventInItem) {
    if (this.expirationEventIn == null) {
      this.expirationEventIn = new ArrayList<>();
    }
    this.expirationEventIn.add(expirationEventInItem);
    return this;
  }

  /**
   * How many days before the expiration of the auth method would you like to be notified.
   * @return expirationEventIn
   */
  @javax.annotation.Nullable
  public List<String> getExpirationEventIn() {
    return expirationEventIn;
  }

  public void setExpirationEventIn(@javax.annotation.Nullable List<String> expirationEventIn) {
    this.expirationEventIn = expirationEventIn;
  }


  public AuthMethodUpdateAzureAD forceSubClaims(@javax.annotation.Nullable Boolean forceSubClaims) {
    this.forceSubClaims = forceSubClaims;
    return this;
  }

  /**
   * if true: enforce role-association must include sub claims
   * @return forceSubClaims
   */
  @javax.annotation.Nullable
  public Boolean getForceSubClaims() {
    return forceSubClaims;
  }

  public void setForceSubClaims(@javax.annotation.Nullable Boolean forceSubClaims) {
    this.forceSubClaims = forceSubClaims;
  }


  public AuthMethodUpdateAzureAD gwBoundIps(@javax.annotation.Nullable List<String> gwBoundIps) {
    this.gwBoundIps = gwBoundIps;
    return this;
  }

  public AuthMethodUpdateAzureAD addGwBoundIpsItem(String gwBoundIpsItem) {
    if (this.gwBoundIps == null) {
      this.gwBoundIps = new ArrayList<>();
    }
    this.gwBoundIps.add(gwBoundIpsItem);
    return this;
  }

  /**
   * A CIDR whitelist with the GW IPs that the access is restricted to
   * @return gwBoundIps
   */
  @javax.annotation.Nullable
  public List<String> getGwBoundIps() {
    return gwBoundIps;
  }

  public void setGwBoundIps(@javax.annotation.Nullable List<String> gwBoundIps) {
    this.gwBoundIps = gwBoundIps;
  }


  public AuthMethodUpdateAzureAD issuer(@javax.annotation.Nullable String issuer) {
    this.issuer = issuer;
    return this;
  }

  /**
   * Issuer URL
   * @return issuer
   */
  @javax.annotation.Nullable
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(@javax.annotation.Nullable String issuer) {
    this.issuer = issuer;
  }


  public AuthMethodUpdateAzureAD json(@javax.annotation.Nullable Boolean json) {
    this.json = json;
    return this;
  }

  /**
   * Set output format to JSON
   * @return json
   */
  @javax.annotation.Nullable
  public Boolean getJson() {
    return json;
  }

  public void setJson(@javax.annotation.Nullable Boolean json) {
    this.json = json;
  }


  public AuthMethodUpdateAzureAD jwksUri(@javax.annotation.Nullable String jwksUri) {
    this.jwksUri = jwksUri;
    return this;
  }

  /**
   * The URL to the JSON Web Key Set (JWKS) that containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server.
   * @return jwksUri
   */
  @javax.annotation.Nullable
  public String getJwksUri() {
    return jwksUri;
  }

  public void setJwksUri(@javax.annotation.Nullable String jwksUri) {
    this.jwksUri = jwksUri;
  }


  public AuthMethodUpdateAzureAD jwtTtl(@javax.annotation.Nullable Long jwtTtl) {
    this.jwtTtl = jwtTtl;
    return this;
  }

  /**
   * Jwt TTL
   * @return jwtTtl
   */
  @javax.annotation.Nullable
  public Long getJwtTtl() {
    return jwtTtl;
  }

  public void setJwtTtl(@javax.annotation.Nullable Long jwtTtl) {
    this.jwtTtl = jwtTtl;
  }


  public AuthMethodUpdateAzureAD name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Auth Method name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public AuthMethodUpdateAzureAD newName(@javax.annotation.Nullable String newName) {
    this.newName = newName;
    return this;
  }

  /**
   * Auth Method new name
   * @return newName
   */
  @javax.annotation.Nullable
  public String getNewName() {
    return newName;
  }

  public void setNewName(@javax.annotation.Nullable String newName) {
    this.newName = newName;
  }


  public AuthMethodUpdateAzureAD productType(@javax.annotation.Nullable List<String> productType) {
    this.productType = productType;
    return this;
  }

  public AuthMethodUpdateAzureAD addProductTypeItem(String productTypeItem) {
    if (this.productType == null) {
      this.productType = new ArrayList<>();
    }
    this.productType.add(productTypeItem);
    return this;
  }

  /**
   * Choose the relevant product type for the auth method [sm, sra, pm, dp, ca]
   * @return productType
   */
  @javax.annotation.Nullable
  public List<String> getProductType() {
    return productType;
  }

  public void setProductType(@javax.annotation.Nullable List<String> productType) {
    this.productType = productType;
  }


  public AuthMethodUpdateAzureAD token(@javax.annotation.Nullable String token) {
    this.token = token;
    return this;
  }

  /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
   */
  @javax.annotation.Nullable
  public String getToken() {
    return token;
  }

  public void setToken(@javax.annotation.Nullable String token) {
    this.token = token;
  }


  public AuthMethodUpdateAzureAD uidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
    return this;
  }

  /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
   */
  @javax.annotation.Nullable
  public String getUidToken() {
    return uidToken;
  }

  public void setUidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
  }


  public AuthMethodUpdateAzureAD uniqueIdentifier(@javax.annotation.Nullable String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
    return this;
  }

  /**
   * A unique identifier (ID) value which is a \&quot;sub claim\&quot; name that contains details uniquely identifying that resource. This \&quot;sub claim\&quot; is used to distinguish between different identities.
   * @return uniqueIdentifier
   */
  @javax.annotation.Nullable
  public String getUniqueIdentifier() {
    return uniqueIdentifier;
  }

  public void setUniqueIdentifier(@javax.annotation.Nullable String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthMethodUpdateAzureAD authMethodUpdateAzureAD = (AuthMethodUpdateAzureAD) o;
    return Objects.equals(this.accessExpires, authMethodUpdateAzureAD.accessExpires) &&
        Objects.equals(this.audience, authMethodUpdateAzureAD.audience) &&
        Objects.equals(this.auditLogsClaims, authMethodUpdateAzureAD.auditLogsClaims) &&
        Objects.equals(this.boundGroupId, authMethodUpdateAzureAD.boundGroupId) &&
        Objects.equals(this.boundIps, authMethodUpdateAzureAD.boundIps) &&
        Objects.equals(this.boundProviders, authMethodUpdateAzureAD.boundProviders) &&
        Objects.equals(this.boundResourceId, authMethodUpdateAzureAD.boundResourceId) &&
        Objects.equals(this.boundResourceNames, authMethodUpdateAzureAD.boundResourceNames) &&
        Objects.equals(this.boundResourceTypes, authMethodUpdateAzureAD.boundResourceTypes) &&
        Objects.equals(this.boundRgId, authMethodUpdateAzureAD.boundRgId) &&
        Objects.equals(this.boundSpid, authMethodUpdateAzureAD.boundSpid) &&
        Objects.equals(this.boundSubId, authMethodUpdateAzureAD.boundSubId) &&
        Objects.equals(this.boundTenantId, authMethodUpdateAzureAD.boundTenantId) &&
        Objects.equals(this.deleteProtection, authMethodUpdateAzureAD.deleteProtection) &&
        Objects.equals(this.description, authMethodUpdateAzureAD.description) &&
        Objects.equals(this.expirationEventIn, authMethodUpdateAzureAD.expirationEventIn) &&
        Objects.equals(this.forceSubClaims, authMethodUpdateAzureAD.forceSubClaims) &&
        Objects.equals(this.gwBoundIps, authMethodUpdateAzureAD.gwBoundIps) &&
        Objects.equals(this.issuer, authMethodUpdateAzureAD.issuer) &&
        Objects.equals(this.json, authMethodUpdateAzureAD.json) &&
        Objects.equals(this.jwksUri, authMethodUpdateAzureAD.jwksUri) &&
        Objects.equals(this.jwtTtl, authMethodUpdateAzureAD.jwtTtl) &&
        Objects.equals(this.name, authMethodUpdateAzureAD.name) &&
        Objects.equals(this.newName, authMethodUpdateAzureAD.newName) &&
        Objects.equals(this.productType, authMethodUpdateAzureAD.productType) &&
        Objects.equals(this.token, authMethodUpdateAzureAD.token) &&
        Objects.equals(this.uidToken, authMethodUpdateAzureAD.uidToken) &&
        Objects.equals(this.uniqueIdentifier, authMethodUpdateAzureAD.uniqueIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessExpires, audience, auditLogsClaims, boundGroupId, boundIps, boundProviders, boundResourceId, boundResourceNames, boundResourceTypes, boundRgId, boundSpid, boundSubId, boundTenantId, deleteProtection, description, expirationEventIn, forceSubClaims, gwBoundIps, issuer, json, jwksUri, jwtTtl, name, newName, productType, token, uidToken, uniqueIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthMethodUpdateAzureAD {\n");
    sb.append("    accessExpires: ").append(toIndentedString(accessExpires)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    auditLogsClaims: ").append(toIndentedString(auditLogsClaims)).append("\n");
    sb.append("    boundGroupId: ").append(toIndentedString(boundGroupId)).append("\n");
    sb.append("    boundIps: ").append(toIndentedString(boundIps)).append("\n");
    sb.append("    boundProviders: ").append(toIndentedString(boundProviders)).append("\n");
    sb.append("    boundResourceId: ").append(toIndentedString(boundResourceId)).append("\n");
    sb.append("    boundResourceNames: ").append(toIndentedString(boundResourceNames)).append("\n");
    sb.append("    boundResourceTypes: ").append(toIndentedString(boundResourceTypes)).append("\n");
    sb.append("    boundRgId: ").append(toIndentedString(boundRgId)).append("\n");
    sb.append("    boundSpid: ").append(toIndentedString(boundSpid)).append("\n");
    sb.append("    boundSubId: ").append(toIndentedString(boundSubId)).append("\n");
    sb.append("    boundTenantId: ").append(toIndentedString(boundTenantId)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expirationEventIn: ").append(toIndentedString(expirationEventIn)).append("\n");
    sb.append("    forceSubClaims: ").append(toIndentedString(forceSubClaims)).append("\n");
    sb.append("    gwBoundIps: ").append(toIndentedString(gwBoundIps)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    jwksUri: ").append(toIndentedString(jwksUri)).append("\n");
    sb.append("    jwtTtl: ").append(toIndentedString(jwtTtl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newName: ").append(toIndentedString(newName)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    uniqueIdentifier: ").append(toIndentedString(uniqueIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access-expires");
    openapiFields.add("audience");
    openapiFields.add("audit-logs-claims");
    openapiFields.add("bound-group-id");
    openapiFields.add("bound-ips");
    openapiFields.add("bound-providers");
    openapiFields.add("bound-resource-id");
    openapiFields.add("bound-resource-names");
    openapiFields.add("bound-resource-types");
    openapiFields.add("bound-rg-id");
    openapiFields.add("bound-spid");
    openapiFields.add("bound-sub-id");
    openapiFields.add("bound-tenant-id");
    openapiFields.add("delete_protection");
    openapiFields.add("description");
    openapiFields.add("expiration-event-in");
    openapiFields.add("force-sub-claims");
    openapiFields.add("gw-bound-ips");
    openapiFields.add("issuer");
    openapiFields.add("json");
    openapiFields.add("jwks-uri");
    openapiFields.add("jwt-ttl");
    openapiFields.add("name");
    openapiFields.add("new-name");
    openapiFields.add("product-type");
    openapiFields.add("token");
    openapiFields.add("uid-token");
    openapiFields.add("unique-identifier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("bound-tenant-id");
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AuthMethodUpdateAzureAD
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AuthMethodUpdateAzureAD.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthMethodUpdateAzureAD is not found in the empty JSON string", AuthMethodUpdateAzureAD.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AuthMethodUpdateAzureAD.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AuthMethodUpdateAzureAD` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AuthMethodUpdateAzureAD.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull()) && !jsonObj.get("audience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audience").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("audit-logs-claims") != null && !jsonObj.get("audit-logs-claims").isJsonNull() && !jsonObj.get("audit-logs-claims").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `audit-logs-claims` to be an array in the JSON string but got `%s`", jsonObj.get("audit-logs-claims").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-group-id") != null && !jsonObj.get("bound-group-id").isJsonNull() && !jsonObj.get("bound-group-id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-group-id` to be an array in the JSON string but got `%s`", jsonObj.get("bound-group-id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-ips") != null && !jsonObj.get("bound-ips").isJsonNull() && !jsonObj.get("bound-ips").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-ips` to be an array in the JSON string but got `%s`", jsonObj.get("bound-ips").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-providers") != null && !jsonObj.get("bound-providers").isJsonNull() && !jsonObj.get("bound-providers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-providers` to be an array in the JSON string but got `%s`", jsonObj.get("bound-providers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-resource-id") != null && !jsonObj.get("bound-resource-id").isJsonNull() && !jsonObj.get("bound-resource-id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-resource-id` to be an array in the JSON string but got `%s`", jsonObj.get("bound-resource-id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-resource-names") != null && !jsonObj.get("bound-resource-names").isJsonNull() && !jsonObj.get("bound-resource-names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-resource-names` to be an array in the JSON string but got `%s`", jsonObj.get("bound-resource-names").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-resource-types") != null && !jsonObj.get("bound-resource-types").isJsonNull() && !jsonObj.get("bound-resource-types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-resource-types` to be an array in the JSON string but got `%s`", jsonObj.get("bound-resource-types").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-rg-id") != null && !jsonObj.get("bound-rg-id").isJsonNull() && !jsonObj.get("bound-rg-id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-rg-id` to be an array in the JSON string but got `%s`", jsonObj.get("bound-rg-id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-spid") != null && !jsonObj.get("bound-spid").isJsonNull() && !jsonObj.get("bound-spid").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-spid` to be an array in the JSON string but got `%s`", jsonObj.get("bound-spid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-sub-id") != null && !jsonObj.get("bound-sub-id").isJsonNull() && !jsonObj.get("bound-sub-id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-sub-id` to be an array in the JSON string but got `%s`", jsonObj.get("bound-sub-id").toString()));
      }
      if (!jsonObj.get("bound-tenant-id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-tenant-id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bound-tenant-id").toString()));
      }
      if ((jsonObj.get("delete_protection") != null && !jsonObj.get("delete_protection").isJsonNull()) && !jsonObj.get("delete_protection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delete_protection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delete_protection").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("expiration-event-in") != null && !jsonObj.get("expiration-event-in").isJsonNull() && !jsonObj.get("expiration-event-in").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration-event-in` to be an array in the JSON string but got `%s`", jsonObj.get("expiration-event-in").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("gw-bound-ips") != null && !jsonObj.get("gw-bound-ips").isJsonNull() && !jsonObj.get("gw-bound-ips").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `gw-bound-ips` to be an array in the JSON string but got `%s`", jsonObj.get("gw-bound-ips").toString()));
      }
      if ((jsonObj.get("issuer") != null && !jsonObj.get("issuer").isJsonNull()) && !jsonObj.get("issuer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuer").toString()));
      }
      if ((jsonObj.get("jwks-uri") != null && !jsonObj.get("jwks-uri").isJsonNull()) && !jsonObj.get("jwks-uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jwks-uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jwks-uri").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("new-name") != null && !jsonObj.get("new-name").isJsonNull()) && !jsonObj.get("new-name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new-name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new-name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product-type") != null && !jsonObj.get("product-type").isJsonNull() && !jsonObj.get("product-type").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product-type` to be an array in the JSON string but got `%s`", jsonObj.get("product-type").toString()));
      }
      if ((jsonObj.get("token") != null && !jsonObj.get("token").isJsonNull()) && !jsonObj.get("token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token").toString()));
      }
      if ((jsonObj.get("uid-token") != null && !jsonObj.get("uid-token").isJsonNull()) && !jsonObj.get("uid-token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid-token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid-token").toString()));
      }
      if ((jsonObj.get("unique-identifier") != null && !jsonObj.get("unique-identifier").isJsonNull()) && !jsonObj.get("unique-identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique-identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unique-identifier").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthMethodUpdateAzureAD.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthMethodUpdateAzureAD' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthMethodUpdateAzureAD> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthMethodUpdateAzureAD.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthMethodUpdateAzureAD>() {
           @Override
           public void write(JsonWriter out, AuthMethodUpdateAzureAD value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthMethodUpdateAzureAD read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AuthMethodUpdateAzureAD given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AuthMethodUpdateAzureAD
   * @throws IOException if the JSON string is invalid with respect to AuthMethodUpdateAzureAD
   */
  public static AuthMethodUpdateAzureAD fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthMethodUpdateAzureAD.class);
  }

  /**
   * Convert an instance of AuthMethodUpdateAzureAD to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

