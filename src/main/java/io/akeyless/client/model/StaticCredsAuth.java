/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * staticCredsAuth is a command that creates a temporary access profile using the provided static credentials.
 */
@ApiModel(description = "staticCredsAuth is a command that creates a temporary access profile using the provided static credentials.")

public class StaticCredsAuth {
  public static final String SERIALIZED_NAME_ACCESS_ID = "access-id";
  @SerializedName(SERIALIZED_NAME_ACCESS_ID)
  private String accessId;

  public static final String SERIALIZED_NAME_ADMIN_EMAIL = "admin-email";
  @SerializedName(SERIALIZED_NAME_ADMIN_EMAIL)
  private String adminEmail;

  public static final String SERIALIZED_NAME_CREDS = "creds";
  @SerializedName(SERIALIZED_NAME_CREDS)
  private String creds;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;


  public StaticCredsAuth accessId(String accessId) {
    
    this.accessId = accessId;
    return this;
  }

   /**
   * Akeyless JWT token
   * @return accessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Akeyless JWT token")

  public String getAccessId() {
    return accessId;
  }


  public void setAccessId(String accessId) {
    this.accessId = accessId;
  }


  public StaticCredsAuth adminEmail(String adminEmail) {
    
    this.adminEmail = adminEmail;
    return this;
  }

   /**
   * Akeyless JWT token
   * @return adminEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Akeyless JWT token")

  public String getAdminEmail() {
    return adminEmail;
  }


  public void setAdminEmail(String adminEmail) {
    this.adminEmail = adminEmail;
  }


  public StaticCredsAuth creds(String creds) {
    
    this.creds = creds;
    return this;
  }

   /**
   * Akeyless JWT token
   * @return creds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Akeyless JWT token")

  public String getCreds() {
    return creds;
  }


  public void setCreds(String creds) {
    this.creds = creds;
  }


  public StaticCredsAuth json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StaticCredsAuth staticCredsAuth = (StaticCredsAuth) o;
    return Objects.equals(this.accessId, staticCredsAuth.accessId) &&
        Objects.equals(this.adminEmail, staticCredsAuth.adminEmail) &&
        Objects.equals(this.creds, staticCredsAuth.creds) &&
        Objects.equals(this.json, staticCredsAuth.json);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessId, adminEmail, creds, json);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StaticCredsAuth {\n");
    sb.append("    accessId: ").append(toIndentedString(accessId)).append("\n");
    sb.append("    adminEmail: ").append(toIndentedString(adminEmail)).append("\n");
    sb.append("    creds: ").append(toIndentedString(creds)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

