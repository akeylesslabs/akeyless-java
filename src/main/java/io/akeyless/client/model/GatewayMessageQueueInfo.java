/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * GatewayMessageQueueInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GatewayMessageQueueInfo {
  public static final String SERIALIZED_NAME_BROADCAST_QUEUE_NAME_A = "broadcast_queue_name_a";
  @SerializedName(SERIALIZED_NAME_BROADCAST_QUEUE_NAME_A)
  @javax.annotation.Nullable
  private String broadcastQueueNameA;

  public static final String SERIALIZED_NAME_MQ_TYPE = "mq_type";
  @SerializedName(SERIALIZED_NAME_MQ_TYPE)
  @javax.annotation.Nullable
  private String mqType;

  public static final String SERIALIZED_NAME_QUEUE_NAME = "queue_name";
  @SerializedName(SERIALIZED_NAME_QUEUE_NAME)
  @javax.annotation.Nullable
  private String queueName;

  public static final String SERIALIZED_NAME_QUEUE_URL = "queue_url";
  @SerializedName(SERIALIZED_NAME_QUEUE_URL)
  @javax.annotation.Nullable
  private String queueUrl;

  public GatewayMessageQueueInfo() {
  }

  public GatewayMessageQueueInfo broadcastQueueNameA(@javax.annotation.Nullable String broadcastQueueNameA) {
    this.broadcastQueueNameA = broadcastQueueNameA;
    return this;
  }

  /**
   * Get broadcastQueueNameA
   * @return broadcastQueueNameA
   */
  @javax.annotation.Nullable
  public String getBroadcastQueueNameA() {
    return broadcastQueueNameA;
  }

  public void setBroadcastQueueNameA(@javax.annotation.Nullable String broadcastQueueNameA) {
    this.broadcastQueueNameA = broadcastQueueNameA;
  }


  public GatewayMessageQueueInfo mqType(@javax.annotation.Nullable String mqType) {
    this.mqType = mqType;
    return this;
  }

  /**
   * Get mqType
   * @return mqType
   */
  @javax.annotation.Nullable
  public String getMqType() {
    return mqType;
  }

  public void setMqType(@javax.annotation.Nullable String mqType) {
    this.mqType = mqType;
  }


  public GatewayMessageQueueInfo queueName(@javax.annotation.Nullable String queueName) {
    this.queueName = queueName;
    return this;
  }

  /**
   * Get queueName
   * @return queueName
   */
  @javax.annotation.Nullable
  public String getQueueName() {
    return queueName;
  }

  public void setQueueName(@javax.annotation.Nullable String queueName) {
    this.queueName = queueName;
  }


  public GatewayMessageQueueInfo queueUrl(@javax.annotation.Nullable String queueUrl) {
    this.queueUrl = queueUrl;
    return this;
  }

  /**
   * Get queueUrl
   * @return queueUrl
   */
  @javax.annotation.Nullable
  public String getQueueUrl() {
    return queueUrl;
  }

  public void setQueueUrl(@javax.annotation.Nullable String queueUrl) {
    this.queueUrl = queueUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayMessageQueueInfo gatewayMessageQueueInfo = (GatewayMessageQueueInfo) o;
    return Objects.equals(this.broadcastQueueNameA, gatewayMessageQueueInfo.broadcastQueueNameA) &&
        Objects.equals(this.mqType, gatewayMessageQueueInfo.mqType) &&
        Objects.equals(this.queueName, gatewayMessageQueueInfo.queueName) &&
        Objects.equals(this.queueUrl, gatewayMessageQueueInfo.queueUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(broadcastQueueNameA, mqType, queueName, queueUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayMessageQueueInfo {\n");
    sb.append("    broadcastQueueNameA: ").append(toIndentedString(broadcastQueueNameA)).append("\n");
    sb.append("    mqType: ").append(toIndentedString(mqType)).append("\n");
    sb.append("    queueName: ").append(toIndentedString(queueName)).append("\n");
    sb.append("    queueUrl: ").append(toIndentedString(queueUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("broadcast_queue_name_a");
    openapiFields.add("mq_type");
    openapiFields.add("queue_name");
    openapiFields.add("queue_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GatewayMessageQueueInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GatewayMessageQueueInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GatewayMessageQueueInfo is not found in the empty JSON string", GatewayMessageQueueInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GatewayMessageQueueInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GatewayMessageQueueInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("broadcast_queue_name_a") != null && !jsonObj.get("broadcast_queue_name_a").isJsonNull()) && !jsonObj.get("broadcast_queue_name_a").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `broadcast_queue_name_a` to be a primitive type in the JSON string but got `%s`", jsonObj.get("broadcast_queue_name_a").toString()));
      }
      if ((jsonObj.get("mq_type") != null && !jsonObj.get("mq_type").isJsonNull()) && !jsonObj.get("mq_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mq_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mq_type").toString()));
      }
      if ((jsonObj.get("queue_name") != null && !jsonObj.get("queue_name").isJsonNull()) && !jsonObj.get("queue_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_name").toString()));
      }
      if ((jsonObj.get("queue_url") != null && !jsonObj.get("queue_url").isJsonNull()) && !jsonObj.get("queue_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GatewayMessageQueueInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GatewayMessageQueueInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GatewayMessageQueueInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GatewayMessageQueueInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GatewayMessageQueueInfo>() {
           @Override
           public void write(JsonWriter out, GatewayMessageQueueInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GatewayMessageQueueInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GatewayMessageQueueInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GatewayMessageQueueInfo
   * @throws IOException if the JSON string is invalid with respect to GatewayMessageQueueInfo
   */
  public static GatewayMessageQueueInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GatewayMessageQueueInfo.class);
  }

  /**
   * Convert an instance of GatewayMessageQueueInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

