/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.BastionsList;
import io.akeyless.client.model.CertificateIssueInfo;
import io.akeyless.client.model.GatewayDetailsForItemReplyObj;
import io.akeyless.client.model.ItemGeneralInfo;
import io.akeyless.client.model.ItemTargetAssociation;
import io.akeyless.client.model.ItemUSCSyncAssociation;
import io.akeyless.client.model.ItemVersion;
import io.akeyless.client.model.LinkedDetails;
import io.akeyless.client.model.RuleAssigner;
import io.akeyless.client.model.TargetItemVersion;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * Item
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class Item {
  public static final String SERIALIZED_NAME_ACCESS_DATE = "access_date";
  @SerializedName(SERIALIZED_NAME_ACCESS_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime accessDate;

  public static final String SERIALIZED_NAME_ACCESS_DATE_DISPLAY = "access_date_display";
  @SerializedName(SERIALIZED_NAME_ACCESS_DATE_DISPLAY)
  @javax.annotation.Nullable
  private String accessDateDisplay;

  public static final String SERIALIZED_NAME_ACCESS_REQUEST_STATUS = "access_request_status";
  @SerializedName(SERIALIZED_NAME_ACCESS_REQUEST_STATUS)
  @javax.annotation.Nullable
  private String accessRequestStatus;

  public static final String SERIALIZED_NAME_AUTO_ROTATE = "auto_rotate";
  @SerializedName(SERIALIZED_NAME_AUTO_ROTATE)
  @javax.annotation.Nullable
  private Boolean autoRotate;

  public static final String SERIALIZED_NAME_BASTION_DETAILS = "bastion_details";
  @SerializedName(SERIALIZED_NAME_BASTION_DETAILS)
  @javax.annotation.Nullable
  private BastionsList bastionDetails;

  public static final String SERIALIZED_NAME_CERT_ISSUER_SIGNER_KEY_NAME = "cert_issuer_signer_key_name";
  @SerializedName(SERIALIZED_NAME_CERT_ISSUER_SIGNER_KEY_NAME)
  @javax.annotation.Nullable
  private String certIssuerSignerKeyName;

  public static final String SERIALIZED_NAME_CERTIFICATE_ISSUE_DETAILS = "certificate_issue_details";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ISSUE_DETAILS)
  @javax.annotation.Nullable
  private CertificateIssueInfo certificateIssueDetails;

  public static final String SERIALIZED_NAME_CERTIFICATES = "certificates";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES)
  @javax.annotation.Nullable
  private String certificates;

  public static final String SERIALIZED_NAME_CLIENT_PERMISSIONS = "client_permissions";
  @SerializedName(SERIALIZED_NAME_CLIENT_PERMISSIONS)
  @javax.annotation.Nullable
  private List<String> clientPermissions = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_CUSTOMER_FRAGMENT_ID = "customer_fragment_id";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FRAGMENT_ID)
  @javax.annotation.Nullable
  private String customerFragmentId;

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  @javax.annotation.Nullable
  private Boolean deleteProtection;

  public static final String SERIALIZED_NAME_DELETION_DATE = "deletion_date";
  @SerializedName(SERIALIZED_NAME_DELETION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime deletionDate;

  public static final String SERIALIZED_NAME_DISPLAY_ID = "display_id";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ID)
  @javax.annotation.Nullable
  private String displayId;

  public static final String SERIALIZED_NAME_GATEWAY_DETAILS = "gateway_details";
  @SerializedName(SERIALIZED_NAME_GATEWAY_DETAILS)
  @javax.annotation.Nullable
  private List<GatewayDetailsForItemReplyObj> gatewayDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_ACCESS_REQUEST_ENABLED = "is_access_request_enabled";
  @SerializedName(SERIALIZED_NAME_IS_ACCESS_REQUEST_ENABLED)
  @javax.annotation.Nullable
  private Boolean isAccessRequestEnabled;

  public static final String SERIALIZED_NAME_IS_ENABLED = "is_enabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  @javax.annotation.Nullable
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_ITEM_ACCESSIBILITY = "item_accessibility";
  @SerializedName(SERIALIZED_NAME_ITEM_ACCESSIBILITY)
  @javax.annotation.Nullable
  private Long itemAccessibility;

  public static final String SERIALIZED_NAME_ITEM_GENERAL_INFO = "item_general_info";
  @SerializedName(SERIALIZED_NAME_ITEM_GENERAL_INFO)
  @javax.annotation.Nullable
  private ItemGeneralInfo itemGeneralInfo;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  @javax.annotation.Nullable
  private Long itemId;

  public static final String SERIALIZED_NAME_ITEM_METADATA = "item_metadata";
  @SerializedName(SERIALIZED_NAME_ITEM_METADATA)
  @javax.annotation.Nullable
  private String itemMetadata;

  public static final String SERIALIZED_NAME_ITEM_NAME = "item_name";
  @SerializedName(SERIALIZED_NAME_ITEM_NAME)
  @javax.annotation.Nullable
  private String itemName;

  public static final String SERIALIZED_NAME_ITEM_SIZE = "item_size";
  @SerializedName(SERIALIZED_NAME_ITEM_SIZE)
  @javax.annotation.Nullable
  private Long itemSize;

  public static final String SERIALIZED_NAME_ITEM_STATE = "item_state";
  @SerializedName(SERIALIZED_NAME_ITEM_STATE)
  @javax.annotation.Nullable
  private String itemState;

  public static final String SERIALIZED_NAME_ITEM_SUB_TYPE = "item_sub_type";
  @SerializedName(SERIALIZED_NAME_ITEM_SUB_TYPE)
  @javax.annotation.Nullable
  private String itemSubType;

  public static final String SERIALIZED_NAME_ITEM_TAGS = "item_tags";
  @SerializedName(SERIALIZED_NAME_ITEM_TAGS)
  @javax.annotation.Nullable
  private List<String> itemTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_ITEM_TARGETS_ASSOC = "item_targets_assoc";
  @SerializedName(SERIALIZED_NAME_ITEM_TARGETS_ASSOC)
  @javax.annotation.Nullable
  private List<ItemTargetAssociation> itemTargetsAssoc = new ArrayList<>();

  public static final String SERIALIZED_NAME_ITEM_TYPE = "item_type";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPE)
  @javax.annotation.Nullable
  private String itemType;

  public static final String SERIALIZED_NAME_ITEM_VERSIONS = "item_versions";
  @SerializedName(SERIALIZED_NAME_ITEM_VERSIONS)
  @javax.annotation.Nullable
  private List<ItemVersion> itemVersions = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_ROTATION_DATE = "last_rotation_date";
  @SerializedName(SERIALIZED_NAME_LAST_ROTATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime lastRotationDate;

  public static final String SERIALIZED_NAME_LAST_VERSION = "last_version";
  @SerializedName(SERIALIZED_NAME_LAST_VERSION)
  @javax.annotation.Nullable
  private Integer lastVersion;

  public static final String SERIALIZED_NAME_LINKED_DETAILS = "linked_details";
  @SerializedName(SERIALIZED_NAME_LINKED_DETAILS)
  @javax.annotation.Nullable
  private LinkedDetails linkedDetails;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modification_date";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime modificationDate;

  public static final String SERIALIZED_NAME_NEXT_ROTATION_DATE = "next_rotation_date";
  @SerializedName(SERIALIZED_NAME_NEXT_ROTATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime nextRotationDate;

  public static final String SERIALIZED_NAME_PROTECTION_KEY_NAME = "protection_key_name";
  @SerializedName(SERIALIZED_NAME_PROTECTION_KEY_NAME)
  @javax.annotation.Nullable
  private String protectionKeyName;

  public static final String SERIALIZED_NAME_PROTECTION_KEY_TYPE = "protection_key_type";
  @SerializedName(SERIALIZED_NAME_PROTECTION_KEY_TYPE)
  @javax.annotation.Nullable
  private String protectionKeyType;

  public static final String SERIALIZED_NAME_PUBLIC_VALUE = "public_value";
  @SerializedName(SERIALIZED_NAME_PUBLIC_VALUE)
  @javax.annotation.Nullable
  private String publicValue;

  public static final String SERIALIZED_NAME_ROTATION_INTERVAL = "rotation_interval";
  @SerializedName(SERIALIZED_NAME_ROTATION_INTERVAL)
  @javax.annotation.Nullable
  private Long rotationInterval;

  public static final String SERIALIZED_NAME_SHARED_BY = "shared_by";
  @SerializedName(SERIALIZED_NAME_SHARED_BY)
  @javax.annotation.Nullable
  private RuleAssigner sharedBy;

  public static final String SERIALIZED_NAME_TARGET_VERSIONS = "target_versions";
  @SerializedName(SERIALIZED_NAME_TARGET_VERSIONS)
  @javax.annotation.Nullable
  private List<TargetItemVersion> targetVersions = new ArrayList<>();

  public static final String SERIALIZED_NAME_USC_SYNC_ASSOCIATED_ITEMS = "usc_sync_associated_items";
  @SerializedName(SERIALIZED_NAME_USC_SYNC_ASSOCIATED_ITEMS)
  @javax.annotation.Nullable
  private List<ItemUSCSyncAssociation> uscSyncAssociatedItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_WITH_CUSTOMER_FRAGMENT = "with_customer_fragment";
  @SerializedName(SERIALIZED_NAME_WITH_CUSTOMER_FRAGMENT)
  @javax.annotation.Nullable
  private Boolean withCustomerFragment;

  public Item() {
  }

  public Item accessDate(@javax.annotation.Nullable OffsetDateTime accessDate) {
    this.accessDate = accessDate;
    return this;
  }

  /**
   * Get accessDate
   * @return accessDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAccessDate() {
    return accessDate;
  }

  public void setAccessDate(@javax.annotation.Nullable OffsetDateTime accessDate) {
    this.accessDate = accessDate;
  }


  public Item accessDateDisplay(@javax.annotation.Nullable String accessDateDisplay) {
    this.accessDateDisplay = accessDateDisplay;
    return this;
  }

  /**
   * Get accessDateDisplay
   * @return accessDateDisplay
   */
  @javax.annotation.Nullable
  public String getAccessDateDisplay() {
    return accessDateDisplay;
  }

  public void setAccessDateDisplay(@javax.annotation.Nullable String accessDateDisplay) {
    this.accessDateDisplay = accessDateDisplay;
  }


  public Item accessRequestStatus(@javax.annotation.Nullable String accessRequestStatus) {
    this.accessRequestStatus = accessRequestStatus;
    return this;
  }

  /**
   * Get accessRequestStatus
   * @return accessRequestStatus
   */
  @javax.annotation.Nullable
  public String getAccessRequestStatus() {
    return accessRequestStatus;
  }

  public void setAccessRequestStatus(@javax.annotation.Nullable String accessRequestStatus) {
    this.accessRequestStatus = accessRequestStatus;
  }


  public Item autoRotate(@javax.annotation.Nullable Boolean autoRotate) {
    this.autoRotate = autoRotate;
    return this;
  }

  /**
   * Get autoRotate
   * @return autoRotate
   */
  @javax.annotation.Nullable
  public Boolean getAutoRotate() {
    return autoRotate;
  }

  public void setAutoRotate(@javax.annotation.Nullable Boolean autoRotate) {
    this.autoRotate = autoRotate;
  }


  public Item bastionDetails(@javax.annotation.Nullable BastionsList bastionDetails) {
    this.bastionDetails = bastionDetails;
    return this;
  }

  /**
   * Get bastionDetails
   * @return bastionDetails
   */
  @javax.annotation.Nullable
  public BastionsList getBastionDetails() {
    return bastionDetails;
  }

  public void setBastionDetails(@javax.annotation.Nullable BastionsList bastionDetails) {
    this.bastionDetails = bastionDetails;
  }


  public Item certIssuerSignerKeyName(@javax.annotation.Nullable String certIssuerSignerKeyName) {
    this.certIssuerSignerKeyName = certIssuerSignerKeyName;
    return this;
  }

  /**
   * Get certIssuerSignerKeyName
   * @return certIssuerSignerKeyName
   */
  @javax.annotation.Nullable
  public String getCertIssuerSignerKeyName() {
    return certIssuerSignerKeyName;
  }

  public void setCertIssuerSignerKeyName(@javax.annotation.Nullable String certIssuerSignerKeyName) {
    this.certIssuerSignerKeyName = certIssuerSignerKeyName;
  }


  public Item certificateIssueDetails(@javax.annotation.Nullable CertificateIssueInfo certificateIssueDetails) {
    this.certificateIssueDetails = certificateIssueDetails;
    return this;
  }

  /**
   * Get certificateIssueDetails
   * @return certificateIssueDetails
   */
  @javax.annotation.Nullable
  public CertificateIssueInfo getCertificateIssueDetails() {
    return certificateIssueDetails;
  }

  public void setCertificateIssueDetails(@javax.annotation.Nullable CertificateIssueInfo certificateIssueDetails) {
    this.certificateIssueDetails = certificateIssueDetails;
  }


  public Item certificates(@javax.annotation.Nullable String certificates) {
    this.certificates = certificates;
    return this;
  }

  /**
   * Get certificates
   * @return certificates
   */
  @javax.annotation.Nullable
  public String getCertificates() {
    return certificates;
  }

  public void setCertificates(@javax.annotation.Nullable String certificates) {
    this.certificates = certificates;
  }


  public Item clientPermissions(@javax.annotation.Nullable List<String> clientPermissions) {
    this.clientPermissions = clientPermissions;
    return this;
  }

  public Item addClientPermissionsItem(String clientPermissionsItem) {
    if (this.clientPermissions == null) {
      this.clientPermissions = new ArrayList<>();
    }
    this.clientPermissions.add(clientPermissionsItem);
    return this;
  }

  /**
   * Get clientPermissions
   * @return clientPermissions
   */
  @javax.annotation.Nullable
  public List<String> getClientPermissions() {
    return clientPermissions;
  }

  public void setClientPermissions(@javax.annotation.Nullable List<String> clientPermissions) {
    this.clientPermissions = clientPermissions;
  }


  public Item creationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public Item customerFragmentId(@javax.annotation.Nullable String customerFragmentId) {
    this.customerFragmentId = customerFragmentId;
    return this;
  }

  /**
   * Get customerFragmentId
   * @return customerFragmentId
   */
  @javax.annotation.Nullable
  public String getCustomerFragmentId() {
    return customerFragmentId;
  }

  public void setCustomerFragmentId(@javax.annotation.Nullable String customerFragmentId) {
    this.customerFragmentId = customerFragmentId;
  }


  public Item deleteProtection(@javax.annotation.Nullable Boolean deleteProtection) {
    this.deleteProtection = deleteProtection;
    return this;
  }

  /**
   * Get deleteProtection
   * @return deleteProtection
   */
  @javax.annotation.Nullable
  public Boolean getDeleteProtection() {
    return deleteProtection;
  }

  public void setDeleteProtection(@javax.annotation.Nullable Boolean deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public Item deletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = deletionDate;
    return this;
  }

  /**
   * Get deletionDate
   * @return deletionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletionDate() {
    return deletionDate;
  }

  public void setDeletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = deletionDate;
  }


  public Item displayId(@javax.annotation.Nullable String displayId) {
    this.displayId = displayId;
    return this;
  }

  /**
   * Get displayId
   * @return displayId
   */
  @javax.annotation.Nullable
  public String getDisplayId() {
    return displayId;
  }

  public void setDisplayId(@javax.annotation.Nullable String displayId) {
    this.displayId = displayId;
  }


  public Item gatewayDetails(@javax.annotation.Nullable List<GatewayDetailsForItemReplyObj> gatewayDetails) {
    this.gatewayDetails = gatewayDetails;
    return this;
  }

  public Item addGatewayDetailsItem(GatewayDetailsForItemReplyObj gatewayDetailsItem) {
    if (this.gatewayDetails == null) {
      this.gatewayDetails = new ArrayList<>();
    }
    this.gatewayDetails.add(gatewayDetailsItem);
    return this;
  }

  /**
   * Get gatewayDetails
   * @return gatewayDetails
   */
  @javax.annotation.Nullable
  public List<GatewayDetailsForItemReplyObj> getGatewayDetails() {
    return gatewayDetails;
  }

  public void setGatewayDetails(@javax.annotation.Nullable List<GatewayDetailsForItemReplyObj> gatewayDetails) {
    this.gatewayDetails = gatewayDetails;
  }


  public Item isAccessRequestEnabled(@javax.annotation.Nullable Boolean isAccessRequestEnabled) {
    this.isAccessRequestEnabled = isAccessRequestEnabled;
    return this;
  }

  /**
   * Get isAccessRequestEnabled
   * @return isAccessRequestEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIsAccessRequestEnabled() {
    return isAccessRequestEnabled;
  }

  public void setIsAccessRequestEnabled(@javax.annotation.Nullable Boolean isAccessRequestEnabled) {
    this.isAccessRequestEnabled = isAccessRequestEnabled;
  }


  public Item isEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Get isEnabled
   * @return isEnabled
   */
  @javax.annotation.Nullable
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(@javax.annotation.Nullable Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public Item itemAccessibility(@javax.annotation.Nullable Long itemAccessibility) {
    this.itemAccessibility = itemAccessibility;
    return this;
  }

  /**
   * Get itemAccessibility
   * @return itemAccessibility
   */
  @javax.annotation.Nullable
  public Long getItemAccessibility() {
    return itemAccessibility;
  }

  public void setItemAccessibility(@javax.annotation.Nullable Long itemAccessibility) {
    this.itemAccessibility = itemAccessibility;
  }


  public Item itemGeneralInfo(@javax.annotation.Nullable ItemGeneralInfo itemGeneralInfo) {
    this.itemGeneralInfo = itemGeneralInfo;
    return this;
  }

  /**
   * Get itemGeneralInfo
   * @return itemGeneralInfo
   */
  @javax.annotation.Nullable
  public ItemGeneralInfo getItemGeneralInfo() {
    return itemGeneralInfo;
  }

  public void setItemGeneralInfo(@javax.annotation.Nullable ItemGeneralInfo itemGeneralInfo) {
    this.itemGeneralInfo = itemGeneralInfo;
  }


  public Item itemId(@javax.annotation.Nullable Long itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Get itemId
   * @return itemId
   */
  @javax.annotation.Nullable
  public Long getItemId() {
    return itemId;
  }

  public void setItemId(@javax.annotation.Nullable Long itemId) {
    this.itemId = itemId;
  }


  public Item itemMetadata(@javax.annotation.Nullable String itemMetadata) {
    this.itemMetadata = itemMetadata;
    return this;
  }

  /**
   * Get itemMetadata
   * @return itemMetadata
   */
  @javax.annotation.Nullable
  public String getItemMetadata() {
    return itemMetadata;
  }

  public void setItemMetadata(@javax.annotation.Nullable String itemMetadata) {
    this.itemMetadata = itemMetadata;
  }


  public Item itemName(@javax.annotation.Nullable String itemName) {
    this.itemName = itemName;
    return this;
  }

  /**
   * Get itemName
   * @return itemName
   */
  @javax.annotation.Nullable
  public String getItemName() {
    return itemName;
  }

  public void setItemName(@javax.annotation.Nullable String itemName) {
    this.itemName = itemName;
  }


  public Item itemSize(@javax.annotation.Nullable Long itemSize) {
    this.itemSize = itemSize;
    return this;
  }

  /**
   * Get itemSize
   * @return itemSize
   */
  @javax.annotation.Nullable
  public Long getItemSize() {
    return itemSize;
  }

  public void setItemSize(@javax.annotation.Nullable Long itemSize) {
    this.itemSize = itemSize;
  }


  public Item itemState(@javax.annotation.Nullable String itemState) {
    this.itemState = itemState;
    return this;
  }

  /**
   * ItemState defines the different states an Item can be in
   * @return itemState
   */
  @javax.annotation.Nullable
  public String getItemState() {
    return itemState;
  }

  public void setItemState(@javax.annotation.Nullable String itemState) {
    this.itemState = itemState;
  }


  public Item itemSubType(@javax.annotation.Nullable String itemSubType) {
    this.itemSubType = itemSubType;
    return this;
  }

  /**
   * Get itemSubType
   * @return itemSubType
   */
  @javax.annotation.Nullable
  public String getItemSubType() {
    return itemSubType;
  }

  public void setItemSubType(@javax.annotation.Nullable String itemSubType) {
    this.itemSubType = itemSubType;
  }


  public Item itemTags(@javax.annotation.Nullable List<String> itemTags) {
    this.itemTags = itemTags;
    return this;
  }

  public Item addItemTagsItem(String itemTagsItem) {
    if (this.itemTags == null) {
      this.itemTags = new ArrayList<>();
    }
    this.itemTags.add(itemTagsItem);
    return this;
  }

  /**
   * Get itemTags
   * @return itemTags
   */
  @javax.annotation.Nullable
  public List<String> getItemTags() {
    return itemTags;
  }

  public void setItemTags(@javax.annotation.Nullable List<String> itemTags) {
    this.itemTags = itemTags;
  }


  public Item itemTargetsAssoc(@javax.annotation.Nullable List<ItemTargetAssociation> itemTargetsAssoc) {
    this.itemTargetsAssoc = itemTargetsAssoc;
    return this;
  }

  public Item addItemTargetsAssocItem(ItemTargetAssociation itemTargetsAssocItem) {
    if (this.itemTargetsAssoc == null) {
      this.itemTargetsAssoc = new ArrayList<>();
    }
    this.itemTargetsAssoc.add(itemTargetsAssocItem);
    return this;
  }

  /**
   * Get itemTargetsAssoc
   * @return itemTargetsAssoc
   */
  @javax.annotation.Nullable
  public List<ItemTargetAssociation> getItemTargetsAssoc() {
    return itemTargetsAssoc;
  }

  public void setItemTargetsAssoc(@javax.annotation.Nullable List<ItemTargetAssociation> itemTargetsAssoc) {
    this.itemTargetsAssoc = itemTargetsAssoc;
  }


  public Item itemType(@javax.annotation.Nullable String itemType) {
    this.itemType = itemType;
    return this;
  }

  /**
   * Get itemType
   * @return itemType
   */
  @javax.annotation.Nullable
  public String getItemType() {
    return itemType;
  }

  public void setItemType(@javax.annotation.Nullable String itemType) {
    this.itemType = itemType;
  }


  public Item itemVersions(@javax.annotation.Nullable List<ItemVersion> itemVersions) {
    this.itemVersions = itemVersions;
    return this;
  }

  public Item addItemVersionsItem(ItemVersion itemVersionsItem) {
    if (this.itemVersions == null) {
      this.itemVersions = new ArrayList<>();
    }
    this.itemVersions.add(itemVersionsItem);
    return this;
  }

  /**
   * Get itemVersions
   * @return itemVersions
   */
  @javax.annotation.Nullable
  public List<ItemVersion> getItemVersions() {
    return itemVersions;
  }

  public void setItemVersions(@javax.annotation.Nullable List<ItemVersion> itemVersions) {
    this.itemVersions = itemVersions;
  }


  public Item lastRotationDate(@javax.annotation.Nullable OffsetDateTime lastRotationDate) {
    this.lastRotationDate = lastRotationDate;
    return this;
  }

  /**
   * Get lastRotationDate
   * @return lastRotationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastRotationDate() {
    return lastRotationDate;
  }

  public void setLastRotationDate(@javax.annotation.Nullable OffsetDateTime lastRotationDate) {
    this.lastRotationDate = lastRotationDate;
  }


  public Item lastVersion(@javax.annotation.Nullable Integer lastVersion) {
    this.lastVersion = lastVersion;
    return this;
  }

  /**
   * Get lastVersion
   * @return lastVersion
   */
  @javax.annotation.Nullable
  public Integer getLastVersion() {
    return lastVersion;
  }

  public void setLastVersion(@javax.annotation.Nullable Integer lastVersion) {
    this.lastVersion = lastVersion;
  }


  public Item linkedDetails(@javax.annotation.Nullable LinkedDetails linkedDetails) {
    this.linkedDetails = linkedDetails;
    return this;
  }

  /**
   * Get linkedDetails
   * @return linkedDetails
   */
  @javax.annotation.Nullable
  public LinkedDetails getLinkedDetails() {
    return linkedDetails;
  }

  public void setLinkedDetails(@javax.annotation.Nullable LinkedDetails linkedDetails) {
    this.linkedDetails = linkedDetails;
  }


  public Item modificationDate(@javax.annotation.Nullable OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

  /**
   * Get modificationDate
   * @return modificationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(@javax.annotation.Nullable OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }


  public Item nextRotationDate(@javax.annotation.Nullable OffsetDateTime nextRotationDate) {
    this.nextRotationDate = nextRotationDate;
    return this;
  }

  /**
   * Get nextRotationDate
   * @return nextRotationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getNextRotationDate() {
    return nextRotationDate;
  }

  public void setNextRotationDate(@javax.annotation.Nullable OffsetDateTime nextRotationDate) {
    this.nextRotationDate = nextRotationDate;
  }


  public Item protectionKeyName(@javax.annotation.Nullable String protectionKeyName) {
    this.protectionKeyName = protectionKeyName;
    return this;
  }

  /**
   * Get protectionKeyName
   * @return protectionKeyName
   */
  @javax.annotation.Nullable
  public String getProtectionKeyName() {
    return protectionKeyName;
  }

  public void setProtectionKeyName(@javax.annotation.Nullable String protectionKeyName) {
    this.protectionKeyName = protectionKeyName;
  }


  public Item protectionKeyType(@javax.annotation.Nullable String protectionKeyType) {
    this.protectionKeyType = protectionKeyType;
    return this;
  }

  /**
   * Get protectionKeyType
   * @return protectionKeyType
   */
  @javax.annotation.Nullable
  public String getProtectionKeyType() {
    return protectionKeyType;
  }

  public void setProtectionKeyType(@javax.annotation.Nullable String protectionKeyType) {
    this.protectionKeyType = protectionKeyType;
  }


  public Item publicValue(@javax.annotation.Nullable String publicValue) {
    this.publicValue = publicValue;
    return this;
  }

  /**
   * Get publicValue
   * @return publicValue
   */
  @javax.annotation.Nullable
  public String getPublicValue() {
    return publicValue;
  }

  public void setPublicValue(@javax.annotation.Nullable String publicValue) {
    this.publicValue = publicValue;
  }


  public Item rotationInterval(@javax.annotation.Nullable Long rotationInterval) {
    this.rotationInterval = rotationInterval;
    return this;
  }

  /**
   * Get rotationInterval
   * @return rotationInterval
   */
  @javax.annotation.Nullable
  public Long getRotationInterval() {
    return rotationInterval;
  }

  public void setRotationInterval(@javax.annotation.Nullable Long rotationInterval) {
    this.rotationInterval = rotationInterval;
  }


  public Item sharedBy(@javax.annotation.Nullable RuleAssigner sharedBy) {
    this.sharedBy = sharedBy;
    return this;
  }

  /**
   * Get sharedBy
   * @return sharedBy
   */
  @javax.annotation.Nullable
  public RuleAssigner getSharedBy() {
    return sharedBy;
  }

  public void setSharedBy(@javax.annotation.Nullable RuleAssigner sharedBy) {
    this.sharedBy = sharedBy;
  }


  public Item targetVersions(@javax.annotation.Nullable List<TargetItemVersion> targetVersions) {
    this.targetVersions = targetVersions;
    return this;
  }

  public Item addTargetVersionsItem(TargetItemVersion targetVersionsItem) {
    if (this.targetVersions == null) {
      this.targetVersions = new ArrayList<>();
    }
    this.targetVersions.add(targetVersionsItem);
    return this;
  }

  /**
   * Get targetVersions
   * @return targetVersions
   */
  @javax.annotation.Nullable
  public List<TargetItemVersion> getTargetVersions() {
    return targetVersions;
  }

  public void setTargetVersions(@javax.annotation.Nullable List<TargetItemVersion> targetVersions) {
    this.targetVersions = targetVersions;
  }


  public Item uscSyncAssociatedItems(@javax.annotation.Nullable List<ItemUSCSyncAssociation> uscSyncAssociatedItems) {
    this.uscSyncAssociatedItems = uscSyncAssociatedItems;
    return this;
  }

  public Item addUscSyncAssociatedItemsItem(ItemUSCSyncAssociation uscSyncAssociatedItemsItem) {
    if (this.uscSyncAssociatedItems == null) {
      this.uscSyncAssociatedItems = new ArrayList<>();
    }
    this.uscSyncAssociatedItems.add(uscSyncAssociatedItemsItem);
    return this;
  }

  /**
   * for USC item, hold rotated-secrets that are associated to him for rotated-secret, holds the associated USCs
   * @return uscSyncAssociatedItems
   */
  @javax.annotation.Nullable
  public List<ItemUSCSyncAssociation> getUscSyncAssociatedItems() {
    return uscSyncAssociatedItems;
  }

  public void setUscSyncAssociatedItems(@javax.annotation.Nullable List<ItemUSCSyncAssociation> uscSyncAssociatedItems) {
    this.uscSyncAssociatedItems = uscSyncAssociatedItems;
  }


  public Item withCustomerFragment(@javax.annotation.Nullable Boolean withCustomerFragment) {
    this.withCustomerFragment = withCustomerFragment;
    return this;
  }

  /**
   * Get withCustomerFragment
   * @return withCustomerFragment
   */
  @javax.annotation.Nullable
  public Boolean getWithCustomerFragment() {
    return withCustomerFragment;
  }

  public void setWithCustomerFragment(@javax.annotation.Nullable Boolean withCustomerFragment) {
    this.withCustomerFragment = withCustomerFragment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.accessDate, item.accessDate) &&
        Objects.equals(this.accessDateDisplay, item.accessDateDisplay) &&
        Objects.equals(this.accessRequestStatus, item.accessRequestStatus) &&
        Objects.equals(this.autoRotate, item.autoRotate) &&
        Objects.equals(this.bastionDetails, item.bastionDetails) &&
        Objects.equals(this.certIssuerSignerKeyName, item.certIssuerSignerKeyName) &&
        Objects.equals(this.certificateIssueDetails, item.certificateIssueDetails) &&
        Objects.equals(this.certificates, item.certificates) &&
        Objects.equals(this.clientPermissions, item.clientPermissions) &&
        Objects.equals(this.creationDate, item.creationDate) &&
        Objects.equals(this.customerFragmentId, item.customerFragmentId) &&
        Objects.equals(this.deleteProtection, item.deleteProtection) &&
        Objects.equals(this.deletionDate, item.deletionDate) &&
        Objects.equals(this.displayId, item.displayId) &&
        Objects.equals(this.gatewayDetails, item.gatewayDetails) &&
        Objects.equals(this.isAccessRequestEnabled, item.isAccessRequestEnabled) &&
        Objects.equals(this.isEnabled, item.isEnabled) &&
        Objects.equals(this.itemAccessibility, item.itemAccessibility) &&
        Objects.equals(this.itemGeneralInfo, item.itemGeneralInfo) &&
        Objects.equals(this.itemId, item.itemId) &&
        Objects.equals(this.itemMetadata, item.itemMetadata) &&
        Objects.equals(this.itemName, item.itemName) &&
        Objects.equals(this.itemSize, item.itemSize) &&
        Objects.equals(this.itemState, item.itemState) &&
        Objects.equals(this.itemSubType, item.itemSubType) &&
        Objects.equals(this.itemTags, item.itemTags) &&
        Objects.equals(this.itemTargetsAssoc, item.itemTargetsAssoc) &&
        Objects.equals(this.itemType, item.itemType) &&
        Objects.equals(this.itemVersions, item.itemVersions) &&
        Objects.equals(this.lastRotationDate, item.lastRotationDate) &&
        Objects.equals(this.lastVersion, item.lastVersion) &&
        Objects.equals(this.linkedDetails, item.linkedDetails) &&
        Objects.equals(this.modificationDate, item.modificationDate) &&
        Objects.equals(this.nextRotationDate, item.nextRotationDate) &&
        Objects.equals(this.protectionKeyName, item.protectionKeyName) &&
        Objects.equals(this.protectionKeyType, item.protectionKeyType) &&
        Objects.equals(this.publicValue, item.publicValue) &&
        Objects.equals(this.rotationInterval, item.rotationInterval) &&
        Objects.equals(this.sharedBy, item.sharedBy) &&
        Objects.equals(this.targetVersions, item.targetVersions) &&
        Objects.equals(this.uscSyncAssociatedItems, item.uscSyncAssociatedItems) &&
        Objects.equals(this.withCustomerFragment, item.withCustomerFragment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessDate, accessDateDisplay, accessRequestStatus, autoRotate, bastionDetails, certIssuerSignerKeyName, certificateIssueDetails, certificates, clientPermissions, creationDate, customerFragmentId, deleteProtection, deletionDate, displayId, gatewayDetails, isAccessRequestEnabled, isEnabled, itemAccessibility, itemGeneralInfo, itemId, itemMetadata, itemName, itemSize, itemState, itemSubType, itemTags, itemTargetsAssoc, itemType, itemVersions, lastRotationDate, lastVersion, linkedDetails, modificationDate, nextRotationDate, protectionKeyName, protectionKeyType, publicValue, rotationInterval, sharedBy, targetVersions, uscSyncAssociatedItems, withCustomerFragment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    sb.append("    accessDate: ").append(toIndentedString(accessDate)).append("\n");
    sb.append("    accessDateDisplay: ").append(toIndentedString(accessDateDisplay)).append("\n");
    sb.append("    accessRequestStatus: ").append(toIndentedString(accessRequestStatus)).append("\n");
    sb.append("    autoRotate: ").append(toIndentedString(autoRotate)).append("\n");
    sb.append("    bastionDetails: ").append(toIndentedString(bastionDetails)).append("\n");
    sb.append("    certIssuerSignerKeyName: ").append(toIndentedString(certIssuerSignerKeyName)).append("\n");
    sb.append("    certificateIssueDetails: ").append(toIndentedString(certificateIssueDetails)).append("\n");
    sb.append("    certificates: ").append(toIndentedString(certificates)).append("\n");
    sb.append("    clientPermissions: ").append(toIndentedString(clientPermissions)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customerFragmentId: ").append(toIndentedString(customerFragmentId)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    deletionDate: ").append(toIndentedString(deletionDate)).append("\n");
    sb.append("    displayId: ").append(toIndentedString(displayId)).append("\n");
    sb.append("    gatewayDetails: ").append(toIndentedString(gatewayDetails)).append("\n");
    sb.append("    isAccessRequestEnabled: ").append(toIndentedString(isAccessRequestEnabled)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    itemAccessibility: ").append(toIndentedString(itemAccessibility)).append("\n");
    sb.append("    itemGeneralInfo: ").append(toIndentedString(itemGeneralInfo)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    itemMetadata: ").append(toIndentedString(itemMetadata)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    itemSize: ").append(toIndentedString(itemSize)).append("\n");
    sb.append("    itemState: ").append(toIndentedString(itemState)).append("\n");
    sb.append("    itemSubType: ").append(toIndentedString(itemSubType)).append("\n");
    sb.append("    itemTags: ").append(toIndentedString(itemTags)).append("\n");
    sb.append("    itemTargetsAssoc: ").append(toIndentedString(itemTargetsAssoc)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    itemVersions: ").append(toIndentedString(itemVersions)).append("\n");
    sb.append("    lastRotationDate: ").append(toIndentedString(lastRotationDate)).append("\n");
    sb.append("    lastVersion: ").append(toIndentedString(lastVersion)).append("\n");
    sb.append("    linkedDetails: ").append(toIndentedString(linkedDetails)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    nextRotationDate: ").append(toIndentedString(nextRotationDate)).append("\n");
    sb.append("    protectionKeyName: ").append(toIndentedString(protectionKeyName)).append("\n");
    sb.append("    protectionKeyType: ").append(toIndentedString(protectionKeyType)).append("\n");
    sb.append("    publicValue: ").append(toIndentedString(publicValue)).append("\n");
    sb.append("    rotationInterval: ").append(toIndentedString(rotationInterval)).append("\n");
    sb.append("    sharedBy: ").append(toIndentedString(sharedBy)).append("\n");
    sb.append("    targetVersions: ").append(toIndentedString(targetVersions)).append("\n");
    sb.append("    uscSyncAssociatedItems: ").append(toIndentedString(uscSyncAssociatedItems)).append("\n");
    sb.append("    withCustomerFragment: ").append(toIndentedString(withCustomerFragment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_date");
    openapiFields.add("access_date_display");
    openapiFields.add("access_request_status");
    openapiFields.add("auto_rotate");
    openapiFields.add("bastion_details");
    openapiFields.add("cert_issuer_signer_key_name");
    openapiFields.add("certificate_issue_details");
    openapiFields.add("certificates");
    openapiFields.add("client_permissions");
    openapiFields.add("creation_date");
    openapiFields.add("customer_fragment_id");
    openapiFields.add("delete_protection");
    openapiFields.add("deletion_date");
    openapiFields.add("display_id");
    openapiFields.add("gateway_details");
    openapiFields.add("is_access_request_enabled");
    openapiFields.add("is_enabled");
    openapiFields.add("item_accessibility");
    openapiFields.add("item_general_info");
    openapiFields.add("item_id");
    openapiFields.add("item_metadata");
    openapiFields.add("item_name");
    openapiFields.add("item_size");
    openapiFields.add("item_state");
    openapiFields.add("item_sub_type");
    openapiFields.add("item_tags");
    openapiFields.add("item_targets_assoc");
    openapiFields.add("item_type");
    openapiFields.add("item_versions");
    openapiFields.add("last_rotation_date");
    openapiFields.add("last_version");
    openapiFields.add("linked_details");
    openapiFields.add("modification_date");
    openapiFields.add("next_rotation_date");
    openapiFields.add("protection_key_name");
    openapiFields.add("protection_key_type");
    openapiFields.add("public_value");
    openapiFields.add("rotation_interval");
    openapiFields.add("shared_by");
    openapiFields.add("target_versions");
    openapiFields.add("usc_sync_associated_items");
    openapiFields.add("with_customer_fragment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Item
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Item.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Item is not found in the empty JSON string", Item.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Item.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Item` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("access_date_display") != null && !jsonObj.get("access_date_display").isJsonNull()) && !jsonObj.get("access_date_display").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_date_display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_date_display").toString()));
      }
      if ((jsonObj.get("access_request_status") != null && !jsonObj.get("access_request_status").isJsonNull()) && !jsonObj.get("access_request_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_request_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_request_status").toString()));
      }
      // validate the optional field `bastion_details`
      if (jsonObj.get("bastion_details") != null && !jsonObj.get("bastion_details").isJsonNull()) {
        BastionsList.validateJsonElement(jsonObj.get("bastion_details"));
      }
      if ((jsonObj.get("cert_issuer_signer_key_name") != null && !jsonObj.get("cert_issuer_signer_key_name").isJsonNull()) && !jsonObj.get("cert_issuer_signer_key_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_issuer_signer_key_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_issuer_signer_key_name").toString()));
      }
      // validate the optional field `certificate_issue_details`
      if (jsonObj.get("certificate_issue_details") != null && !jsonObj.get("certificate_issue_details").isJsonNull()) {
        CertificateIssueInfo.validateJsonElement(jsonObj.get("certificate_issue_details"));
      }
      if ((jsonObj.get("certificates") != null && !jsonObj.get("certificates").isJsonNull()) && !jsonObj.get("certificates").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificates` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificates").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("client_permissions") != null && !jsonObj.get("client_permissions").isJsonNull() && !jsonObj.get("client_permissions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_permissions` to be an array in the JSON string but got `%s`", jsonObj.get("client_permissions").toString()));
      }
      if ((jsonObj.get("customer_fragment_id") != null && !jsonObj.get("customer_fragment_id").isJsonNull()) && !jsonObj.get("customer_fragment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_fragment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_fragment_id").toString()));
      }
      if ((jsonObj.get("display_id") != null && !jsonObj.get("display_id").isJsonNull()) && !jsonObj.get("display_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_id").toString()));
      }
      if (jsonObj.get("gateway_details") != null && !jsonObj.get("gateway_details").isJsonNull()) {
        JsonArray jsonArraygatewayDetails = jsonObj.getAsJsonArray("gateway_details");
        if (jsonArraygatewayDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("gateway_details").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `gateway_details` to be an array in the JSON string but got `%s`", jsonObj.get("gateway_details").toString()));
          }

          // validate the optional field `gateway_details` (array)
          for (int i = 0; i < jsonArraygatewayDetails.size(); i++) {
            GatewayDetailsForItemReplyObj.validateJsonElement(jsonArraygatewayDetails.get(i));
          };
        }
      }
      // validate the optional field `item_general_info`
      if (jsonObj.get("item_general_info") != null && !jsonObj.get("item_general_info").isJsonNull()) {
        ItemGeneralInfo.validateJsonElement(jsonObj.get("item_general_info"));
      }
      if ((jsonObj.get("item_metadata") != null && !jsonObj.get("item_metadata").isJsonNull()) && !jsonObj.get("item_metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_metadata").toString()));
      }
      if ((jsonObj.get("item_name") != null && !jsonObj.get("item_name").isJsonNull()) && !jsonObj.get("item_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_name").toString()));
      }
      if ((jsonObj.get("item_state") != null && !jsonObj.get("item_state").isJsonNull()) && !jsonObj.get("item_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_state").toString()));
      }
      if ((jsonObj.get("item_sub_type") != null && !jsonObj.get("item_sub_type").isJsonNull()) && !jsonObj.get("item_sub_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_sub_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_sub_type").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("item_tags") != null && !jsonObj.get("item_tags").isJsonNull() && !jsonObj.get("item_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_tags` to be an array in the JSON string but got `%s`", jsonObj.get("item_tags").toString()));
      }
      if (jsonObj.get("item_targets_assoc") != null && !jsonObj.get("item_targets_assoc").isJsonNull()) {
        JsonArray jsonArrayitemTargetsAssoc = jsonObj.getAsJsonArray("item_targets_assoc");
        if (jsonArrayitemTargetsAssoc != null) {
          // ensure the json data is an array
          if (!jsonObj.get("item_targets_assoc").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `item_targets_assoc` to be an array in the JSON string but got `%s`", jsonObj.get("item_targets_assoc").toString()));
          }

          // validate the optional field `item_targets_assoc` (array)
          for (int i = 0; i < jsonArrayitemTargetsAssoc.size(); i++) {
            ItemTargetAssociation.validateJsonElement(jsonArrayitemTargetsAssoc.get(i));
          };
        }
      }
      if ((jsonObj.get("item_type") != null && !jsonObj.get("item_type").isJsonNull()) && !jsonObj.get("item_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_type").toString()));
      }
      if (jsonObj.get("item_versions") != null && !jsonObj.get("item_versions").isJsonNull()) {
        JsonArray jsonArrayitemVersions = jsonObj.getAsJsonArray("item_versions");
        if (jsonArrayitemVersions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("item_versions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `item_versions` to be an array in the JSON string but got `%s`", jsonObj.get("item_versions").toString()));
          }

          // validate the optional field `item_versions` (array)
          for (int i = 0; i < jsonArrayitemVersions.size(); i++) {
            ItemVersion.validateJsonElement(jsonArrayitemVersions.get(i));
          };
        }
      }
      // validate the optional field `linked_details`
      if (jsonObj.get("linked_details") != null && !jsonObj.get("linked_details").isJsonNull()) {
        LinkedDetails.validateJsonElement(jsonObj.get("linked_details"));
      }
      if ((jsonObj.get("protection_key_name") != null && !jsonObj.get("protection_key_name").isJsonNull()) && !jsonObj.get("protection_key_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protection_key_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protection_key_name").toString()));
      }
      if ((jsonObj.get("protection_key_type") != null && !jsonObj.get("protection_key_type").isJsonNull()) && !jsonObj.get("protection_key_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protection_key_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protection_key_type").toString()));
      }
      if ((jsonObj.get("public_value") != null && !jsonObj.get("public_value").isJsonNull()) && !jsonObj.get("public_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `public_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("public_value").toString()));
      }
      // validate the optional field `shared_by`
      if (jsonObj.get("shared_by") != null && !jsonObj.get("shared_by").isJsonNull()) {
        RuleAssigner.validateJsonElement(jsonObj.get("shared_by"));
      }
      if (jsonObj.get("target_versions") != null && !jsonObj.get("target_versions").isJsonNull()) {
        JsonArray jsonArraytargetVersions = jsonObj.getAsJsonArray("target_versions");
        if (jsonArraytargetVersions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("target_versions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `target_versions` to be an array in the JSON string but got `%s`", jsonObj.get("target_versions").toString()));
          }

          // validate the optional field `target_versions` (array)
          for (int i = 0; i < jsonArraytargetVersions.size(); i++) {
            TargetItemVersion.validateJsonElement(jsonArraytargetVersions.get(i));
          };
        }
      }
      if (jsonObj.get("usc_sync_associated_items") != null && !jsonObj.get("usc_sync_associated_items").isJsonNull()) {
        JsonArray jsonArrayuscSyncAssociatedItems = jsonObj.getAsJsonArray("usc_sync_associated_items");
        if (jsonArrayuscSyncAssociatedItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("usc_sync_associated_items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `usc_sync_associated_items` to be an array in the JSON string but got `%s`", jsonObj.get("usc_sync_associated_items").toString()));
          }

          // validate the optional field `usc_sync_associated_items` (array)
          for (int i = 0; i < jsonArrayuscSyncAssociatedItems.size(); i++) {
            ItemUSCSyncAssociation.validateJsonElement(jsonArrayuscSyncAssociatedItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Item.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Item' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Item> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Item.class));

       return (TypeAdapter<T>) new TypeAdapter<Item>() {
           @Override
           public void write(JsonWriter out, Item value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Item read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Item given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Item
   * @throws IOException if the JSON string is invalid with respect to Item
   */
  public static Item fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Item.class);
  }

  /**
   * Convert an instance of Item to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

