/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Auth
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Auth {
  public static final String SERIALIZED_NAME_ACCESS_ID = "access-id";
  @SerializedName(SERIALIZED_NAME_ACCESS_ID)
  private String accessId;

  public static final String SERIALIZED_NAME_ACCESS_KEY = "access-key";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  private String accessKey;

  public static final String SERIALIZED_NAME_ACCESS_TYPE = "access-type";
  @SerializedName(SERIALIZED_NAME_ACCESS_TYPE)
  private String accessType = "access_key";

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account-id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ADMIN_EMAIL = "admin-email";
  @SerializedName(SERIALIZED_NAME_ADMIN_EMAIL)
  private String adminEmail;

  public static final String SERIALIZED_NAME_ADMIN_PASSWORD = "admin-password";
  @SerializedName(SERIALIZED_NAME_ADMIN_PASSWORD)
  private String adminPassword;

  public static final String SERIALIZED_NAME_CERT_DATA = "cert-data";
  @SerializedName(SERIALIZED_NAME_CERT_DATA)
  private String certData;

  public static final String SERIALIZED_NAME_CLOUD_ID = "cloud-id";
  @SerializedName(SERIALIZED_NAME_CLOUD_ID)
  private String cloudId;

  public static final String SERIALIZED_NAME_DEBUG = "debug";
  @SerializedName(SERIALIZED_NAME_DEBUG)
  private Boolean debug;

  public static final String SERIALIZED_NAME_DISABLE_PAFXFAST = "disable-pafxfast";
  @SerializedName(SERIALIZED_NAME_DISABLE_PAFXFAST)
  private String disablePafxfast;

  public static final String SERIALIZED_NAME_GATEWAY_SPN = "gateway-spn";
  @SerializedName(SERIALIZED_NAME_GATEWAY_SPN)
  private String gatewaySpn;

  public static final String SERIALIZED_NAME_GATEWAY_URL = "gateway-url";
  @SerializedName(SERIALIZED_NAME_GATEWAY_URL)
  private String gatewayUrl;

  public static final String SERIALIZED_NAME_GCP_AUDIENCE = "gcp-audience";
  @SerializedName(SERIALIZED_NAME_GCP_AUDIENCE)
  private String gcpAudience = "akeyless.io";

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_JWT = "jwt";
  @SerializedName(SERIALIZED_NAME_JWT)
  private String jwt;

  public static final String SERIALIZED_NAME_K8S_AUTH_CONFIG_NAME = "k8s-auth-config-name";
  @SerializedName(SERIALIZED_NAME_K8S_AUTH_CONFIG_NAME)
  private String k8sAuthConfigName;

  public static final String SERIALIZED_NAME_K8S_SERVICE_ACCOUNT_TOKEN = "k8s-service-account-token";
  @SerializedName(SERIALIZED_NAME_K8S_SERVICE_ACCOUNT_TOKEN)
  private String k8sServiceAccountToken;

  public static final String SERIALIZED_NAME_KERBEROS_USERNAME = "kerberos-username";
  @SerializedName(SERIALIZED_NAME_KERBEROS_USERNAME)
  private String kerberosUsername;

  public static final String SERIALIZED_NAME_KEY_DATA = "key-data";
  @SerializedName(SERIALIZED_NAME_KEY_DATA)
  private String keyData;

  public static final String SERIALIZED_NAME_KEYTAB_DATA = "keytab-data";
  @SerializedName(SERIALIZED_NAME_KEYTAB_DATA)
  private String keytabData;

  public static final String SERIALIZED_NAME_KRB5_CONF_DATA = "krb5-conf-data";
  @SerializedName(SERIALIZED_NAME_KRB5_CONF_DATA)
  private String krb5ConfData;

  public static final String SERIALIZED_NAME_LDAP_PASSWORD = "ldap_password";
  @SerializedName(SERIALIZED_NAME_LDAP_PASSWORD)
  private String ldapPassword;

  public static final String SERIALIZED_NAME_LDAP_USERNAME = "ldap_username";
  @SerializedName(SERIALIZED_NAME_LDAP_USERNAME)
  private String ldapUsername;

  public static final String SERIALIZED_NAME_OCI_AUTH_TYPE = "oci-auth-type";
  @SerializedName(SERIALIZED_NAME_OCI_AUTH_TYPE)
  private String ociAuthType = "apikey";

  public static final String SERIALIZED_NAME_OCI_GROUP_OCID = "oci-group-ocid";
  @SerializedName(SERIALIZED_NAME_OCI_GROUP_OCID)
  private List<String> ociGroupOcid = null;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid_token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_USE_REMOTE_BROWSER = "use-remote-browser";
  @SerializedName(SERIALIZED_NAME_USE_REMOTE_BROWSER)
  private Boolean useRemoteBrowser;

  public Auth() { 
  }

  public Auth accessId(String accessId) {
    
    this.accessId = accessId;
    return this;
  }

   /**
   * Access ID
   * @return accessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Access ID")

  public String getAccessId() {
    return accessId;
  }


  public void setAccessId(String accessId) {
    this.accessId = accessId;
  }


  public Auth accessKey(String accessKey) {
    
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Access key (relevant only for access-type&#x3D;access_key)
   * @return accessKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Access key (relevant only for access-type=access_key)")

  public String getAccessKey() {
    return accessKey;
  }


  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }


  public Auth accessType(String accessType) {
    
    this.accessType = accessType;
    return this;
  }

   /**
   * Access Type (access_key/password/saml/ldap/k8s/azure_ad/oidc/aws_iam/universal_identity/jwt/gcp/cert)
   * @return accessType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Access Type (access_key/password/saml/ldap/k8s/azure_ad/oidc/aws_iam/universal_identity/jwt/gcp/cert)")

  public String getAccessType() {
    return accessType;
  }


  public void setAccessType(String accessType) {
    this.accessType = accessType;
  }


  public Auth accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Account id (relevant only for access-type&#x3D;password where the email address is associated with more than one account)
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Account id (relevant only for access-type=password where the email address is associated with more than one account)")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public Auth adminEmail(String adminEmail) {
    
    this.adminEmail = adminEmail;
    return this;
  }

   /**
   * Email (relevant only for access-type&#x3D;password)
   * @return adminEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email (relevant only for access-type=password)")

  public String getAdminEmail() {
    return adminEmail;
  }


  public void setAdminEmail(String adminEmail) {
    this.adminEmail = adminEmail;
  }


  public Auth adminPassword(String adminPassword) {
    
    this.adminPassword = adminPassword;
    return this;
  }

   /**
   * Password (relevant only for access-type&#x3D;password)
   * @return adminPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Password (relevant only for access-type=password)")

  public String getAdminPassword() {
    return adminPassword;
  }


  public void setAdminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
  }


  public Auth certData(String certData) {
    
    this.certData = certData;
    return this;
  }

   /**
   * Certificate data encoded in base64. Used if file was not provided. (relevant only for access-type&#x3D;cert)
   * @return certData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Certificate data encoded in base64. Used if file was not provided. (relevant only for access-type=cert)")

  public String getCertData() {
    return certData;
  }


  public void setCertData(String certData) {
    this.certData = certData;
  }


  public Auth cloudId(String cloudId) {
    
    this.cloudId = cloudId;
    return this;
  }

   /**
   * The cloud identity (relevant only for access-type&#x3D;azure_ad,aws_iam,gcp)
   * @return cloudId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The cloud identity (relevant only for access-type=azure_ad,aws_iam,gcp)")

  public String getCloudId() {
    return cloudId;
  }


  public void setCloudId(String cloudId) {
    this.cloudId = cloudId;
  }


  public Auth debug(Boolean debug) {
    
    this.debug = debug;
    return this;
  }

   /**
   * Get debug
   * @return debug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDebug() {
    return debug;
  }


  public void setDebug(Boolean debug) {
    this.debug = debug;
  }


  public Auth disablePafxfast(String disablePafxfast) {
    
    this.disablePafxfast = disablePafxfast;
    return this;
  }

   /**
   * Disable the FAST negotiation in the Kerberos authentication method
   * @return disablePafxfast
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disable the FAST negotiation in the Kerberos authentication method")

  public String getDisablePafxfast() {
    return disablePafxfast;
  }


  public void setDisablePafxfast(String disablePafxfast) {
    this.disablePafxfast = disablePafxfast;
  }


  public Auth gatewaySpn(String gatewaySpn) {
    
    this.gatewaySpn = gatewaySpn;
    return this;
  }

   /**
   * The service principal name of the gateway as registered in LDAP (i.e., HTTP/gateway)
   * @return gatewaySpn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The service principal name of the gateway as registered in LDAP (i.e., HTTP/gateway)")

  public String getGatewaySpn() {
    return gatewaySpn;
  }


  public void setGatewaySpn(String gatewaySpn) {
    this.gatewaySpn = gatewaySpn;
  }


  public Auth gatewayUrl(String gatewayUrl) {
    
    this.gatewayUrl = gatewayUrl;
    return this;
  }

   /**
   * Gateway URL relevant only for access-type&#x3D;k8s/oauth2/saml/oidc
   * @return gatewayUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gateway URL relevant only for access-type=k8s/oauth2/saml/oidc")

  public String getGatewayUrl() {
    return gatewayUrl;
  }


  public void setGatewayUrl(String gatewayUrl) {
    this.gatewayUrl = gatewayUrl;
  }


  public Auth gcpAudience(String gcpAudience) {
    
    this.gcpAudience = gcpAudience;
    return this;
  }

   /**
   * GCP JWT audience
   * @return gcpAudience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "GCP JWT audience")

  public String getGcpAudience() {
    return gcpAudience;
  }


  public void setGcpAudience(String gcpAudience) {
    this.gcpAudience = gcpAudience;
  }


  public Auth json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public Auth jwt(String jwt) {
    
    this.jwt = jwt;
    return this;
  }

   /**
   * The Json Web Token (relevant only for access-type&#x3D;jwt/oidc)
   * @return jwt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Json Web Token (relevant only for access-type=jwt/oidc)")

  public String getJwt() {
    return jwt;
  }


  public void setJwt(String jwt) {
    this.jwt = jwt;
  }


  public Auth k8sAuthConfigName(String k8sAuthConfigName) {
    
    this.k8sAuthConfigName = k8sAuthConfigName;
    return this;
  }

   /**
   * The K8S Auth config name (relevant only for access-type&#x3D;k8s)
   * @return k8sAuthConfigName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The K8S Auth config name (relevant only for access-type=k8s)")

  public String getK8sAuthConfigName() {
    return k8sAuthConfigName;
  }


  public void setK8sAuthConfigName(String k8sAuthConfigName) {
    this.k8sAuthConfigName = k8sAuthConfigName;
  }


  public Auth k8sServiceAccountToken(String k8sServiceAccountToken) {
    
    this.k8sServiceAccountToken = k8sServiceAccountToken;
    return this;
  }

   /**
   * The K8S service account token. (relevant only for access-type&#x3D;k8s)
   * @return k8sServiceAccountToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The K8S service account token. (relevant only for access-type=k8s)")

  public String getK8sServiceAccountToken() {
    return k8sServiceAccountToken;
  }


  public void setK8sServiceAccountToken(String k8sServiceAccountToken) {
    this.k8sServiceAccountToken = k8sServiceAccountToken;
  }


  public Auth kerberosUsername(String kerberosUsername) {
    
    this.kerberosUsername = kerberosUsername;
    return this;
  }

   /**
   * TThe username for the entry within the keytab to authenticate via Kerberos
   * @return kerberosUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TThe username for the entry within the keytab to authenticate via Kerberos")

  public String getKerberosUsername() {
    return kerberosUsername;
  }


  public void setKerberosUsername(String kerberosUsername) {
    this.kerberosUsername = kerberosUsername;
  }


  public Auth keyData(String keyData) {
    
    this.keyData = keyData;
    return this;
  }

   /**
   * Private key data encoded in base64. Used if file was not provided.(relevant only for access-type&#x3D;cert)
   * @return keyData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Private key data encoded in base64. Used if file was not provided.(relevant only for access-type=cert)")

  public String getKeyData() {
    return keyData;
  }


  public void setKeyData(String keyData) {
    this.keyData = keyData;
  }


  public Auth keytabData(String keytabData) {
    
    this.keytabData = keytabData;
    return this;
  }

   /**
   * Base64-encoded content of a valid keytab file, containing the service account&#39;s entry.
   * @return keytabData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64-encoded content of a valid keytab file, containing the service account's entry.")

  public String getKeytabData() {
    return keytabData;
  }


  public void setKeytabData(String keytabData) {
    this.keytabData = keytabData;
  }


  public Auth krb5ConfData(String krb5ConfData) {
    
    this.krb5ConfData = krb5ConfData;
    return this;
  }

   /**
   * Base64-encoded content of a valid krb5.conf file, specifying the settings and parameters required for Kerberos authentication.
   * @return krb5ConfData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64-encoded content of a valid krb5.conf file, specifying the settings and parameters required for Kerberos authentication.")

  public String getKrb5ConfData() {
    return krb5ConfData;
  }


  public void setKrb5ConfData(String krb5ConfData) {
    this.krb5ConfData = krb5ConfData;
  }


  public Auth ldapPassword(String ldapPassword) {
    
    this.ldapPassword = ldapPassword;
    return this;
  }

   /**
   * LDAP password (relevant only for access-type&#x3D;ldap)
   * @return ldapPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LDAP password (relevant only for access-type=ldap)")

  public String getLdapPassword() {
    return ldapPassword;
  }


  public void setLdapPassword(String ldapPassword) {
    this.ldapPassword = ldapPassword;
  }


  public Auth ldapUsername(String ldapUsername) {
    
    this.ldapUsername = ldapUsername;
    return this;
  }

   /**
   * LDAP username (relevant only for access-type&#x3D;ldap)
   * @return ldapUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LDAP username (relevant only for access-type=ldap)")

  public String getLdapUsername() {
    return ldapUsername;
  }


  public void setLdapUsername(String ldapUsername) {
    this.ldapUsername = ldapUsername;
  }


  public Auth ociAuthType(String ociAuthType) {
    
    this.ociAuthType = ociAuthType;
    return this;
  }

   /**
   * The type of the OCI configuration to use [instance/apikey/resource] (relevant only for access-type&#x3D;oci)
   * @return ociAuthType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the OCI configuration to use [instance/apikey/resource] (relevant only for access-type=oci)")

  public String getOciAuthType() {
    return ociAuthType;
  }


  public void setOciAuthType(String ociAuthType) {
    this.ociAuthType = ociAuthType;
  }


  public Auth ociGroupOcid(List<String> ociGroupOcid) {
    
    this.ociGroupOcid = ociGroupOcid;
    return this;
  }

  public Auth addOciGroupOcidItem(String ociGroupOcidItem) {
    if (this.ociGroupOcid == null) {
      this.ociGroupOcid = new ArrayList<String>();
    }
    this.ociGroupOcid.add(ociGroupOcidItem);
    return this;
  }

   /**
   * A list of Oracle Cloud IDs groups (relevant only for access-type&#x3D;oci)
   * @return ociGroupOcid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Oracle Cloud IDs groups (relevant only for access-type=oci)")

  public List<String> getOciGroupOcid() {
    return ociGroupOcid;
  }


  public void setOciGroupOcid(List<String> ociGroupOcid) {
    this.ociGroupOcid = ociGroupOcid;
  }


  public Auth uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal_identity token (relevant only for access-type&#x3D;universal_identity)
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal_identity token (relevant only for access-type=universal_identity)")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public Auth useRemoteBrowser(Boolean useRemoteBrowser) {
    
    this.useRemoteBrowser = useRemoteBrowser;
    return this;
  }

   /**
   * Returns a link to complete the authentication remotely (relevant only for access-type&#x3D;saml/oidc)
   * @return useRemoteBrowser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Returns a link to complete the authentication remotely (relevant only for access-type=saml/oidc)")

  public Boolean getUseRemoteBrowser() {
    return useRemoteBrowser;
  }


  public void setUseRemoteBrowser(Boolean useRemoteBrowser) {
    this.useRemoteBrowser = useRemoteBrowser;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Auth auth = (Auth) o;
    return Objects.equals(this.accessId, auth.accessId) &&
        Objects.equals(this.accessKey, auth.accessKey) &&
        Objects.equals(this.accessType, auth.accessType) &&
        Objects.equals(this.accountId, auth.accountId) &&
        Objects.equals(this.adminEmail, auth.adminEmail) &&
        Objects.equals(this.adminPassword, auth.adminPassword) &&
        Objects.equals(this.certData, auth.certData) &&
        Objects.equals(this.cloudId, auth.cloudId) &&
        Objects.equals(this.debug, auth.debug) &&
        Objects.equals(this.disablePafxfast, auth.disablePafxfast) &&
        Objects.equals(this.gatewaySpn, auth.gatewaySpn) &&
        Objects.equals(this.gatewayUrl, auth.gatewayUrl) &&
        Objects.equals(this.gcpAudience, auth.gcpAudience) &&
        Objects.equals(this.json, auth.json) &&
        Objects.equals(this.jwt, auth.jwt) &&
        Objects.equals(this.k8sAuthConfigName, auth.k8sAuthConfigName) &&
        Objects.equals(this.k8sServiceAccountToken, auth.k8sServiceAccountToken) &&
        Objects.equals(this.kerberosUsername, auth.kerberosUsername) &&
        Objects.equals(this.keyData, auth.keyData) &&
        Objects.equals(this.keytabData, auth.keytabData) &&
        Objects.equals(this.krb5ConfData, auth.krb5ConfData) &&
        Objects.equals(this.ldapPassword, auth.ldapPassword) &&
        Objects.equals(this.ldapUsername, auth.ldapUsername) &&
        Objects.equals(this.ociAuthType, auth.ociAuthType) &&
        Objects.equals(this.ociGroupOcid, auth.ociGroupOcid) &&
        Objects.equals(this.uidToken, auth.uidToken) &&
        Objects.equals(this.useRemoteBrowser, auth.useRemoteBrowser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessId, accessKey, accessType, accountId, adminEmail, adminPassword, certData, cloudId, debug, disablePafxfast, gatewaySpn, gatewayUrl, gcpAudience, json, jwt, k8sAuthConfigName, k8sServiceAccountToken, kerberosUsername, keyData, keytabData, krb5ConfData, ldapPassword, ldapUsername, ociAuthType, ociGroupOcid, uidToken, useRemoteBrowser);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Auth {\n");
    sb.append("    accessId: ").append(toIndentedString(accessId)).append("\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    adminEmail: ").append(toIndentedString(adminEmail)).append("\n");
    sb.append("    adminPassword: ").append(toIndentedString(adminPassword)).append("\n");
    sb.append("    certData: ").append(toIndentedString(certData)).append("\n");
    sb.append("    cloudId: ").append(toIndentedString(cloudId)).append("\n");
    sb.append("    debug: ").append(toIndentedString(debug)).append("\n");
    sb.append("    disablePafxfast: ").append(toIndentedString(disablePafxfast)).append("\n");
    sb.append("    gatewaySpn: ").append(toIndentedString(gatewaySpn)).append("\n");
    sb.append("    gatewayUrl: ").append(toIndentedString(gatewayUrl)).append("\n");
    sb.append("    gcpAudience: ").append(toIndentedString(gcpAudience)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    jwt: ").append(toIndentedString(jwt)).append("\n");
    sb.append("    k8sAuthConfigName: ").append(toIndentedString(k8sAuthConfigName)).append("\n");
    sb.append("    k8sServiceAccountToken: ").append(toIndentedString(k8sServiceAccountToken)).append("\n");
    sb.append("    kerberosUsername: ").append(toIndentedString(kerberosUsername)).append("\n");
    sb.append("    keyData: ").append(toIndentedString(keyData)).append("\n");
    sb.append("    keytabData: ").append(toIndentedString(keytabData)).append("\n");
    sb.append("    krb5ConfData: ").append(toIndentedString(krb5ConfData)).append("\n");
    sb.append("    ldapPassword: ").append(toIndentedString(ldapPassword)).append("\n");
    sb.append("    ldapUsername: ").append(toIndentedString(ldapUsername)).append("\n");
    sb.append("    ociAuthType: ").append(toIndentedString(ociAuthType)).append("\n");
    sb.append("    ociGroupOcid: ").append(toIndentedString(ociGroupOcid)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    useRemoteBrowser: ").append(toIndentedString(useRemoteBrowser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

