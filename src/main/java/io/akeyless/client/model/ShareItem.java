/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ShareItem
 */

public class ShareItem {
  public static final String SERIALIZED_NAME_ACCESSIBILITY = "accessibility";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY)
  private String accessibility = "regular";

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_EMAILS = "emails";
  @SerializedName(SERIALIZED_NAME_EMAILS)
  private List<String> emails = null;

  public static final String SERIALIZED_NAME_ITEM_NAME = "item-name";
  @SerializedName(SERIALIZED_NAME_ITEM_NAME)
  private String itemName;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_TTL = "ttl";
  @SerializedName(SERIALIZED_NAME_TTL)
  private Integer ttl;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_VIEW_ONCE = "view-once";
  @SerializedName(SERIALIZED_NAME_VIEW_ONCE)
  private Boolean viewOnce = false;


  public ShareItem accessibility(String accessibility) {
    
    this.accessibility = accessibility;
    return this;
  }

   /**
   * for personal password manager
   * @return accessibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "for personal password manager")

  public String getAccessibility() {
    return accessibility;
  }


  public void setAccessibility(String accessibility) {
    this.accessibility = accessibility;
  }


  public ShareItem action(String action) {
    
    this.action = action;
    return this;
  }

   /**
   * Action to be performed on the item [start/stop/describe]
   * @return action
  **/
  @ApiModelProperty(required = true, value = "Action to be performed on the item [start/stop/describe]")

  public String getAction() {
    return action;
  }


  public void setAction(String action) {
    this.action = action;
  }


  public ShareItem emails(List<String> emails) {
    
    this.emails = emails;
    return this;
  }

  public ShareItem addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<String>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * For Password Management use, reflect the website context
   * @return emails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, reflect the website context")

  public List<String> getEmails() {
    return emails;
  }


  public void setEmails(List<String> emails) {
    this.emails = emails;
  }


  public ShareItem itemName(String itemName) {
    
    this.itemName = itemName;
    return this;
  }

   /**
   * Item name
   * @return itemName
  **/
  @ApiModelProperty(required = true, value = "Item name")

  public String getItemName() {
    return itemName;
  }


  public void setItemName(String itemName) {
    this.itemName = itemName;
  }


  public ShareItem json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public ShareItem token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public ShareItem ttl(Integer ttl) {
    
    this.ttl = ttl;
    return this;
  }

   /**
   * TTL of the Availability of the shared secret in seconds
   * @return ttl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TTL of the Availability of the shared secret in seconds")

  public Integer getTtl() {
    return ttl;
  }


  public void setTtl(Integer ttl) {
    this.ttl = ttl;
  }


  public ShareItem uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public ShareItem viewOnce(Boolean viewOnce) {
    
    this.viewOnce = viewOnce;
    return this;
  }

   /**
   * ViewOnlyOnce Shared secrets can only be viewed once [true/false]
   * @return viewOnce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ViewOnlyOnce Shared secrets can only be viewed once [true/false]")

  public Boolean getViewOnce() {
    return viewOnce;
  }


  public void setViewOnce(Boolean viewOnce) {
    this.viewOnce = viewOnce;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareItem shareItem = (ShareItem) o;
    return Objects.equals(this.accessibility, shareItem.accessibility) &&
        Objects.equals(this.action, shareItem.action) &&
        Objects.equals(this.emails, shareItem.emails) &&
        Objects.equals(this.itemName, shareItem.itemName) &&
        Objects.equals(this.json, shareItem.json) &&
        Objects.equals(this.token, shareItem.token) &&
        Objects.equals(this.ttl, shareItem.ttl) &&
        Objects.equals(this.uidToken, shareItem.uidToken) &&
        Objects.equals(this.viewOnce, shareItem.viewOnce);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibility, action, emails, itemName, json, token, ttl, uidToken, viewOnce);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareItem {\n");
    sb.append("    accessibility: ").append(toIndentedString(accessibility)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    viewOnce: ").append(toIndentedString(viewOnce)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

