/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.CertificateAnalyticAggregation;
import io.akeyless.client.model.ClientsUsageReport;
import io.akeyless.client.model.UsageReportSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * AllAnalyticsData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AllAnalyticsData {
  public static final String SERIALIZED_NAME_ANALYTICS_DATA = "analytics_data";
  @SerializedName(SERIALIZED_NAME_ANALYTICS_DATA)
  private Map<String, List<List<String>>> analyticsData = null;

  public static final String SERIALIZED_NAME_CERTIFICATES_EXPIRY_DATA = "certificates_expiry_data";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES_EXPIRY_DATA)
  private CertificateAnalyticAggregation certificatesExpiryData;

  public static final String SERIALIZED_NAME_CLIENTS_USAGE_REPORTS = "clients_usage_reports";
  @SerializedName(SERIALIZED_NAME_CLIENTS_USAGE_REPORTS)
  private Map<String, ClientsUsageReport> clientsUsageReports = null;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private Long dateUpdated;

  public static final String SERIALIZED_NAME_USAGE_REPORTS = "usage_reports";
  @SerializedName(SERIALIZED_NAME_USAGE_REPORTS)
  private Map<String, UsageReportSummary> usageReports = null;

  public AllAnalyticsData() { 
  }

  public AllAnalyticsData analyticsData(Map<String, List<List<String>>> analyticsData) {
    
    this.analyticsData = analyticsData;
    return this;
  }

  public AllAnalyticsData putAnalyticsDataItem(String key, List<List<String>> analyticsDataItem) {
    if (this.analyticsData == null) {
      this.analyticsData = new HashMap<String, List<List<String>>>();
    }
    this.analyticsData.put(key, analyticsDataItem);
    return this;
  }

   /**
   * Get analyticsData
   * @return analyticsData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, List<List<String>>> getAnalyticsData() {
    return analyticsData;
  }


  public void setAnalyticsData(Map<String, List<List<String>>> analyticsData) {
    this.analyticsData = analyticsData;
  }


  public AllAnalyticsData certificatesExpiryData(CertificateAnalyticAggregation certificatesExpiryData) {
    
    this.certificatesExpiryData = certificatesExpiryData;
    return this;
  }

   /**
   * Get certificatesExpiryData
   * @return certificatesExpiryData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CertificateAnalyticAggregation getCertificatesExpiryData() {
    return certificatesExpiryData;
  }


  public void setCertificatesExpiryData(CertificateAnalyticAggregation certificatesExpiryData) {
    this.certificatesExpiryData = certificatesExpiryData;
  }


  public AllAnalyticsData clientsUsageReports(Map<String, ClientsUsageReport> clientsUsageReports) {
    
    this.clientsUsageReports = clientsUsageReports;
    return this;
  }

  public AllAnalyticsData putClientsUsageReportsItem(String key, ClientsUsageReport clientsUsageReportsItem) {
    if (this.clientsUsageReports == null) {
      this.clientsUsageReports = new HashMap<String, ClientsUsageReport>();
    }
    this.clientsUsageReports.put(key, clientsUsageReportsItem);
    return this;
  }

   /**
   * Get clientsUsageReports
   * @return clientsUsageReports
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, ClientsUsageReport> getClientsUsageReports() {
    return clientsUsageReports;
  }


  public void setClientsUsageReports(Map<String, ClientsUsageReport> clientsUsageReports) {
    this.clientsUsageReports = clientsUsageReports;
  }


  public AllAnalyticsData dateUpdated(Long dateUpdated) {
    
    this.dateUpdated = dateUpdated;
    return this;
  }

   /**
   * Get dateUpdated
   * @return dateUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDateUpdated() {
    return dateUpdated;
  }


  public void setDateUpdated(Long dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public AllAnalyticsData usageReports(Map<String, UsageReportSummary> usageReports) {
    
    this.usageReports = usageReports;
    return this;
  }

  public AllAnalyticsData putUsageReportsItem(String key, UsageReportSummary usageReportsItem) {
    if (this.usageReports == null) {
      this.usageReports = new HashMap<String, UsageReportSummary>();
    }
    this.usageReports.put(key, usageReportsItem);
    return this;
  }

   /**
   * Get usageReports
   * @return usageReports
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, UsageReportSummary> getUsageReports() {
    return usageReports;
  }


  public void setUsageReports(Map<String, UsageReportSummary> usageReports) {
    this.usageReports = usageReports;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllAnalyticsData allAnalyticsData = (AllAnalyticsData) o;
    return Objects.equals(this.analyticsData, allAnalyticsData.analyticsData) &&
        Objects.equals(this.certificatesExpiryData, allAnalyticsData.certificatesExpiryData) &&
        Objects.equals(this.clientsUsageReports, allAnalyticsData.clientsUsageReports) &&
        Objects.equals(this.dateUpdated, allAnalyticsData.dateUpdated) &&
        Objects.equals(this.usageReports, allAnalyticsData.usageReports);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyticsData, certificatesExpiryData, clientsUsageReports, dateUpdated, usageReports);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllAnalyticsData {\n");
    sb.append("    analyticsData: ").append(toIndentedString(analyticsData)).append("\n");
    sb.append("    certificatesExpiryData: ").append(toIndentedString(certificatesExpiryData)).append("\n");
    sb.append("    clientsUsageReports: ").append(toIndentedString(clientsUsageReports)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    usageReports: ").append(toIndentedString(usageReports)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

