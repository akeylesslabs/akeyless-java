/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.AdminsConfigPart;
import io.akeyless.client.model.CFConfigPart;
import io.akeyless.client.model.CacheConfigPart;
import io.akeyless.client.model.DefaultConfigPart;
import io.akeyless.client.model.GatewayMessageQueueInfo;
import io.akeyless.client.model.GeneralConfigPart;
import io.akeyless.client.model.K8SAuthsConfigPart;
import io.akeyless.client.model.KMIPConfigPart;
import io.akeyless.client.model.KerberosConfigPart;
import io.akeyless.client.model.LdapConfigPart;
import io.akeyless.client.model.LeadershipConfigPart;
import io.akeyless.client.model.LogForwardingConfigPart;
import io.akeyless.client.model.MigrationsConfigPart;
import io.akeyless.client.model.ProducersConfigPart;
import io.akeyless.client.model.RotatorsConfigPart;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * AkeylessGatewayConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class AkeylessGatewayConfig {
  public static final String SERIALIZED_NAME_ADMINS = "admins";
  @SerializedName(SERIALIZED_NAME_ADMINS)
  @javax.annotation.Nullable
  private AdminsConfigPart admins;

  public static final String SERIALIZED_NAME_CACHE = "cache";
  @SerializedName(SERIALIZED_NAME_CACHE)
  @javax.annotation.Nullable
  private CacheConfigPart cache;

  public static final String SERIALIZED_NAME_CF = "cf";
  @SerializedName(SERIALIZED_NAME_CF)
  @javax.annotation.Nullable
  private CFConfigPart cf;

  public static final String SERIALIZED_NAME_CONFIG_PROTECTION_KEY_NAME = "config_protection_key_name";
  @SerializedName(SERIALIZED_NAME_CONFIG_PROTECTION_KEY_NAME)
  @javax.annotation.Nullable
  private String configProtectionKeyName;

  public static final String SERIALIZED_NAME_GENERAL = "general";
  @SerializedName(SERIALIZED_NAME_GENERAL)
  @javax.annotation.Nullable
  private GeneralConfigPart general;

  public static final String SERIALIZED_NAME_K8S_AUTHS = "k8s_auths";
  @SerializedName(SERIALIZED_NAME_K8S_AUTHS)
  @javax.annotation.Nullable
  private K8SAuthsConfigPart k8sAuths;

  public static final String SERIALIZED_NAME_KERBEROS = "kerberos";
  @SerializedName(SERIALIZED_NAME_KERBEROS)
  @javax.annotation.Nullable
  private KerberosConfigPart kerberos;

  public static final String SERIALIZED_NAME_KMIP_CLIENTS = "kmip_clients";
  @SerializedName(SERIALIZED_NAME_KMIP_CLIENTS)
  @javax.annotation.Nullable
  private KMIPConfigPart kmipClients;

  public static final String SERIALIZED_NAME_LDAP = "ldap";
  @SerializedName(SERIALIZED_NAME_LDAP)
  @javax.annotation.Nullable
  private LdapConfigPart ldap;

  public static final String SERIALIZED_NAME_LEADERSHIP = "leadership";
  @SerializedName(SERIALIZED_NAME_LEADERSHIP)
  @javax.annotation.Nullable
  private LeadershipConfigPart leadership;

  public static final String SERIALIZED_NAME_LOG_FORWARDING = "log_forwarding";
  @SerializedName(SERIALIZED_NAME_LOG_FORWARDING)
  @javax.annotation.Nullable
  private LogForwardingConfigPart logForwarding;

  public static final String SERIALIZED_NAME_MESSAGE_QUEUE_INFO = "message_queue_info";
  @SerializedName(SERIALIZED_NAME_MESSAGE_QUEUE_INFO)
  @javax.annotation.Nullable
  private GatewayMessageQueueInfo messageQueueInfo;

  public static final String SERIALIZED_NAME_MIGRATIONS = "migrations";
  @SerializedName(SERIALIZED_NAME_MIGRATIONS)
  @javax.annotation.Nullable
  private MigrationsConfigPart migrations;

  public static final String SERIALIZED_NAME_PRODUCERS = "producers";
  @SerializedName(SERIALIZED_NAME_PRODUCERS)
  @javax.annotation.Nullable
  private ProducersConfigPart producers;

  public static final String SERIALIZED_NAME_ROTATORS = "rotators";
  @SerializedName(SERIALIZED_NAME_ROTATORS)
  @javax.annotation.Nullable
  private RotatorsConfigPart rotators;

  public static final String SERIALIZED_NAME_SAML = "saml";
  @SerializedName(SERIALIZED_NAME_SAML)
  @javax.annotation.Nullable
  private DefaultConfigPart saml;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nullable
  private Integer version;

  public AkeylessGatewayConfig() {
  }

  public AkeylessGatewayConfig admins(@javax.annotation.Nullable AdminsConfigPart admins) {
    this.admins = admins;
    return this;
  }

  /**
   * Get admins
   * @return admins
   */
  @javax.annotation.Nullable
  public AdminsConfigPart getAdmins() {
    return admins;
  }

  public void setAdmins(@javax.annotation.Nullable AdminsConfigPart admins) {
    this.admins = admins;
  }


  public AkeylessGatewayConfig cache(@javax.annotation.Nullable CacheConfigPart cache) {
    this.cache = cache;
    return this;
  }

  /**
   * Get cache
   * @return cache
   */
  @javax.annotation.Nullable
  public CacheConfigPart getCache() {
    return cache;
  }

  public void setCache(@javax.annotation.Nullable CacheConfigPart cache) {
    this.cache = cache;
  }


  public AkeylessGatewayConfig cf(@javax.annotation.Nullable CFConfigPart cf) {
    this.cf = cf;
    return this;
  }

  /**
   * Get cf
   * @return cf
   */
  @javax.annotation.Nullable
  public CFConfigPart getCf() {
    return cf;
  }

  public void setCf(@javax.annotation.Nullable CFConfigPart cf) {
    this.cf = cf;
  }


  public AkeylessGatewayConfig configProtectionKeyName(@javax.annotation.Nullable String configProtectionKeyName) {
    this.configProtectionKeyName = configProtectionKeyName;
    return this;
  }

  /**
   * Get configProtectionKeyName
   * @return configProtectionKeyName
   */
  @javax.annotation.Nullable
  public String getConfigProtectionKeyName() {
    return configProtectionKeyName;
  }

  public void setConfigProtectionKeyName(@javax.annotation.Nullable String configProtectionKeyName) {
    this.configProtectionKeyName = configProtectionKeyName;
  }


  public AkeylessGatewayConfig general(@javax.annotation.Nullable GeneralConfigPart general) {
    this.general = general;
    return this;
  }

  /**
   * Get general
   * @return general
   */
  @javax.annotation.Nullable
  public GeneralConfigPart getGeneral() {
    return general;
  }

  public void setGeneral(@javax.annotation.Nullable GeneralConfigPart general) {
    this.general = general;
  }


  public AkeylessGatewayConfig k8sAuths(@javax.annotation.Nullable K8SAuthsConfigPart k8sAuths) {
    this.k8sAuths = k8sAuths;
    return this;
  }

  /**
   * Get k8sAuths
   * @return k8sAuths
   */
  @javax.annotation.Nullable
  public K8SAuthsConfigPart getK8sAuths() {
    return k8sAuths;
  }

  public void setK8sAuths(@javax.annotation.Nullable K8SAuthsConfigPart k8sAuths) {
    this.k8sAuths = k8sAuths;
  }


  public AkeylessGatewayConfig kerberos(@javax.annotation.Nullable KerberosConfigPart kerberos) {
    this.kerberos = kerberos;
    return this;
  }

  /**
   * Get kerberos
   * @return kerberos
   */
  @javax.annotation.Nullable
  public KerberosConfigPart getKerberos() {
    return kerberos;
  }

  public void setKerberos(@javax.annotation.Nullable KerberosConfigPart kerberos) {
    this.kerberos = kerberos;
  }


  public AkeylessGatewayConfig kmipClients(@javax.annotation.Nullable KMIPConfigPart kmipClients) {
    this.kmipClients = kmipClients;
    return this;
  }

  /**
   * Get kmipClients
   * @return kmipClients
   */
  @javax.annotation.Nullable
  public KMIPConfigPart getKmipClients() {
    return kmipClients;
  }

  public void setKmipClients(@javax.annotation.Nullable KMIPConfigPart kmipClients) {
    this.kmipClients = kmipClients;
  }


  public AkeylessGatewayConfig ldap(@javax.annotation.Nullable LdapConfigPart ldap) {
    this.ldap = ldap;
    return this;
  }

  /**
   * Get ldap
   * @return ldap
   */
  @javax.annotation.Nullable
  public LdapConfigPart getLdap() {
    return ldap;
  }

  public void setLdap(@javax.annotation.Nullable LdapConfigPart ldap) {
    this.ldap = ldap;
  }


  public AkeylessGatewayConfig leadership(@javax.annotation.Nullable LeadershipConfigPart leadership) {
    this.leadership = leadership;
    return this;
  }

  /**
   * Get leadership
   * @return leadership
   */
  @javax.annotation.Nullable
  public LeadershipConfigPart getLeadership() {
    return leadership;
  }

  public void setLeadership(@javax.annotation.Nullable LeadershipConfigPart leadership) {
    this.leadership = leadership;
  }


  public AkeylessGatewayConfig logForwarding(@javax.annotation.Nullable LogForwardingConfigPart logForwarding) {
    this.logForwarding = logForwarding;
    return this;
  }

  /**
   * Get logForwarding
   * @return logForwarding
   */
  @javax.annotation.Nullable
  public LogForwardingConfigPart getLogForwarding() {
    return logForwarding;
  }

  public void setLogForwarding(@javax.annotation.Nullable LogForwardingConfigPart logForwarding) {
    this.logForwarding = logForwarding;
  }


  public AkeylessGatewayConfig messageQueueInfo(@javax.annotation.Nullable GatewayMessageQueueInfo messageQueueInfo) {
    this.messageQueueInfo = messageQueueInfo;
    return this;
  }

  /**
   * Get messageQueueInfo
   * @return messageQueueInfo
   */
  @javax.annotation.Nullable
  public GatewayMessageQueueInfo getMessageQueueInfo() {
    return messageQueueInfo;
  }

  public void setMessageQueueInfo(@javax.annotation.Nullable GatewayMessageQueueInfo messageQueueInfo) {
    this.messageQueueInfo = messageQueueInfo;
  }


  public AkeylessGatewayConfig migrations(@javax.annotation.Nullable MigrationsConfigPart migrations) {
    this.migrations = migrations;
    return this;
  }

  /**
   * Get migrations
   * @return migrations
   */
  @javax.annotation.Nullable
  public MigrationsConfigPart getMigrations() {
    return migrations;
  }

  public void setMigrations(@javax.annotation.Nullable MigrationsConfigPart migrations) {
    this.migrations = migrations;
  }


  public AkeylessGatewayConfig producers(@javax.annotation.Nullable ProducersConfigPart producers) {
    this.producers = producers;
    return this;
  }

  /**
   * Get producers
   * @return producers
   */
  @javax.annotation.Nullable
  public ProducersConfigPart getProducers() {
    return producers;
  }

  public void setProducers(@javax.annotation.Nullable ProducersConfigPart producers) {
    this.producers = producers;
  }


  public AkeylessGatewayConfig rotators(@javax.annotation.Nullable RotatorsConfigPart rotators) {
    this.rotators = rotators;
    return this;
  }

  /**
   * Get rotators
   * @return rotators
   */
  @javax.annotation.Nullable
  public RotatorsConfigPart getRotators() {
    return rotators;
  }

  public void setRotators(@javax.annotation.Nullable RotatorsConfigPart rotators) {
    this.rotators = rotators;
  }


  public AkeylessGatewayConfig saml(@javax.annotation.Nullable DefaultConfigPart saml) {
    this.saml = saml;
    return this;
  }

  /**
   * Get saml
   * @return saml
   */
  @javax.annotation.Nullable
  public DefaultConfigPart getSaml() {
    return saml;
  }

  public void setSaml(@javax.annotation.Nullable DefaultConfigPart saml) {
    this.saml = saml;
  }


  public AkeylessGatewayConfig version(@javax.annotation.Nullable Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nullable Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AkeylessGatewayConfig akeylessGatewayConfig = (AkeylessGatewayConfig) o;
    return Objects.equals(this.admins, akeylessGatewayConfig.admins) &&
        Objects.equals(this.cache, akeylessGatewayConfig.cache) &&
        Objects.equals(this.cf, akeylessGatewayConfig.cf) &&
        Objects.equals(this.configProtectionKeyName, akeylessGatewayConfig.configProtectionKeyName) &&
        Objects.equals(this.general, akeylessGatewayConfig.general) &&
        Objects.equals(this.k8sAuths, akeylessGatewayConfig.k8sAuths) &&
        Objects.equals(this.kerberos, akeylessGatewayConfig.kerberos) &&
        Objects.equals(this.kmipClients, akeylessGatewayConfig.kmipClients) &&
        Objects.equals(this.ldap, akeylessGatewayConfig.ldap) &&
        Objects.equals(this.leadership, akeylessGatewayConfig.leadership) &&
        Objects.equals(this.logForwarding, akeylessGatewayConfig.logForwarding) &&
        Objects.equals(this.messageQueueInfo, akeylessGatewayConfig.messageQueueInfo) &&
        Objects.equals(this.migrations, akeylessGatewayConfig.migrations) &&
        Objects.equals(this.producers, akeylessGatewayConfig.producers) &&
        Objects.equals(this.rotators, akeylessGatewayConfig.rotators) &&
        Objects.equals(this.saml, akeylessGatewayConfig.saml) &&
        Objects.equals(this.version, akeylessGatewayConfig.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(admins, cache, cf, configProtectionKeyName, general, k8sAuths, kerberos, kmipClients, ldap, leadership, logForwarding, messageQueueInfo, migrations, producers, rotators, saml, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AkeylessGatewayConfig {\n");
    sb.append("    admins: ").append(toIndentedString(admins)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    cf: ").append(toIndentedString(cf)).append("\n");
    sb.append("    configProtectionKeyName: ").append(toIndentedString(configProtectionKeyName)).append("\n");
    sb.append("    general: ").append(toIndentedString(general)).append("\n");
    sb.append("    k8sAuths: ").append(toIndentedString(k8sAuths)).append("\n");
    sb.append("    kerberos: ").append(toIndentedString(kerberos)).append("\n");
    sb.append("    kmipClients: ").append(toIndentedString(kmipClients)).append("\n");
    sb.append("    ldap: ").append(toIndentedString(ldap)).append("\n");
    sb.append("    leadership: ").append(toIndentedString(leadership)).append("\n");
    sb.append("    logForwarding: ").append(toIndentedString(logForwarding)).append("\n");
    sb.append("    messageQueueInfo: ").append(toIndentedString(messageQueueInfo)).append("\n");
    sb.append("    migrations: ").append(toIndentedString(migrations)).append("\n");
    sb.append("    producers: ").append(toIndentedString(producers)).append("\n");
    sb.append("    rotators: ").append(toIndentedString(rotators)).append("\n");
    sb.append("    saml: ").append(toIndentedString(saml)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("admins");
    openapiFields.add("cache");
    openapiFields.add("cf");
    openapiFields.add("config_protection_key_name");
    openapiFields.add("general");
    openapiFields.add("k8s_auths");
    openapiFields.add("kerberos");
    openapiFields.add("kmip_clients");
    openapiFields.add("ldap");
    openapiFields.add("leadership");
    openapiFields.add("log_forwarding");
    openapiFields.add("message_queue_info");
    openapiFields.add("migrations");
    openapiFields.add("producers");
    openapiFields.add("rotators");
    openapiFields.add("saml");
    openapiFields.add("version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AkeylessGatewayConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AkeylessGatewayConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AkeylessGatewayConfig is not found in the empty JSON string", AkeylessGatewayConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AkeylessGatewayConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AkeylessGatewayConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `admins`
      if (jsonObj.get("admins") != null && !jsonObj.get("admins").isJsonNull()) {
        AdminsConfigPart.validateJsonElement(jsonObj.get("admins"));
      }
      // validate the optional field `cache`
      if (jsonObj.get("cache") != null && !jsonObj.get("cache").isJsonNull()) {
        CacheConfigPart.validateJsonElement(jsonObj.get("cache"));
      }
      // validate the optional field `cf`
      if (jsonObj.get("cf") != null && !jsonObj.get("cf").isJsonNull()) {
        CFConfigPart.validateJsonElement(jsonObj.get("cf"));
      }
      if ((jsonObj.get("config_protection_key_name") != null && !jsonObj.get("config_protection_key_name").isJsonNull()) && !jsonObj.get("config_protection_key_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `config_protection_key_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("config_protection_key_name").toString()));
      }
      // validate the optional field `general`
      if (jsonObj.get("general") != null && !jsonObj.get("general").isJsonNull()) {
        GeneralConfigPart.validateJsonElement(jsonObj.get("general"));
      }
      // validate the optional field `k8s_auths`
      if (jsonObj.get("k8s_auths") != null && !jsonObj.get("k8s_auths").isJsonNull()) {
        K8SAuthsConfigPart.validateJsonElement(jsonObj.get("k8s_auths"));
      }
      // validate the optional field `kerberos`
      if (jsonObj.get("kerberos") != null && !jsonObj.get("kerberos").isJsonNull()) {
        KerberosConfigPart.validateJsonElement(jsonObj.get("kerberos"));
      }
      // validate the optional field `kmip_clients`
      if (jsonObj.get("kmip_clients") != null && !jsonObj.get("kmip_clients").isJsonNull()) {
        KMIPConfigPart.validateJsonElement(jsonObj.get("kmip_clients"));
      }
      // validate the optional field `ldap`
      if (jsonObj.get("ldap") != null && !jsonObj.get("ldap").isJsonNull()) {
        LdapConfigPart.validateJsonElement(jsonObj.get("ldap"));
      }
      // validate the optional field `leadership`
      if (jsonObj.get("leadership") != null && !jsonObj.get("leadership").isJsonNull()) {
        LeadershipConfigPart.validateJsonElement(jsonObj.get("leadership"));
      }
      // validate the optional field `log_forwarding`
      if (jsonObj.get("log_forwarding") != null && !jsonObj.get("log_forwarding").isJsonNull()) {
        LogForwardingConfigPart.validateJsonElement(jsonObj.get("log_forwarding"));
      }
      // validate the optional field `message_queue_info`
      if (jsonObj.get("message_queue_info") != null && !jsonObj.get("message_queue_info").isJsonNull()) {
        GatewayMessageQueueInfo.validateJsonElement(jsonObj.get("message_queue_info"));
      }
      // validate the optional field `migrations`
      if (jsonObj.get("migrations") != null && !jsonObj.get("migrations").isJsonNull()) {
        MigrationsConfigPart.validateJsonElement(jsonObj.get("migrations"));
      }
      // validate the optional field `producers`
      if (jsonObj.get("producers") != null && !jsonObj.get("producers").isJsonNull()) {
        ProducersConfigPart.validateJsonElement(jsonObj.get("producers"));
      }
      // validate the optional field `rotators`
      if (jsonObj.get("rotators") != null && !jsonObj.get("rotators").isJsonNull()) {
        RotatorsConfigPart.validateJsonElement(jsonObj.get("rotators"));
      }
      // validate the optional field `saml`
      if (jsonObj.get("saml") != null && !jsonObj.get("saml").isJsonNull()) {
        DefaultConfigPart.validateJsonElement(jsonObj.get("saml"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AkeylessGatewayConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AkeylessGatewayConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AkeylessGatewayConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AkeylessGatewayConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AkeylessGatewayConfig>() {
           @Override
           public void write(JsonWriter out, AkeylessGatewayConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AkeylessGatewayConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AkeylessGatewayConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AkeylessGatewayConfig
   * @throws IOException if the JSON string is invalid with respect to AkeylessGatewayConfig
   */
  public static AkeylessGatewayConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AkeylessGatewayConfig.class);
  }

  /**
   * Convert an instance of AkeylessGatewayConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

