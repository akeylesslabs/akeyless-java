/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ClientUsageInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ClientUsageInfo {
  public static final String SERIALIZED_NAME_ACCESS_ID = "access_id";
  @SerializedName(SERIALIZED_NAME_ACCESS_ID)
  private String accessId;

  public static final String SERIALIZED_NAME_ACCESS_TYPE = "access_type";
  @SerializedName(SERIALIZED_NAME_ACCESS_TYPE)
  private String accessType;

  public static final String SERIALIZED_NAME_AUTH_METHOD_NAME = "auth_method_name";
  @SerializedName(SERIALIZED_NAME_AUTH_METHOD_NAME)
  private String authMethodName;

  public static final String SERIALIZED_NAME_CLIENT_UNIQUE_ID = "client_unique_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_UNIQUE_ID)
  private String clientUniqueId;

  public static final String SERIALIZED_NAME_EXCEEDED_CLIENTS = "exceeded_clients";
  @SerializedName(SERIALIZED_NAME_EXCEEDED_CLIENTS)
  private Long exceededClients;

  public ClientUsageInfo() { 
  }

  public ClientUsageInfo accessId(String accessId) {
    
    this.accessId = accessId;
    return this;
  }

   /**
   * Get accessId
   * @return accessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessId() {
    return accessId;
  }


  public void setAccessId(String accessId) {
    this.accessId = accessId;
  }


  public ClientUsageInfo accessType(String accessType) {
    
    this.accessType = accessType;
    return this;
  }

   /**
   * Get accessType
   * @return accessType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessType() {
    return accessType;
  }


  public void setAccessType(String accessType) {
    this.accessType = accessType;
  }


  public ClientUsageInfo authMethodName(String authMethodName) {
    
    this.authMethodName = authMethodName;
    return this;
  }

   /**
   * Get authMethodName
   * @return authMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthMethodName() {
    return authMethodName;
  }


  public void setAuthMethodName(String authMethodName) {
    this.authMethodName = authMethodName;
  }


  public ClientUsageInfo clientUniqueId(String clientUniqueId) {
    
    this.clientUniqueId = clientUniqueId;
    return this;
  }

   /**
   * Get clientUniqueId
   * @return clientUniqueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClientUniqueId() {
    return clientUniqueId;
  }


  public void setClientUniqueId(String clientUniqueId) {
    this.clientUniqueId = clientUniqueId;
  }


  public ClientUsageInfo exceededClients(Long exceededClients) {
    
    this.exceededClients = exceededClients;
    return this;
  }

   /**
   * Get exceededClients
   * @return exceededClients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getExceededClients() {
    return exceededClients;
  }


  public void setExceededClients(Long exceededClients) {
    this.exceededClients = exceededClients;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientUsageInfo clientUsageInfo = (ClientUsageInfo) o;
    return Objects.equals(this.accessId, clientUsageInfo.accessId) &&
        Objects.equals(this.accessType, clientUsageInfo.accessType) &&
        Objects.equals(this.authMethodName, clientUsageInfo.authMethodName) &&
        Objects.equals(this.clientUniqueId, clientUsageInfo.clientUniqueId) &&
        Objects.equals(this.exceededClients, clientUsageInfo.exceededClients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessId, accessType, authMethodName, clientUniqueId, exceededClients);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientUsageInfo {\n");
    sb.append("    accessId: ").append(toIndentedString(accessId)).append("\n");
    sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
    sb.append("    authMethodName: ").append(toIndentedString(authMethodName)).append("\n");
    sb.append("    clientUniqueId: ").append(toIndentedString(clientUniqueId)).append("\n");
    sb.append("    exceededClients: ").append(toIndentedString(exceededClients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

