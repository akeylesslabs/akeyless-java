/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.CertificateChainInfo;
import io.akeyless.client.model.CertificateExpirationEvent;
import io.akeyless.client.model.CertificateIssueInfo;
import io.akeyless.client.model.CertificateTemplateInfo;
import io.akeyless.client.model.ClassicKeyDetailsInfo;
import io.akeyless.client.model.DynamicSecretProducerInfo;
import io.akeyless.client.model.ImporterInfo;
import io.akeyless.client.model.NextAutoRotationEvent;
import io.akeyless.client.model.OidcClientInfo;
import io.akeyless.client.model.PasswordPolicyInfo;
import io.akeyless.client.model.RotatedSecretDetailsInfo;
import io.akeyless.client.model.SecureRemoteAccess;
import io.akeyless.client.model.StaticSecretDetailsInfo;
import io.akeyless.client.model.TokenizerInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * ItemGeneralInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class ItemGeneralInfo {
  public static final String SERIALIZED_NAME_CERT_ISSUE_DETAILS = "cert_issue_details";
  @SerializedName(SERIALIZED_NAME_CERT_ISSUE_DETAILS)
  @javax.annotation.Nullable
  private CertificateIssueInfo certIssueDetails;

  public static final String SERIALIZED_NAME_CERTIFICATE_CHAIN_INFO = "certificate_chain_info";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_CHAIN_INFO)
  @javax.annotation.Nullable
  private CertificateChainInfo certificateChainInfo;

  public static final String SERIALIZED_NAME_CERTIFICATE_FORMAT = "certificate_format";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_FORMAT)
  @javax.annotation.Nullable
  private String certificateFormat;

  public static final String SERIALIZED_NAME_CERTIFICATES_TEMPLATE_INFO = "certificates_template_info";
  @SerializedName(SERIALIZED_NAME_CERTIFICATES_TEMPLATE_INFO)
  @javax.annotation.Nullable
  private CertificateTemplateInfo certificatesTemplateInfo;

  public static final String SERIALIZED_NAME_CLASSIC_KEY_DETAILS = "classic_key_details";
  @SerializedName(SERIALIZED_NAME_CLASSIC_KEY_DETAILS)
  @javax.annotation.Nullable
  private ClassicKeyDetailsInfo classicKeyDetails;

  public static final String SERIALIZED_NAME_CLUSTER_GW_URL = "cluster_gw_url";
  @SerializedName(SERIALIZED_NAME_CLUSTER_GW_URL)
  @javax.annotation.Nullable
  private String clusterGwUrl;

  public static final String SERIALIZED_NAME_DISPLAY_METADATA = "display_metadata";
  @SerializedName(SERIALIZED_NAME_DISPLAY_METADATA)
  @javax.annotation.Nullable
  private String displayMetadata;

  public static final String SERIALIZED_NAME_DYNAMIC_SECRET_PRODUCER_DETAILS = "dynamic_secret_producer_details";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_SECRET_PRODUCER_DETAILS)
  @javax.annotation.Nullable
  private DynamicSecretProducerInfo dynamicSecretProducerDetails;

  public static final String SERIALIZED_NAME_EXPIRATION_EVENTS = "expiration_events";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_EVENTS)
  @javax.annotation.Nullable
  private List<CertificateExpirationEvent> expirationEvents = new ArrayList<>();

  public static final String SERIALIZED_NAME_IMPORTER_INFO = "importer_info";
  @SerializedName(SERIALIZED_NAME_IMPORTER_INFO)
  @javax.annotation.Nullable
  private ImporterInfo importerInfo;

  public static final String SERIALIZED_NAME_NEXT_ROTATION_EVENTS = "next_rotation_events";
  @SerializedName(SERIALIZED_NAME_NEXT_ROTATION_EVENTS)
  @javax.annotation.Nullable
  private List<NextAutoRotationEvent> nextRotationEvents = new ArrayList<>();

  public static final String SERIALIZED_NAME_OIDC_CLIENT_INFO = "oidc_client_info";
  @SerializedName(SERIALIZED_NAME_OIDC_CLIENT_INFO)
  @javax.annotation.Nullable
  private OidcClientInfo oidcClientInfo;

  public static final String SERIALIZED_NAME_PASSWORD_POLICY = "password_policy";
  @SerializedName(SERIALIZED_NAME_PASSWORD_POLICY)
  @javax.annotation.Nullable
  private PasswordPolicyInfo passwordPolicy;

  public static final String SERIALIZED_NAME_ROTATED_SECRET_DETAILS = "rotated_secret_details";
  @SerializedName(SERIALIZED_NAME_ROTATED_SECRET_DETAILS)
  @javax.annotation.Nullable
  private RotatedSecretDetailsInfo rotatedSecretDetails;

  public static final String SERIALIZED_NAME_SECURE_REMOTE_ACCESS_DETAILS = "secure_remote_access_details";
  @SerializedName(SERIALIZED_NAME_SECURE_REMOTE_ACCESS_DETAILS)
  @javax.annotation.Nullable
  private SecureRemoteAccess secureRemoteAccessDetails;

  public static final String SERIALIZED_NAME_STATIC_SECRET_INFO = "static_secret_info";
  @SerializedName(SERIALIZED_NAME_STATIC_SECRET_INFO)
  @javax.annotation.Nullable
  private StaticSecretDetailsInfo staticSecretInfo;

  public static final String SERIALIZED_NAME_TOKENIZER_INFO = "tokenizer_info";
  @SerializedName(SERIALIZED_NAME_TOKENIZER_INFO)
  @javax.annotation.Nullable
  private TokenizerInfo tokenizerInfo;

  public ItemGeneralInfo() {
  }

  public ItemGeneralInfo certIssueDetails(@javax.annotation.Nullable CertificateIssueInfo certIssueDetails) {
    this.certIssueDetails = certIssueDetails;
    return this;
  }

  /**
   * Get certIssueDetails
   * @return certIssueDetails
   */
  @javax.annotation.Nullable
  public CertificateIssueInfo getCertIssueDetails() {
    return certIssueDetails;
  }

  public void setCertIssueDetails(@javax.annotation.Nullable CertificateIssueInfo certIssueDetails) {
    this.certIssueDetails = certIssueDetails;
  }


  public ItemGeneralInfo certificateChainInfo(@javax.annotation.Nullable CertificateChainInfo certificateChainInfo) {
    this.certificateChainInfo = certificateChainInfo;
    return this;
  }

  /**
   * Get certificateChainInfo
   * @return certificateChainInfo
   */
  @javax.annotation.Nullable
  public CertificateChainInfo getCertificateChainInfo() {
    return certificateChainInfo;
  }

  public void setCertificateChainInfo(@javax.annotation.Nullable CertificateChainInfo certificateChainInfo) {
    this.certificateChainInfo = certificateChainInfo;
  }


  public ItemGeneralInfo certificateFormat(@javax.annotation.Nullable String certificateFormat) {
    this.certificateFormat = certificateFormat;
    return this;
  }

  /**
   * Get certificateFormat
   * @return certificateFormat
   */
  @javax.annotation.Nullable
  public String getCertificateFormat() {
    return certificateFormat;
  }

  public void setCertificateFormat(@javax.annotation.Nullable String certificateFormat) {
    this.certificateFormat = certificateFormat;
  }


  public ItemGeneralInfo certificatesTemplateInfo(@javax.annotation.Nullable CertificateTemplateInfo certificatesTemplateInfo) {
    this.certificatesTemplateInfo = certificatesTemplateInfo;
    return this;
  }

  /**
   * Get certificatesTemplateInfo
   * @return certificatesTemplateInfo
   */
  @javax.annotation.Nullable
  public CertificateTemplateInfo getCertificatesTemplateInfo() {
    return certificatesTemplateInfo;
  }

  public void setCertificatesTemplateInfo(@javax.annotation.Nullable CertificateTemplateInfo certificatesTemplateInfo) {
    this.certificatesTemplateInfo = certificatesTemplateInfo;
  }


  public ItemGeneralInfo classicKeyDetails(@javax.annotation.Nullable ClassicKeyDetailsInfo classicKeyDetails) {
    this.classicKeyDetails = classicKeyDetails;
    return this;
  }

  /**
   * Get classicKeyDetails
   * @return classicKeyDetails
   */
  @javax.annotation.Nullable
  public ClassicKeyDetailsInfo getClassicKeyDetails() {
    return classicKeyDetails;
  }

  public void setClassicKeyDetails(@javax.annotation.Nullable ClassicKeyDetailsInfo classicKeyDetails) {
    this.classicKeyDetails = classicKeyDetails;
  }


  public ItemGeneralInfo clusterGwUrl(@javax.annotation.Nullable String clusterGwUrl) {
    this.clusterGwUrl = clusterGwUrl;
    return this;
  }

  /**
   * Get clusterGwUrl
   * @return clusterGwUrl
   */
  @javax.annotation.Nullable
  public String getClusterGwUrl() {
    return clusterGwUrl;
  }

  public void setClusterGwUrl(@javax.annotation.Nullable String clusterGwUrl) {
    this.clusterGwUrl = clusterGwUrl;
  }


  public ItemGeneralInfo displayMetadata(@javax.annotation.Nullable String displayMetadata) {
    this.displayMetadata = displayMetadata;
    return this;
  }

  /**
   * Get displayMetadata
   * @return displayMetadata
   */
  @javax.annotation.Nullable
  public String getDisplayMetadata() {
    return displayMetadata;
  }

  public void setDisplayMetadata(@javax.annotation.Nullable String displayMetadata) {
    this.displayMetadata = displayMetadata;
  }


  public ItemGeneralInfo dynamicSecretProducerDetails(@javax.annotation.Nullable DynamicSecretProducerInfo dynamicSecretProducerDetails) {
    this.dynamicSecretProducerDetails = dynamicSecretProducerDetails;
    return this;
  }

  /**
   * Get dynamicSecretProducerDetails
   * @return dynamicSecretProducerDetails
   */
  @javax.annotation.Nullable
  public DynamicSecretProducerInfo getDynamicSecretProducerDetails() {
    return dynamicSecretProducerDetails;
  }

  public void setDynamicSecretProducerDetails(@javax.annotation.Nullable DynamicSecretProducerInfo dynamicSecretProducerDetails) {
    this.dynamicSecretProducerDetails = dynamicSecretProducerDetails;
  }


  public ItemGeneralInfo expirationEvents(@javax.annotation.Nullable List<CertificateExpirationEvent> expirationEvents) {
    this.expirationEvents = expirationEvents;
    return this;
  }

  public ItemGeneralInfo addExpirationEventsItem(CertificateExpirationEvent expirationEventsItem) {
    if (this.expirationEvents == null) {
      this.expirationEvents = new ArrayList<>();
    }
    this.expirationEvents.add(expirationEventsItem);
    return this;
  }

  /**
   * Get expirationEvents
   * @return expirationEvents
   */
  @javax.annotation.Nullable
  public List<CertificateExpirationEvent> getExpirationEvents() {
    return expirationEvents;
  }

  public void setExpirationEvents(@javax.annotation.Nullable List<CertificateExpirationEvent> expirationEvents) {
    this.expirationEvents = expirationEvents;
  }


  public ItemGeneralInfo importerInfo(@javax.annotation.Nullable ImporterInfo importerInfo) {
    this.importerInfo = importerInfo;
    return this;
  }

  /**
   * Get importerInfo
   * @return importerInfo
   */
  @javax.annotation.Nullable
  public ImporterInfo getImporterInfo() {
    return importerInfo;
  }

  public void setImporterInfo(@javax.annotation.Nullable ImporterInfo importerInfo) {
    this.importerInfo = importerInfo;
  }


  public ItemGeneralInfo nextRotationEvents(@javax.annotation.Nullable List<NextAutoRotationEvent> nextRotationEvents) {
    this.nextRotationEvents = nextRotationEvents;
    return this;
  }

  public ItemGeneralInfo addNextRotationEventsItem(NextAutoRotationEvent nextRotationEventsItem) {
    if (this.nextRotationEvents == null) {
      this.nextRotationEvents = new ArrayList<>();
    }
    this.nextRotationEvents.add(nextRotationEventsItem);
    return this;
  }

  /**
   * Get nextRotationEvents
   * @return nextRotationEvents
   */
  @javax.annotation.Nullable
  public List<NextAutoRotationEvent> getNextRotationEvents() {
    return nextRotationEvents;
  }

  public void setNextRotationEvents(@javax.annotation.Nullable List<NextAutoRotationEvent> nextRotationEvents) {
    this.nextRotationEvents = nextRotationEvents;
  }


  public ItemGeneralInfo oidcClientInfo(@javax.annotation.Nullable OidcClientInfo oidcClientInfo) {
    this.oidcClientInfo = oidcClientInfo;
    return this;
  }

  /**
   * Get oidcClientInfo
   * @return oidcClientInfo
   */
  @javax.annotation.Nullable
  public OidcClientInfo getOidcClientInfo() {
    return oidcClientInfo;
  }

  public void setOidcClientInfo(@javax.annotation.Nullable OidcClientInfo oidcClientInfo) {
    this.oidcClientInfo = oidcClientInfo;
  }


  public ItemGeneralInfo passwordPolicy(@javax.annotation.Nullable PasswordPolicyInfo passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
    return this;
  }

  /**
   * Get passwordPolicy
   * @return passwordPolicy
   */
  @javax.annotation.Nullable
  public PasswordPolicyInfo getPasswordPolicy() {
    return passwordPolicy;
  }

  public void setPasswordPolicy(@javax.annotation.Nullable PasswordPolicyInfo passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
  }


  public ItemGeneralInfo rotatedSecretDetails(@javax.annotation.Nullable RotatedSecretDetailsInfo rotatedSecretDetails) {
    this.rotatedSecretDetails = rotatedSecretDetails;
    return this;
  }

  /**
   * Get rotatedSecretDetails
   * @return rotatedSecretDetails
   */
  @javax.annotation.Nullable
  public RotatedSecretDetailsInfo getRotatedSecretDetails() {
    return rotatedSecretDetails;
  }

  public void setRotatedSecretDetails(@javax.annotation.Nullable RotatedSecretDetailsInfo rotatedSecretDetails) {
    this.rotatedSecretDetails = rotatedSecretDetails;
  }


  public ItemGeneralInfo secureRemoteAccessDetails(@javax.annotation.Nullable SecureRemoteAccess secureRemoteAccessDetails) {
    this.secureRemoteAccessDetails = secureRemoteAccessDetails;
    return this;
  }

  /**
   * Get secureRemoteAccessDetails
   * @return secureRemoteAccessDetails
   */
  @javax.annotation.Nullable
  public SecureRemoteAccess getSecureRemoteAccessDetails() {
    return secureRemoteAccessDetails;
  }

  public void setSecureRemoteAccessDetails(@javax.annotation.Nullable SecureRemoteAccess secureRemoteAccessDetails) {
    this.secureRemoteAccessDetails = secureRemoteAccessDetails;
  }


  public ItemGeneralInfo staticSecretInfo(@javax.annotation.Nullable StaticSecretDetailsInfo staticSecretInfo) {
    this.staticSecretInfo = staticSecretInfo;
    return this;
  }

  /**
   * Get staticSecretInfo
   * @return staticSecretInfo
   */
  @javax.annotation.Nullable
  public StaticSecretDetailsInfo getStaticSecretInfo() {
    return staticSecretInfo;
  }

  public void setStaticSecretInfo(@javax.annotation.Nullable StaticSecretDetailsInfo staticSecretInfo) {
    this.staticSecretInfo = staticSecretInfo;
  }


  public ItemGeneralInfo tokenizerInfo(@javax.annotation.Nullable TokenizerInfo tokenizerInfo) {
    this.tokenizerInfo = tokenizerInfo;
    return this;
  }

  /**
   * Get tokenizerInfo
   * @return tokenizerInfo
   */
  @javax.annotation.Nullable
  public TokenizerInfo getTokenizerInfo() {
    return tokenizerInfo;
  }

  public void setTokenizerInfo(@javax.annotation.Nullable TokenizerInfo tokenizerInfo) {
    this.tokenizerInfo = tokenizerInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemGeneralInfo itemGeneralInfo = (ItemGeneralInfo) o;
    return Objects.equals(this.certIssueDetails, itemGeneralInfo.certIssueDetails) &&
        Objects.equals(this.certificateChainInfo, itemGeneralInfo.certificateChainInfo) &&
        Objects.equals(this.certificateFormat, itemGeneralInfo.certificateFormat) &&
        Objects.equals(this.certificatesTemplateInfo, itemGeneralInfo.certificatesTemplateInfo) &&
        Objects.equals(this.classicKeyDetails, itemGeneralInfo.classicKeyDetails) &&
        Objects.equals(this.clusterGwUrl, itemGeneralInfo.clusterGwUrl) &&
        Objects.equals(this.displayMetadata, itemGeneralInfo.displayMetadata) &&
        Objects.equals(this.dynamicSecretProducerDetails, itemGeneralInfo.dynamicSecretProducerDetails) &&
        Objects.equals(this.expirationEvents, itemGeneralInfo.expirationEvents) &&
        Objects.equals(this.importerInfo, itemGeneralInfo.importerInfo) &&
        Objects.equals(this.nextRotationEvents, itemGeneralInfo.nextRotationEvents) &&
        Objects.equals(this.oidcClientInfo, itemGeneralInfo.oidcClientInfo) &&
        Objects.equals(this.passwordPolicy, itemGeneralInfo.passwordPolicy) &&
        Objects.equals(this.rotatedSecretDetails, itemGeneralInfo.rotatedSecretDetails) &&
        Objects.equals(this.secureRemoteAccessDetails, itemGeneralInfo.secureRemoteAccessDetails) &&
        Objects.equals(this.staticSecretInfo, itemGeneralInfo.staticSecretInfo) &&
        Objects.equals(this.tokenizerInfo, itemGeneralInfo.tokenizerInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certIssueDetails, certificateChainInfo, certificateFormat, certificatesTemplateInfo, classicKeyDetails, clusterGwUrl, displayMetadata, dynamicSecretProducerDetails, expirationEvents, importerInfo, nextRotationEvents, oidcClientInfo, passwordPolicy, rotatedSecretDetails, secureRemoteAccessDetails, staticSecretInfo, tokenizerInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemGeneralInfo {\n");
    sb.append("    certIssueDetails: ").append(toIndentedString(certIssueDetails)).append("\n");
    sb.append("    certificateChainInfo: ").append(toIndentedString(certificateChainInfo)).append("\n");
    sb.append("    certificateFormat: ").append(toIndentedString(certificateFormat)).append("\n");
    sb.append("    certificatesTemplateInfo: ").append(toIndentedString(certificatesTemplateInfo)).append("\n");
    sb.append("    classicKeyDetails: ").append(toIndentedString(classicKeyDetails)).append("\n");
    sb.append("    clusterGwUrl: ").append(toIndentedString(clusterGwUrl)).append("\n");
    sb.append("    displayMetadata: ").append(toIndentedString(displayMetadata)).append("\n");
    sb.append("    dynamicSecretProducerDetails: ").append(toIndentedString(dynamicSecretProducerDetails)).append("\n");
    sb.append("    expirationEvents: ").append(toIndentedString(expirationEvents)).append("\n");
    sb.append("    importerInfo: ").append(toIndentedString(importerInfo)).append("\n");
    sb.append("    nextRotationEvents: ").append(toIndentedString(nextRotationEvents)).append("\n");
    sb.append("    oidcClientInfo: ").append(toIndentedString(oidcClientInfo)).append("\n");
    sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
    sb.append("    rotatedSecretDetails: ").append(toIndentedString(rotatedSecretDetails)).append("\n");
    sb.append("    secureRemoteAccessDetails: ").append(toIndentedString(secureRemoteAccessDetails)).append("\n");
    sb.append("    staticSecretInfo: ").append(toIndentedString(staticSecretInfo)).append("\n");
    sb.append("    tokenizerInfo: ").append(toIndentedString(tokenizerInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cert_issue_details");
    openapiFields.add("certificate_chain_info");
    openapiFields.add("certificate_format");
    openapiFields.add("certificates_template_info");
    openapiFields.add("classic_key_details");
    openapiFields.add("cluster_gw_url");
    openapiFields.add("display_metadata");
    openapiFields.add("dynamic_secret_producer_details");
    openapiFields.add("expiration_events");
    openapiFields.add("importer_info");
    openapiFields.add("next_rotation_events");
    openapiFields.add("oidc_client_info");
    openapiFields.add("password_policy");
    openapiFields.add("rotated_secret_details");
    openapiFields.add("secure_remote_access_details");
    openapiFields.add("static_secret_info");
    openapiFields.add("tokenizer_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ItemGeneralInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ItemGeneralInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemGeneralInfo is not found in the empty JSON string", ItemGeneralInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ItemGeneralInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemGeneralInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `cert_issue_details`
      if (jsonObj.get("cert_issue_details") != null && !jsonObj.get("cert_issue_details").isJsonNull()) {
        CertificateIssueInfo.validateJsonElement(jsonObj.get("cert_issue_details"));
      }
      // validate the optional field `certificate_chain_info`
      if (jsonObj.get("certificate_chain_info") != null && !jsonObj.get("certificate_chain_info").isJsonNull()) {
        CertificateChainInfo.validateJsonElement(jsonObj.get("certificate_chain_info"));
      }
      if ((jsonObj.get("certificate_format") != null && !jsonObj.get("certificate_format").isJsonNull()) && !jsonObj.get("certificate_format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificate_format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificate_format").toString()));
      }
      // validate the optional field `certificates_template_info`
      if (jsonObj.get("certificates_template_info") != null && !jsonObj.get("certificates_template_info").isJsonNull()) {
        CertificateTemplateInfo.validateJsonElement(jsonObj.get("certificates_template_info"));
      }
      // validate the optional field `classic_key_details`
      if (jsonObj.get("classic_key_details") != null && !jsonObj.get("classic_key_details").isJsonNull()) {
        ClassicKeyDetailsInfo.validateJsonElement(jsonObj.get("classic_key_details"));
      }
      if ((jsonObj.get("cluster_gw_url") != null && !jsonObj.get("cluster_gw_url").isJsonNull()) && !jsonObj.get("cluster_gw_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cluster_gw_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cluster_gw_url").toString()));
      }
      if ((jsonObj.get("display_metadata") != null && !jsonObj.get("display_metadata").isJsonNull()) && !jsonObj.get("display_metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_metadata").toString()));
      }
      // validate the optional field `dynamic_secret_producer_details`
      if (jsonObj.get("dynamic_secret_producer_details") != null && !jsonObj.get("dynamic_secret_producer_details").isJsonNull()) {
        DynamicSecretProducerInfo.validateJsonElement(jsonObj.get("dynamic_secret_producer_details"));
      }
      if (jsonObj.get("expiration_events") != null && !jsonObj.get("expiration_events").isJsonNull()) {
        JsonArray jsonArrayexpirationEvents = jsonObj.getAsJsonArray("expiration_events");
        if (jsonArrayexpirationEvents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("expiration_events").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `expiration_events` to be an array in the JSON string but got `%s`", jsonObj.get("expiration_events").toString()));
          }

          // validate the optional field `expiration_events` (array)
          for (int i = 0; i < jsonArrayexpirationEvents.size(); i++) {
            CertificateExpirationEvent.validateJsonElement(jsonArrayexpirationEvents.get(i));
          };
        }
      }
      // validate the optional field `importer_info`
      if (jsonObj.get("importer_info") != null && !jsonObj.get("importer_info").isJsonNull()) {
        ImporterInfo.validateJsonElement(jsonObj.get("importer_info"));
      }
      if (jsonObj.get("next_rotation_events") != null && !jsonObj.get("next_rotation_events").isJsonNull()) {
        JsonArray jsonArraynextRotationEvents = jsonObj.getAsJsonArray("next_rotation_events");
        if (jsonArraynextRotationEvents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("next_rotation_events").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `next_rotation_events` to be an array in the JSON string but got `%s`", jsonObj.get("next_rotation_events").toString()));
          }

          // validate the optional field `next_rotation_events` (array)
          for (int i = 0; i < jsonArraynextRotationEvents.size(); i++) {
            NextAutoRotationEvent.validateJsonElement(jsonArraynextRotationEvents.get(i));
          };
        }
      }
      // validate the optional field `oidc_client_info`
      if (jsonObj.get("oidc_client_info") != null && !jsonObj.get("oidc_client_info").isJsonNull()) {
        OidcClientInfo.validateJsonElement(jsonObj.get("oidc_client_info"));
      }
      // validate the optional field `password_policy`
      if (jsonObj.get("password_policy") != null && !jsonObj.get("password_policy").isJsonNull()) {
        PasswordPolicyInfo.validateJsonElement(jsonObj.get("password_policy"));
      }
      // validate the optional field `rotated_secret_details`
      if (jsonObj.get("rotated_secret_details") != null && !jsonObj.get("rotated_secret_details").isJsonNull()) {
        RotatedSecretDetailsInfo.validateJsonElement(jsonObj.get("rotated_secret_details"));
      }
      // validate the optional field `secure_remote_access_details`
      if (jsonObj.get("secure_remote_access_details") != null && !jsonObj.get("secure_remote_access_details").isJsonNull()) {
        SecureRemoteAccess.validateJsonElement(jsonObj.get("secure_remote_access_details"));
      }
      // validate the optional field `static_secret_info`
      if (jsonObj.get("static_secret_info") != null && !jsonObj.get("static_secret_info").isJsonNull()) {
        StaticSecretDetailsInfo.validateJsonElement(jsonObj.get("static_secret_info"));
      }
      // validate the optional field `tokenizer_info`
      if (jsonObj.get("tokenizer_info") != null && !jsonObj.get("tokenizer_info").isJsonNull()) {
        TokenizerInfo.validateJsonElement(jsonObj.get("tokenizer_info"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemGeneralInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemGeneralInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemGeneralInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemGeneralInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemGeneralInfo>() {
           @Override
           public void write(JsonWriter out, ItemGeneralInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemGeneralInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ItemGeneralInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ItemGeneralInfo
   * @throws IOException if the JSON string is invalid with respect to ItemGeneralInfo
   */
  public static ItemGeneralInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemGeneralInfo.class);
  }

  /**
   * Convert an instance of ItemGeneralInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

