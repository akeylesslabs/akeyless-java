/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UpdateZeroSSLTarget
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UpdateZeroSSLTarget {
  public static final String SERIALIZED_NAME_API_KEY = "api-key";
  @SerializedName(SERIALIZED_NAME_API_KEY)
  private String apiKey;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IMAP_FQDN = "imap-fqdn";
  @SerializedName(SERIALIZED_NAME_IMAP_FQDN)
  private String imapFqdn;

  public static final String SERIALIZED_NAME_IMAP_PASSWORD = "imap-password";
  @SerializedName(SERIALIZED_NAME_IMAP_PASSWORD)
  private String imapPassword;

  public static final String SERIALIZED_NAME_IMAP_PORT = "imap-port";
  @SerializedName(SERIALIZED_NAME_IMAP_PORT)
  private String imapPort = "993";

  public static final String SERIALIZED_NAME_IMAP_TARGET_EMAIL = "imap-target-email";
  @SerializedName(SERIALIZED_NAME_IMAP_TARGET_EMAIL)
  private String imapTargetEmail;

  public static final String SERIALIZED_NAME_IMAP_USERNAME = "imap-username";
  @SerializedName(SERIALIZED_NAME_IMAP_USERNAME)
  private String imapUsername;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_KEEP_PREV_VERSION = "keep-prev-version";
  @SerializedName(SERIALIZED_NAME_KEEP_PREV_VERSION)
  private String keepPrevVersion;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEW_NAME = "new-name";
  @SerializedName(SERIALIZED_NAME_NEW_NAME)
  private String newName;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private String timeout = "5m";

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_UPDATE_VERSION = "update-version";
  @SerializedName(SERIALIZED_NAME_UPDATE_VERSION)
  private Boolean updateVersion;

  public UpdateZeroSSLTarget() { 
  }

  public UpdateZeroSSLTarget apiKey(String apiKey) {
    
    this.apiKey = apiKey;
    return this;
  }

   /**
   * API Key of the ZeroSSLTarget account
   * @return apiKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "API Key of the ZeroSSLTarget account")

  public String getApiKey() {
    return apiKey;
  }


  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }


  public UpdateZeroSSLTarget comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Deprecated - use description
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated - use description")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public UpdateZeroSSLTarget description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the object
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the object")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateZeroSSLTarget imapFqdn(String imapFqdn) {
    
    this.imapFqdn = imapFqdn;
    return this;
  }

   /**
   * ImapFQDN of the IMAP service, FQDN or IPv4 address. Must be FQDN if the IMAP is using TLS
   * @return imapFqdn
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ImapFQDN of the IMAP service, FQDN or IPv4 address. Must be FQDN if the IMAP is using TLS")

  public String getImapFqdn() {
    return imapFqdn;
  }


  public void setImapFqdn(String imapFqdn) {
    this.imapFqdn = imapFqdn;
  }


  public UpdateZeroSSLTarget imapPassword(String imapPassword) {
    
    this.imapPassword = imapPassword;
    return this;
  }

   /**
   * ImapPassword to access the IMAP service
   * @return imapPassword
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ImapPassword to access the IMAP service")

  public String getImapPassword() {
    return imapPassword;
  }


  public void setImapPassword(String imapPassword) {
    this.imapPassword = imapPassword;
  }


  public UpdateZeroSSLTarget imapPort(String imapPort) {
    
    this.imapPort = imapPort;
    return this;
  }

   /**
   * ImapPort of the IMAP service
   * @return imapPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ImapPort of the IMAP service")

  public String getImapPort() {
    return imapPort;
  }


  public void setImapPort(String imapPort) {
    this.imapPort = imapPort;
  }


  public UpdateZeroSSLTarget imapTargetEmail(String imapTargetEmail) {
    
    this.imapTargetEmail = imapTargetEmail;
    return this;
  }

   /**
   * ImapValidationEmail to use when asking ZeroSSL to send a validation email, if empty will user imap-username
   * @return imapTargetEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ImapValidationEmail to use when asking ZeroSSL to send a validation email, if empty will user imap-username")

  public String getImapTargetEmail() {
    return imapTargetEmail;
  }


  public void setImapTargetEmail(String imapTargetEmail) {
    this.imapTargetEmail = imapTargetEmail;
  }


  public UpdateZeroSSLTarget imapUsername(String imapUsername) {
    
    this.imapUsername = imapUsername;
    return this;
  }

   /**
   * ImapUsername to access the IMAP service
   * @return imapUsername
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ImapUsername to access the IMAP service")

  public String getImapUsername() {
    return imapUsername;
  }


  public void setImapUsername(String imapUsername) {
    this.imapUsername = imapUsername;
  }


  public UpdateZeroSSLTarget json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public UpdateZeroSSLTarget keepPrevVersion(String keepPrevVersion) {
    
    this.keepPrevVersion = keepPrevVersion;
    return this;
  }

   /**
   * Whether to keep previous version [true/false]. If not set, use default according to account settings
   * @return keepPrevVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to keep previous version [true/false]. If not set, use default according to account settings")

  public String getKeepPrevVersion() {
    return keepPrevVersion;
  }


  public void setKeepPrevVersion(String keepPrevVersion) {
    this.keepPrevVersion = keepPrevVersion;
  }


  public UpdateZeroSSLTarget key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * The name of a key that used to encrypt the target secret value (if empty, the account default protectionKey key will be used)
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of a key that used to encrypt the target secret value (if empty, the account default protectionKey key will be used)")

  public String getKey() {
    return key;
  }


  public void setKey(String key) {
    this.key = key;
  }


  public UpdateZeroSSLTarget name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Target name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Target name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UpdateZeroSSLTarget newName(String newName) {
    
    this.newName = newName;
    return this;
  }

   /**
   * New target name
   * @return newName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "New target name")

  public String getNewName() {
    return newName;
  }


  public void setNewName(String newName) {
    this.newName = newName;
  }


  public UpdateZeroSSLTarget timeout(String timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * Timeout waiting for certificate validation in Duration format (1h - 1 Hour, 20m - 20 Minutes, 33m3s - 33 Minutes and 3 Seconds), maximum 1h.
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timeout waiting for certificate validation in Duration format (1h - 1 Hour, 20m - 20 Minutes, 33m3s - 33 Minutes and 3 Seconds), maximum 1h.")

  public String getTimeout() {
    return timeout;
  }


  public void setTimeout(String timeout) {
    this.timeout = timeout;
  }


  public UpdateZeroSSLTarget token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public UpdateZeroSSLTarget uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public UpdateZeroSSLTarget updateVersion(Boolean updateVersion) {
    
    this.updateVersion = updateVersion;
    return this;
  }

   /**
   * Deprecated
   * @return updateVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated")

  public Boolean getUpdateVersion() {
    return updateVersion;
  }


  public void setUpdateVersion(Boolean updateVersion) {
    this.updateVersion = updateVersion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateZeroSSLTarget updateZeroSSLTarget = (UpdateZeroSSLTarget) o;
    return Objects.equals(this.apiKey, updateZeroSSLTarget.apiKey) &&
        Objects.equals(this.comment, updateZeroSSLTarget.comment) &&
        Objects.equals(this.description, updateZeroSSLTarget.description) &&
        Objects.equals(this.imapFqdn, updateZeroSSLTarget.imapFqdn) &&
        Objects.equals(this.imapPassword, updateZeroSSLTarget.imapPassword) &&
        Objects.equals(this.imapPort, updateZeroSSLTarget.imapPort) &&
        Objects.equals(this.imapTargetEmail, updateZeroSSLTarget.imapTargetEmail) &&
        Objects.equals(this.imapUsername, updateZeroSSLTarget.imapUsername) &&
        Objects.equals(this.json, updateZeroSSLTarget.json) &&
        Objects.equals(this.keepPrevVersion, updateZeroSSLTarget.keepPrevVersion) &&
        Objects.equals(this.key, updateZeroSSLTarget.key) &&
        Objects.equals(this.name, updateZeroSSLTarget.name) &&
        Objects.equals(this.newName, updateZeroSSLTarget.newName) &&
        Objects.equals(this.timeout, updateZeroSSLTarget.timeout) &&
        Objects.equals(this.token, updateZeroSSLTarget.token) &&
        Objects.equals(this.uidToken, updateZeroSSLTarget.uidToken) &&
        Objects.equals(this.updateVersion, updateZeroSSLTarget.updateVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiKey, comment, description, imapFqdn, imapPassword, imapPort, imapTargetEmail, imapUsername, json, keepPrevVersion, key, name, newName, timeout, token, uidToken, updateVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateZeroSSLTarget {\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imapFqdn: ").append(toIndentedString(imapFqdn)).append("\n");
    sb.append("    imapPassword: ").append(toIndentedString(imapPassword)).append("\n");
    sb.append("    imapPort: ").append(toIndentedString(imapPort)).append("\n");
    sb.append("    imapTargetEmail: ").append(toIndentedString(imapTargetEmail)).append("\n");
    sb.append("    imapUsername: ").append(toIndentedString(imapUsername)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    keepPrevVersion: ").append(toIndentedString(keepPrevVersion)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newName: ").append(toIndentedString(newName)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    updateVersion: ").append(toIndentedString(updateVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

