/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * ServerInventoryPayload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class ServerInventoryPayload {
  public static final String SERIALIZED_NAME_AUTO_ROTATE = "auto_rotate";
  @SerializedName(SERIALIZED_NAME_AUTO_ROTATE)
  @javax.annotation.Nullable
  private Boolean autoRotate;

  public static final String SERIALIZED_NAME_AUTO_ROTATE_INTERVAL_IN_DAYS = "auto_rotate_interval_in_days";
  @SerializedName(SERIALIZED_NAME_AUTO_ROTATE_INTERVAL_IN_DAYS)
  @javax.annotation.Nullable
  private Integer autoRotateIntervalInDays;

  public static final String SERIALIZED_NAME_AUTO_ROTATE_ROTATION_HOUR = "auto_rotate_rotation_hour";
  @SerializedName(SERIALIZED_NAME_AUTO_ROTATE_ROTATION_HOUR)
  @javax.annotation.Nullable
  private Integer autoRotateRotationHour;

  public static final String SERIALIZED_NAME_ENABLE_RDP_SRA = "enable_rdp_sra";
  @SerializedName(SERIALIZED_NAME_ENABLE_RDP_SRA)
  @javax.annotation.Nullable
  private Boolean enableRdpSra;

  public static final String SERIALIZED_NAME_MIGRATION_TARGET_ID = "migration_target_id";
  @SerializedName(SERIALIZED_NAME_MIGRATION_TARGET_ID)
  @javax.annotation.Nullable
  private Long migrationTargetId;

  public static final String SERIALIZED_NAME_SERVER_TARGETS_PATH_TEMPLATE = "server_targets_path_template";
  @SerializedName(SERIALIZED_NAME_SERVER_TARGETS_PATH_TEMPLATE)
  @javax.annotation.Nullable
  private String serverTargetsPathTemplate;

  public static final String SERIALIZED_NAME_USER_GROUPS = "user_groups";
  @SerializedName(SERIALIZED_NAME_USER_GROUPS)
  @javax.annotation.Nullable
  private List<String> userGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_USERS_IGNORE_LIST = "users_ignore_list";
  @SerializedName(SERIALIZED_NAME_USERS_IGNORE_LIST)
  @javax.annotation.Nullable
  private Map<String, Boolean> usersIgnoreList = new HashMap<>();

  public static final String SERIALIZED_NAME_USERS_ROTATED_SECRETS_PATH_TEMPLATE = "users_rotated_secrets_path_template";
  @SerializedName(SERIALIZED_NAME_USERS_ROTATED_SECRETS_PATH_TEMPLATE)
  @javax.annotation.Nullable
  private String usersRotatedSecretsPathTemplate;

  public ServerInventoryPayload() {
  }

  public ServerInventoryPayload autoRotate(@javax.annotation.Nullable Boolean autoRotate) {
    this.autoRotate = autoRotate;
    return this;
  }

  /**
   * Get autoRotate
   * @return autoRotate
   */
  @javax.annotation.Nullable
  public Boolean getAutoRotate() {
    return autoRotate;
  }

  public void setAutoRotate(@javax.annotation.Nullable Boolean autoRotate) {
    this.autoRotate = autoRotate;
  }


  public ServerInventoryPayload autoRotateIntervalInDays(@javax.annotation.Nullable Integer autoRotateIntervalInDays) {
    this.autoRotateIntervalInDays = autoRotateIntervalInDays;
    return this;
  }

  /**
   * Get autoRotateIntervalInDays
   * @return autoRotateIntervalInDays
   */
  @javax.annotation.Nullable
  public Integer getAutoRotateIntervalInDays() {
    return autoRotateIntervalInDays;
  }

  public void setAutoRotateIntervalInDays(@javax.annotation.Nullable Integer autoRotateIntervalInDays) {
    this.autoRotateIntervalInDays = autoRotateIntervalInDays;
  }


  public ServerInventoryPayload autoRotateRotationHour(@javax.annotation.Nullable Integer autoRotateRotationHour) {
    this.autoRotateRotationHour = autoRotateRotationHour;
    return this;
  }

  /**
   * Get autoRotateRotationHour
   * @return autoRotateRotationHour
   */
  @javax.annotation.Nullable
  public Integer getAutoRotateRotationHour() {
    return autoRotateRotationHour;
  }

  public void setAutoRotateRotationHour(@javax.annotation.Nullable Integer autoRotateRotationHour) {
    this.autoRotateRotationHour = autoRotateRotationHour;
  }


  public ServerInventoryPayload enableRdpSra(@javax.annotation.Nullable Boolean enableRdpSra) {
    this.enableRdpSra = enableRdpSra;
    return this;
  }

  /**
   * Get enableRdpSra
   * @return enableRdpSra
   */
  @javax.annotation.Nullable
  public Boolean getEnableRdpSra() {
    return enableRdpSra;
  }

  public void setEnableRdpSra(@javax.annotation.Nullable Boolean enableRdpSra) {
    this.enableRdpSra = enableRdpSra;
  }


  public ServerInventoryPayload migrationTargetId(@javax.annotation.Nullable Long migrationTargetId) {
    this.migrationTargetId = migrationTargetId;
    return this;
  }

  /**
   * Get migrationTargetId
   * @return migrationTargetId
   */
  @javax.annotation.Nullable
  public Long getMigrationTargetId() {
    return migrationTargetId;
  }

  public void setMigrationTargetId(@javax.annotation.Nullable Long migrationTargetId) {
    this.migrationTargetId = migrationTargetId;
  }


  public ServerInventoryPayload serverTargetsPathTemplate(@javax.annotation.Nullable String serverTargetsPathTemplate) {
    this.serverTargetsPathTemplate = serverTargetsPathTemplate;
    return this;
  }

  /**
   * Get serverTargetsPathTemplate
   * @return serverTargetsPathTemplate
   */
  @javax.annotation.Nullable
  public String getServerTargetsPathTemplate() {
    return serverTargetsPathTemplate;
  }

  public void setServerTargetsPathTemplate(@javax.annotation.Nullable String serverTargetsPathTemplate) {
    this.serverTargetsPathTemplate = serverTargetsPathTemplate;
  }


  public ServerInventoryPayload userGroups(@javax.annotation.Nullable List<String> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public ServerInventoryPayload addUserGroupsItem(String userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

  /**
   * Get userGroups
   * @return userGroups
   */
  @javax.annotation.Nullable
  public List<String> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(@javax.annotation.Nullable List<String> userGroups) {
    this.userGroups = userGroups;
  }


  public ServerInventoryPayload usersIgnoreList(@javax.annotation.Nullable Map<String, Boolean> usersIgnoreList) {
    this.usersIgnoreList = usersIgnoreList;
    return this;
  }

  public ServerInventoryPayload putUsersIgnoreListItem(String key, Boolean usersIgnoreListItem) {
    if (this.usersIgnoreList == null) {
      this.usersIgnoreList = new HashMap<>();
    }
    this.usersIgnoreList.put(key, usersIgnoreListItem);
    return this;
  }

  /**
   * Get usersIgnoreList
   * @return usersIgnoreList
   */
  @javax.annotation.Nullable
  public Map<String, Boolean> getUsersIgnoreList() {
    return usersIgnoreList;
  }

  public void setUsersIgnoreList(@javax.annotation.Nullable Map<String, Boolean> usersIgnoreList) {
    this.usersIgnoreList = usersIgnoreList;
  }


  public ServerInventoryPayload usersRotatedSecretsPathTemplate(@javax.annotation.Nullable String usersRotatedSecretsPathTemplate) {
    this.usersRotatedSecretsPathTemplate = usersRotatedSecretsPathTemplate;
    return this;
  }

  /**
   * Get usersRotatedSecretsPathTemplate
   * @return usersRotatedSecretsPathTemplate
   */
  @javax.annotation.Nullable
  public String getUsersRotatedSecretsPathTemplate() {
    return usersRotatedSecretsPathTemplate;
  }

  public void setUsersRotatedSecretsPathTemplate(@javax.annotation.Nullable String usersRotatedSecretsPathTemplate) {
    this.usersRotatedSecretsPathTemplate = usersRotatedSecretsPathTemplate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerInventoryPayload serverInventoryPayload = (ServerInventoryPayload) o;
    return Objects.equals(this.autoRotate, serverInventoryPayload.autoRotate) &&
        Objects.equals(this.autoRotateIntervalInDays, serverInventoryPayload.autoRotateIntervalInDays) &&
        Objects.equals(this.autoRotateRotationHour, serverInventoryPayload.autoRotateRotationHour) &&
        Objects.equals(this.enableRdpSra, serverInventoryPayload.enableRdpSra) &&
        Objects.equals(this.migrationTargetId, serverInventoryPayload.migrationTargetId) &&
        Objects.equals(this.serverTargetsPathTemplate, serverInventoryPayload.serverTargetsPathTemplate) &&
        Objects.equals(this.userGroups, serverInventoryPayload.userGroups) &&
        Objects.equals(this.usersIgnoreList, serverInventoryPayload.usersIgnoreList) &&
        Objects.equals(this.usersRotatedSecretsPathTemplate, serverInventoryPayload.usersRotatedSecretsPathTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRotate, autoRotateIntervalInDays, autoRotateRotationHour, enableRdpSra, migrationTargetId, serverTargetsPathTemplate, userGroups, usersIgnoreList, usersRotatedSecretsPathTemplate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerInventoryPayload {\n");
    sb.append("    autoRotate: ").append(toIndentedString(autoRotate)).append("\n");
    sb.append("    autoRotateIntervalInDays: ").append(toIndentedString(autoRotateIntervalInDays)).append("\n");
    sb.append("    autoRotateRotationHour: ").append(toIndentedString(autoRotateRotationHour)).append("\n");
    sb.append("    enableRdpSra: ").append(toIndentedString(enableRdpSra)).append("\n");
    sb.append("    migrationTargetId: ").append(toIndentedString(migrationTargetId)).append("\n");
    sb.append("    serverTargetsPathTemplate: ").append(toIndentedString(serverTargetsPathTemplate)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    usersIgnoreList: ").append(toIndentedString(usersIgnoreList)).append("\n");
    sb.append("    usersRotatedSecretsPathTemplate: ").append(toIndentedString(usersRotatedSecretsPathTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auto_rotate");
    openapiFields.add("auto_rotate_interval_in_days");
    openapiFields.add("auto_rotate_rotation_hour");
    openapiFields.add("enable_rdp_sra");
    openapiFields.add("migration_target_id");
    openapiFields.add("server_targets_path_template");
    openapiFields.add("user_groups");
    openapiFields.add("users_ignore_list");
    openapiFields.add("users_rotated_secrets_path_template");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServerInventoryPayload
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServerInventoryPayload.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServerInventoryPayload is not found in the empty JSON string", ServerInventoryPayload.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServerInventoryPayload.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServerInventoryPayload` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("server_targets_path_template") != null && !jsonObj.get("server_targets_path_template").isJsonNull()) && !jsonObj.get("server_targets_path_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `server_targets_path_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("server_targets_path_template").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("user_groups") != null && !jsonObj.get("user_groups").isJsonNull() && !jsonObj.get("user_groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_groups` to be an array in the JSON string but got `%s`", jsonObj.get("user_groups").toString()));
      }
      if ((jsonObj.get("users_rotated_secrets_path_template") != null && !jsonObj.get("users_rotated_secrets_path_template").isJsonNull()) && !jsonObj.get("users_rotated_secrets_path_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `users_rotated_secrets_path_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("users_rotated_secrets_path_template").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServerInventoryPayload.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServerInventoryPayload' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServerInventoryPayload> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServerInventoryPayload.class));

       return (TypeAdapter<T>) new TypeAdapter<ServerInventoryPayload>() {
           @Override
           public void write(JsonWriter out, ServerInventoryPayload value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServerInventoryPayload read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServerInventoryPayload given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServerInventoryPayload
   * @throws IOException if the JSON string is invalid with respect to ServerInventoryPayload
   */
  public static ServerInventoryPayload fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServerInventoryPayload.class);
  }

  /**
   * Convert an instance of ServerInventoryPayload to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

