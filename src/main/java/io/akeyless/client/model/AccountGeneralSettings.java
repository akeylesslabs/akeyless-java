/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.DataProtectionSection;
import io.akeyless.client.model.DynamicSecretMaxTtl;
import io.akeyless.client.model.PasswordPolicyInfo;
import io.akeyless.client.model.RotationSecretMaxInterval;
import io.akeyless.client.model.SharingPolicyInfo;
import io.akeyless.client.model.UsageEventSetting;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AccountGeneralSettings describes general settings for an account
 */
@ApiModel(description = "AccountGeneralSettings describes general settings for an account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AccountGeneralSettings {
  public static final String SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_ITEM_ID = "account_default_key_item_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_ITEM_ID)
  private Long accountDefaultKeyItemId;

  public static final String SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_NAME = "account_default_key_name";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_NAME)
  private String accountDefaultKeyName;

  public static final String SERIALIZED_NAME_AUTH_USAGE_EVENT = "auth_usage_event";
  @SerializedName(SERIALIZED_NAME_AUTH_USAGE_EVENT)
  private UsageEventSetting authUsageEvent;

  public static final String SERIALIZED_NAME_DATA_PROTECTION_SECTION = "data_protection_section";
  @SerializedName(SERIALIZED_NAME_DATA_PROTECTION_SECTION)
  private DataProtectionSection dataProtectionSection;

  public static final String SERIALIZED_NAME_DYNAMIC_SECRET_MAX_TTL = "dynamic_secret_max_ttl";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_SECRET_MAX_TTL)
  private DynamicSecretMaxTtl dynamicSecretMaxTtl;

  public static final String SERIALIZED_NAME_ENABLE_REQUEST_FOR_ACCESS = "enable_request_for_access";
  @SerializedName(SERIALIZED_NAME_ENABLE_REQUEST_FOR_ACCESS)
  private Boolean enableRequestForAccess;

  public static final String SERIALIZED_NAME_INVALID_CHARACTERS = "invalid_characters";
  @SerializedName(SERIALIZED_NAME_INVALID_CHARACTERS)
  private String invalidCharacters;

  public static final String SERIALIZED_NAME_ITEM_USAGE_EVENT = "item_usage_event";
  @SerializedName(SERIALIZED_NAME_ITEM_USAGE_EVENT)
  private UsageEventSetting itemUsageEvent;

  public static final String SERIALIZED_NAME_LOCK_DEFAULT_KEY = "lock_default_key";
  @SerializedName(SERIALIZED_NAME_LOCK_DEFAULT_KEY)
  private Boolean lockDefaultKey;

  public static final String SERIALIZED_NAME_PASSWORD_POLICY = "password_policy";
  @SerializedName(SERIALIZED_NAME_PASSWORD_POLICY)
  private PasswordPolicyInfo passwordPolicy;

  public static final String SERIALIZED_NAME_PROTECT_ITEMS_BY_DEFAULT = "protect_items_by_default";
  @SerializedName(SERIALIZED_NAME_PROTECT_ITEMS_BY_DEFAULT)
  private Boolean protectItemsByDefault;

  public static final String SERIALIZED_NAME_ROTATION_SECRET_MAX_INTERVAL = "rotation_secret_max_interval";
  @SerializedName(SERIALIZED_NAME_ROTATION_SECRET_MAX_INTERVAL)
  private RotationSecretMaxInterval rotationSecretMaxInterval;

  public static final String SERIALIZED_NAME_SHARING_POLICY = "sharing_policy";
  @SerializedName(SERIALIZED_NAME_SHARING_POLICY)
  private SharingPolicyInfo sharingPolicy;

  public AccountGeneralSettings() { 
  }

  public AccountGeneralSettings accountDefaultKeyItemId(Long accountDefaultKeyItemId) {
    
    this.accountDefaultKeyItemId = accountDefaultKeyItemId;
    return this;
  }

   /**
   * AccountDefaultKeyItemID is the item ID of the DFC key item configured as the default protection key
   * @return accountDefaultKeyItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AccountDefaultKeyItemID is the item ID of the DFC key item configured as the default protection key")

  public Long getAccountDefaultKeyItemId() {
    return accountDefaultKeyItemId;
  }


  public void setAccountDefaultKeyItemId(Long accountDefaultKeyItemId) {
    this.accountDefaultKeyItemId = accountDefaultKeyItemId;
  }


  public AccountGeneralSettings accountDefaultKeyName(String accountDefaultKeyName) {
    
    this.accountDefaultKeyName = accountDefaultKeyName;
    return this;
  }

   /**
   * AccountDefaultKeyName is the name of the DFC key item configured as the default key This is here simply for the response to include the item name in addition to the display ID so the client can properly show this to the user. It will not be saved to the DB, only the AccountDefaultKeyItemID will.
   * @return accountDefaultKeyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "AccountDefaultKeyName is the name of the DFC key item configured as the default key This is here simply for the response to include the item name in addition to the display ID so the client can properly show this to the user. It will not be saved to the DB, only the AccountDefaultKeyItemID will.")

  public String getAccountDefaultKeyName() {
    return accountDefaultKeyName;
  }


  public void setAccountDefaultKeyName(String accountDefaultKeyName) {
    this.accountDefaultKeyName = accountDefaultKeyName;
  }


  public AccountGeneralSettings authUsageEvent(UsageEventSetting authUsageEvent) {
    
    this.authUsageEvent = authUsageEvent;
    return this;
  }

   /**
   * Get authUsageEvent
   * @return authUsageEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UsageEventSetting getAuthUsageEvent() {
    return authUsageEvent;
  }


  public void setAuthUsageEvent(UsageEventSetting authUsageEvent) {
    this.authUsageEvent = authUsageEvent;
  }


  public AccountGeneralSettings dataProtectionSection(DataProtectionSection dataProtectionSection) {
    
    this.dataProtectionSection = dataProtectionSection;
    return this;
  }

   /**
   * Get dataProtectionSection
   * @return dataProtectionSection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataProtectionSection getDataProtectionSection() {
    return dataProtectionSection;
  }


  public void setDataProtectionSection(DataProtectionSection dataProtectionSection) {
    this.dataProtectionSection = dataProtectionSection;
  }


  public AccountGeneralSettings dynamicSecretMaxTtl(DynamicSecretMaxTtl dynamicSecretMaxTtl) {
    
    this.dynamicSecretMaxTtl = dynamicSecretMaxTtl;
    return this;
  }

   /**
   * Get dynamicSecretMaxTtl
   * @return dynamicSecretMaxTtl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DynamicSecretMaxTtl getDynamicSecretMaxTtl() {
    return dynamicSecretMaxTtl;
  }


  public void setDynamicSecretMaxTtl(DynamicSecretMaxTtl dynamicSecretMaxTtl) {
    this.dynamicSecretMaxTtl = dynamicSecretMaxTtl;
  }


  public AccountGeneralSettings enableRequestForAccess(Boolean enableRequestForAccess) {
    
    this.enableRequestForAccess = enableRequestForAccess;
    return this;
  }

   /**
   * Get enableRequestForAccess
   * @return enableRequestForAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnableRequestForAccess() {
    return enableRequestForAccess;
  }


  public void setEnableRequestForAccess(Boolean enableRequestForAccess) {
    this.enableRequestForAccess = enableRequestForAccess;
  }


  public AccountGeneralSettings invalidCharacters(String invalidCharacters) {
    
    this.invalidCharacters = invalidCharacters;
    return this;
  }

   /**
   * InvalidCharacters is the invalid characters for items/targets/roles/auths/notifier_forwarder naming convention
   * @return invalidCharacters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "InvalidCharacters is the invalid characters for items/targets/roles/auths/notifier_forwarder naming convention")

  public String getInvalidCharacters() {
    return invalidCharacters;
  }


  public void setInvalidCharacters(String invalidCharacters) {
    this.invalidCharacters = invalidCharacters;
  }


  public AccountGeneralSettings itemUsageEvent(UsageEventSetting itemUsageEvent) {
    
    this.itemUsageEvent = itemUsageEvent;
    return this;
  }

   /**
   * Get itemUsageEvent
   * @return itemUsageEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UsageEventSetting getItemUsageEvent() {
    return itemUsageEvent;
  }


  public void setItemUsageEvent(UsageEventSetting itemUsageEvent) {
    this.itemUsageEvent = itemUsageEvent;
  }


  public AccountGeneralSettings lockDefaultKey(Boolean lockDefaultKey) {
    
    this.lockDefaultKey = lockDefaultKey;
    return this;
  }

   /**
   * LockDefaultKey determines whether the configured default key can be updated by end-users on a per-request basis true - all requests use the configured default key false - every request can determine its protection key (default) nil - change nothing (every request can determine its protection key (default)) This parameter is only relevant if AccountDefaultKeyItemID is not empty
   * @return lockDefaultKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LockDefaultKey determines whether the configured default key can be updated by end-users on a per-request basis true - all requests use the configured default key false - every request can determine its protection key (default) nil - change nothing (every request can determine its protection key (default)) This parameter is only relevant if AccountDefaultKeyItemID is not empty")

  public Boolean getLockDefaultKey() {
    return lockDefaultKey;
  }


  public void setLockDefaultKey(Boolean lockDefaultKey) {
    this.lockDefaultKey = lockDefaultKey;
  }


  public AccountGeneralSettings passwordPolicy(PasswordPolicyInfo passwordPolicy) {
    
    this.passwordPolicy = passwordPolicy;
    return this;
  }

   /**
   * Get passwordPolicy
   * @return passwordPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PasswordPolicyInfo getPasswordPolicy() {
    return passwordPolicy;
  }


  public void setPasswordPolicy(PasswordPolicyInfo passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
  }


  public AccountGeneralSettings protectItemsByDefault(Boolean protectItemsByDefault) {
    
    this.protectItemsByDefault = protectItemsByDefault;
    return this;
  }

   /**
   * Get protectItemsByDefault
   * @return protectItemsByDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getProtectItemsByDefault() {
    return protectItemsByDefault;
  }


  public void setProtectItemsByDefault(Boolean protectItemsByDefault) {
    this.protectItemsByDefault = protectItemsByDefault;
  }


  public AccountGeneralSettings rotationSecretMaxInterval(RotationSecretMaxInterval rotationSecretMaxInterval) {
    
    this.rotationSecretMaxInterval = rotationSecretMaxInterval;
    return this;
  }

   /**
   * Get rotationSecretMaxInterval
   * @return rotationSecretMaxInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RotationSecretMaxInterval getRotationSecretMaxInterval() {
    return rotationSecretMaxInterval;
  }


  public void setRotationSecretMaxInterval(RotationSecretMaxInterval rotationSecretMaxInterval) {
    this.rotationSecretMaxInterval = rotationSecretMaxInterval;
  }


  public AccountGeneralSettings sharingPolicy(SharingPolicyInfo sharingPolicy) {
    
    this.sharingPolicy = sharingPolicy;
    return this;
  }

   /**
   * Get sharingPolicy
   * @return sharingPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SharingPolicyInfo getSharingPolicy() {
    return sharingPolicy;
  }


  public void setSharingPolicy(SharingPolicyInfo sharingPolicy) {
    this.sharingPolicy = sharingPolicy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountGeneralSettings accountGeneralSettings = (AccountGeneralSettings) o;
    return Objects.equals(this.accountDefaultKeyItemId, accountGeneralSettings.accountDefaultKeyItemId) &&
        Objects.equals(this.accountDefaultKeyName, accountGeneralSettings.accountDefaultKeyName) &&
        Objects.equals(this.authUsageEvent, accountGeneralSettings.authUsageEvent) &&
        Objects.equals(this.dataProtectionSection, accountGeneralSettings.dataProtectionSection) &&
        Objects.equals(this.dynamicSecretMaxTtl, accountGeneralSettings.dynamicSecretMaxTtl) &&
        Objects.equals(this.enableRequestForAccess, accountGeneralSettings.enableRequestForAccess) &&
        Objects.equals(this.invalidCharacters, accountGeneralSettings.invalidCharacters) &&
        Objects.equals(this.itemUsageEvent, accountGeneralSettings.itemUsageEvent) &&
        Objects.equals(this.lockDefaultKey, accountGeneralSettings.lockDefaultKey) &&
        Objects.equals(this.passwordPolicy, accountGeneralSettings.passwordPolicy) &&
        Objects.equals(this.protectItemsByDefault, accountGeneralSettings.protectItemsByDefault) &&
        Objects.equals(this.rotationSecretMaxInterval, accountGeneralSettings.rotationSecretMaxInterval) &&
        Objects.equals(this.sharingPolicy, accountGeneralSettings.sharingPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountDefaultKeyItemId, accountDefaultKeyName, authUsageEvent, dataProtectionSection, dynamicSecretMaxTtl, enableRequestForAccess, invalidCharacters, itemUsageEvent, lockDefaultKey, passwordPolicy, protectItemsByDefault, rotationSecretMaxInterval, sharingPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountGeneralSettings {\n");
    sb.append("    accountDefaultKeyItemId: ").append(toIndentedString(accountDefaultKeyItemId)).append("\n");
    sb.append("    accountDefaultKeyName: ").append(toIndentedString(accountDefaultKeyName)).append("\n");
    sb.append("    authUsageEvent: ").append(toIndentedString(authUsageEvent)).append("\n");
    sb.append("    dataProtectionSection: ").append(toIndentedString(dataProtectionSection)).append("\n");
    sb.append("    dynamicSecretMaxTtl: ").append(toIndentedString(dynamicSecretMaxTtl)).append("\n");
    sb.append("    enableRequestForAccess: ").append(toIndentedString(enableRequestForAccess)).append("\n");
    sb.append("    invalidCharacters: ").append(toIndentedString(invalidCharacters)).append("\n");
    sb.append("    itemUsageEvent: ").append(toIndentedString(itemUsageEvent)).append("\n");
    sb.append("    lockDefaultKey: ").append(toIndentedString(lockDefaultKey)).append("\n");
    sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
    sb.append("    protectItemsByDefault: ").append(toIndentedString(protectItemsByDefault)).append("\n");
    sb.append("    rotationSecretMaxInterval: ").append(toIndentedString(rotationSecretMaxInterval)).append("\n");
    sb.append("    sharingPolicy: ").append(toIndentedString(sharingPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

