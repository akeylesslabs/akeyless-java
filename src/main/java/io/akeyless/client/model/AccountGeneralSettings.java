/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.AllowedIpSettings;
import io.akeyless.client.model.DataProtectionSection;
import io.akeyless.client.model.DefaultHomePage;
import io.akeyless.client.model.DynamicSecretMaxTtl;
import io.akeyless.client.model.PasswordExpirationInfo;
import io.akeyless.client.model.PasswordPolicyInfo;
import io.akeyless.client.model.PasswordScoreSetting;
import io.akeyless.client.model.RotationSecretMaxInterval;
import io.akeyless.client.model.SharingPolicyInfo;
import io.akeyless.client.model.UsageEventSetting;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * AccountGeneralSettings describes general settings for an account
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class AccountGeneralSettings {
  public static final String SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_ITEM_ID = "account_default_key_item_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_ITEM_ID)
  @javax.annotation.Nullable
  private Long accountDefaultKeyItemId;

  public static final String SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_NAME = "account_default_key_name";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DEFAULT_KEY_NAME)
  @javax.annotation.Nullable
  private String accountDefaultKeyName;

  public static final String SERIALIZED_NAME_ALLOWED_CLIENTS_IPS = "allowed_clients_ips";
  @SerializedName(SERIALIZED_NAME_ALLOWED_CLIENTS_IPS)
  @javax.annotation.Nullable
  private AllowedIpSettings allowedClientsIps;

  public static final String SERIALIZED_NAME_ALLOWED_GATEWAYS_IPS = "allowed_gateways_ips";
  @SerializedName(SERIALIZED_NAME_ALLOWED_GATEWAYS_IPS)
  @javax.annotation.Nullable
  private AllowedIpSettings allowedGatewaysIps;

  public static final String SERIALIZED_NAME_AUTH_USAGE_EVENT = "auth_usage_event";
  @SerializedName(SERIALIZED_NAME_AUTH_USAGE_EVENT)
  @javax.annotation.Nullable
  private UsageEventSetting authUsageEvent;

  public static final String SERIALIZED_NAME_DATA_PROTECTION_SECTION = "data_protection_section";
  @SerializedName(SERIALIZED_NAME_DATA_PROTECTION_SECTION)
  @javax.annotation.Nullable
  private DataProtectionSection dataProtectionSection;

  public static final String SERIALIZED_NAME_DEFAULT_HOME_PAGE = "default_home_page";
  @SerializedName(SERIALIZED_NAME_DEFAULT_HOME_PAGE)
  @javax.annotation.Nullable
  private DefaultHomePage defaultHomePage;

  public static final String SERIALIZED_NAME_DYNAMIC_SECRET_MAX_TTL = "dynamic_secret_max_ttl";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_SECRET_MAX_TTL)
  @javax.annotation.Nullable
  private DynamicSecretMaxTtl dynamicSecretMaxTtl;

  public static final String SERIALIZED_NAME_ENABLE_REQUEST_FOR_ACCESS = "enable_request_for_access";
  @SerializedName(SERIALIZED_NAME_ENABLE_REQUEST_FOR_ACCESS)
  @javax.annotation.Nullable
  private Boolean enableRequestForAccess;

  public static final String SERIALIZED_NAME_INVALID_CHARACTERS = "invalid_characters";
  @SerializedName(SERIALIZED_NAME_INVALID_CHARACTERS)
  @javax.annotation.Nullable
  private String invalidCharacters;

  public static final String SERIALIZED_NAME_ITEM_USAGE_EVENT = "item_usage_event";
  @SerializedName(SERIALIZED_NAME_ITEM_USAGE_EVENT)
  @javax.annotation.Nullable
  private UsageEventSetting itemUsageEvent;

  public static final String SERIALIZED_NAME_LOCK_DEFAULT_KEY = "lock_default_key";
  @SerializedName(SERIALIZED_NAME_LOCK_DEFAULT_KEY)
  @javax.annotation.Nullable
  private Boolean lockDefaultKey;

  public static final String SERIALIZED_NAME_PASSWORD_EXPIRATION_INFO = "password_expiration_info";
  @SerializedName(SERIALIZED_NAME_PASSWORD_EXPIRATION_INFO)
  @javax.annotation.Nullable
  private PasswordExpirationInfo passwordExpirationInfo;

  public static final String SERIALIZED_NAME_PASSWORD_POLICY = "password_policy";
  @SerializedName(SERIALIZED_NAME_PASSWORD_POLICY)
  @javax.annotation.Nullable
  private PasswordPolicyInfo passwordPolicy;

  public static final String SERIALIZED_NAME_PASSWORD_SCORE = "password_score";
  @SerializedName(SERIALIZED_NAME_PASSWORD_SCORE)
  @javax.annotation.Nullable
  private PasswordScoreSetting passwordScore;

  public static final String SERIALIZED_NAME_PROTECT_ITEMS_BY_DEFAULT = "protect_items_by_default";
  @SerializedName(SERIALIZED_NAME_PROTECT_ITEMS_BY_DEFAULT)
  @javax.annotation.Nullable
  private Boolean protectItemsByDefault;

  public static final String SERIALIZED_NAME_ROTATION_SECRET_MAX_INTERVAL = "rotation_secret_max_interval";
  @SerializedName(SERIALIZED_NAME_ROTATION_SECRET_MAX_INTERVAL)
  @javax.annotation.Nullable
  private RotationSecretMaxInterval rotationSecretMaxInterval;

  public static final String SERIALIZED_NAME_SHARING_POLICY = "sharing_policy";
  @SerializedName(SERIALIZED_NAME_SHARING_POLICY)
  @javax.annotation.Nullable
  private SharingPolicyInfo sharingPolicy;

  public AccountGeneralSettings() {
  }

  public AccountGeneralSettings accountDefaultKeyItemId(@javax.annotation.Nullable Long accountDefaultKeyItemId) {
    this.accountDefaultKeyItemId = accountDefaultKeyItemId;
    return this;
  }

  /**
   * AccountDefaultKeyItemID is the item ID of the DFC key item configured as the default protection key
   * @return accountDefaultKeyItemId
   */
  @javax.annotation.Nullable
  public Long getAccountDefaultKeyItemId() {
    return accountDefaultKeyItemId;
  }

  public void setAccountDefaultKeyItemId(@javax.annotation.Nullable Long accountDefaultKeyItemId) {
    this.accountDefaultKeyItemId = accountDefaultKeyItemId;
  }


  public AccountGeneralSettings accountDefaultKeyName(@javax.annotation.Nullable String accountDefaultKeyName) {
    this.accountDefaultKeyName = accountDefaultKeyName;
    return this;
  }

  /**
   * AccountDefaultKeyName is the name of the DFC key item configured as the default key This is here simply for the response to include the item name in addition to the display ID so the client can properly show this to the user. It will not be saved to the DB, only the AccountDefaultKeyItemID will.
   * @return accountDefaultKeyName
   */
  @javax.annotation.Nullable
  public String getAccountDefaultKeyName() {
    return accountDefaultKeyName;
  }

  public void setAccountDefaultKeyName(@javax.annotation.Nullable String accountDefaultKeyName) {
    this.accountDefaultKeyName = accountDefaultKeyName;
  }


  public AccountGeneralSettings allowedClientsIps(@javax.annotation.Nullable AllowedIpSettings allowedClientsIps) {
    this.allowedClientsIps = allowedClientsIps;
    return this;
  }

  /**
   * Get allowedClientsIps
   * @return allowedClientsIps
   */
  @javax.annotation.Nullable
  public AllowedIpSettings getAllowedClientsIps() {
    return allowedClientsIps;
  }

  public void setAllowedClientsIps(@javax.annotation.Nullable AllowedIpSettings allowedClientsIps) {
    this.allowedClientsIps = allowedClientsIps;
  }


  public AccountGeneralSettings allowedGatewaysIps(@javax.annotation.Nullable AllowedIpSettings allowedGatewaysIps) {
    this.allowedGatewaysIps = allowedGatewaysIps;
    return this;
  }

  /**
   * Get allowedGatewaysIps
   * @return allowedGatewaysIps
   */
  @javax.annotation.Nullable
  public AllowedIpSettings getAllowedGatewaysIps() {
    return allowedGatewaysIps;
  }

  public void setAllowedGatewaysIps(@javax.annotation.Nullable AllowedIpSettings allowedGatewaysIps) {
    this.allowedGatewaysIps = allowedGatewaysIps;
  }


  public AccountGeneralSettings authUsageEvent(@javax.annotation.Nullable UsageEventSetting authUsageEvent) {
    this.authUsageEvent = authUsageEvent;
    return this;
  }

  /**
   * Get authUsageEvent
   * @return authUsageEvent
   */
  @javax.annotation.Nullable
  public UsageEventSetting getAuthUsageEvent() {
    return authUsageEvent;
  }

  public void setAuthUsageEvent(@javax.annotation.Nullable UsageEventSetting authUsageEvent) {
    this.authUsageEvent = authUsageEvent;
  }


  public AccountGeneralSettings dataProtectionSection(@javax.annotation.Nullable DataProtectionSection dataProtectionSection) {
    this.dataProtectionSection = dataProtectionSection;
    return this;
  }

  /**
   * Get dataProtectionSection
   * @return dataProtectionSection
   */
  @javax.annotation.Nullable
  public DataProtectionSection getDataProtectionSection() {
    return dataProtectionSection;
  }

  public void setDataProtectionSection(@javax.annotation.Nullable DataProtectionSection dataProtectionSection) {
    this.dataProtectionSection = dataProtectionSection;
  }


  public AccountGeneralSettings defaultHomePage(@javax.annotation.Nullable DefaultHomePage defaultHomePage) {
    this.defaultHomePage = defaultHomePage;
    return this;
  }

  /**
   * Get defaultHomePage
   * @return defaultHomePage
   */
  @javax.annotation.Nullable
  public DefaultHomePage getDefaultHomePage() {
    return defaultHomePage;
  }

  public void setDefaultHomePage(@javax.annotation.Nullable DefaultHomePage defaultHomePage) {
    this.defaultHomePage = defaultHomePage;
  }


  public AccountGeneralSettings dynamicSecretMaxTtl(@javax.annotation.Nullable DynamicSecretMaxTtl dynamicSecretMaxTtl) {
    this.dynamicSecretMaxTtl = dynamicSecretMaxTtl;
    return this;
  }

  /**
   * Get dynamicSecretMaxTtl
   * @return dynamicSecretMaxTtl
   */
  @javax.annotation.Nullable
  public DynamicSecretMaxTtl getDynamicSecretMaxTtl() {
    return dynamicSecretMaxTtl;
  }

  public void setDynamicSecretMaxTtl(@javax.annotation.Nullable DynamicSecretMaxTtl dynamicSecretMaxTtl) {
    this.dynamicSecretMaxTtl = dynamicSecretMaxTtl;
  }


  public AccountGeneralSettings enableRequestForAccess(@javax.annotation.Nullable Boolean enableRequestForAccess) {
    this.enableRequestForAccess = enableRequestForAccess;
    return this;
  }

  /**
   * Get enableRequestForAccess
   * @return enableRequestForAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableRequestForAccess() {
    return enableRequestForAccess;
  }

  public void setEnableRequestForAccess(@javax.annotation.Nullable Boolean enableRequestForAccess) {
    this.enableRequestForAccess = enableRequestForAccess;
  }


  public AccountGeneralSettings invalidCharacters(@javax.annotation.Nullable String invalidCharacters) {
    this.invalidCharacters = invalidCharacters;
    return this;
  }

  /**
   * InvalidCharacters is the invalid characters for items/targets/roles/auths/notifier_forwarder naming convention
   * @return invalidCharacters
   */
  @javax.annotation.Nullable
  public String getInvalidCharacters() {
    return invalidCharacters;
  }

  public void setInvalidCharacters(@javax.annotation.Nullable String invalidCharacters) {
    this.invalidCharacters = invalidCharacters;
  }


  public AccountGeneralSettings itemUsageEvent(@javax.annotation.Nullable UsageEventSetting itemUsageEvent) {
    this.itemUsageEvent = itemUsageEvent;
    return this;
  }

  /**
   * Get itemUsageEvent
   * @return itemUsageEvent
   */
  @javax.annotation.Nullable
  public UsageEventSetting getItemUsageEvent() {
    return itemUsageEvent;
  }

  public void setItemUsageEvent(@javax.annotation.Nullable UsageEventSetting itemUsageEvent) {
    this.itemUsageEvent = itemUsageEvent;
  }


  public AccountGeneralSettings lockDefaultKey(@javax.annotation.Nullable Boolean lockDefaultKey) {
    this.lockDefaultKey = lockDefaultKey;
    return this;
  }

  /**
   * LockDefaultKey determines whether the configured default key can be updated by end-users on a per-request basis true - all requests use the configured default key false - every request can determine its protection key (default) nil - change nothing (every request can determine its protection key (default)) This parameter is only relevant if AccountDefaultKeyItemID is not empty
   * @return lockDefaultKey
   */
  @javax.annotation.Nullable
  public Boolean getLockDefaultKey() {
    return lockDefaultKey;
  }

  public void setLockDefaultKey(@javax.annotation.Nullable Boolean lockDefaultKey) {
    this.lockDefaultKey = lockDefaultKey;
  }


  public AccountGeneralSettings passwordExpirationInfo(@javax.annotation.Nullable PasswordExpirationInfo passwordExpirationInfo) {
    this.passwordExpirationInfo = passwordExpirationInfo;
    return this;
  }

  /**
   * Get passwordExpirationInfo
   * @return passwordExpirationInfo
   */
  @javax.annotation.Nullable
  public PasswordExpirationInfo getPasswordExpirationInfo() {
    return passwordExpirationInfo;
  }

  public void setPasswordExpirationInfo(@javax.annotation.Nullable PasswordExpirationInfo passwordExpirationInfo) {
    this.passwordExpirationInfo = passwordExpirationInfo;
  }


  public AccountGeneralSettings passwordPolicy(@javax.annotation.Nullable PasswordPolicyInfo passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
    return this;
  }

  /**
   * Get passwordPolicy
   * @return passwordPolicy
   */
  @javax.annotation.Nullable
  public PasswordPolicyInfo getPasswordPolicy() {
    return passwordPolicy;
  }

  public void setPasswordPolicy(@javax.annotation.Nullable PasswordPolicyInfo passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
  }


  public AccountGeneralSettings passwordScore(@javax.annotation.Nullable PasswordScoreSetting passwordScore) {
    this.passwordScore = passwordScore;
    return this;
  }

  /**
   * Get passwordScore
   * @return passwordScore
   */
  @javax.annotation.Nullable
  public PasswordScoreSetting getPasswordScore() {
    return passwordScore;
  }

  public void setPasswordScore(@javax.annotation.Nullable PasswordScoreSetting passwordScore) {
    this.passwordScore = passwordScore;
  }


  public AccountGeneralSettings protectItemsByDefault(@javax.annotation.Nullable Boolean protectItemsByDefault) {
    this.protectItemsByDefault = protectItemsByDefault;
    return this;
  }

  /**
   * Get protectItemsByDefault
   * @return protectItemsByDefault
   */
  @javax.annotation.Nullable
  public Boolean getProtectItemsByDefault() {
    return protectItemsByDefault;
  }

  public void setProtectItemsByDefault(@javax.annotation.Nullable Boolean protectItemsByDefault) {
    this.protectItemsByDefault = protectItemsByDefault;
  }


  public AccountGeneralSettings rotationSecretMaxInterval(@javax.annotation.Nullable RotationSecretMaxInterval rotationSecretMaxInterval) {
    this.rotationSecretMaxInterval = rotationSecretMaxInterval;
    return this;
  }

  /**
   * Get rotationSecretMaxInterval
   * @return rotationSecretMaxInterval
   */
  @javax.annotation.Nullable
  public RotationSecretMaxInterval getRotationSecretMaxInterval() {
    return rotationSecretMaxInterval;
  }

  public void setRotationSecretMaxInterval(@javax.annotation.Nullable RotationSecretMaxInterval rotationSecretMaxInterval) {
    this.rotationSecretMaxInterval = rotationSecretMaxInterval;
  }


  public AccountGeneralSettings sharingPolicy(@javax.annotation.Nullable SharingPolicyInfo sharingPolicy) {
    this.sharingPolicy = sharingPolicy;
    return this;
  }

  /**
   * Get sharingPolicy
   * @return sharingPolicy
   */
  @javax.annotation.Nullable
  public SharingPolicyInfo getSharingPolicy() {
    return sharingPolicy;
  }

  public void setSharingPolicy(@javax.annotation.Nullable SharingPolicyInfo sharingPolicy) {
    this.sharingPolicy = sharingPolicy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountGeneralSettings accountGeneralSettings = (AccountGeneralSettings) o;
    return Objects.equals(this.accountDefaultKeyItemId, accountGeneralSettings.accountDefaultKeyItemId) &&
        Objects.equals(this.accountDefaultKeyName, accountGeneralSettings.accountDefaultKeyName) &&
        Objects.equals(this.allowedClientsIps, accountGeneralSettings.allowedClientsIps) &&
        Objects.equals(this.allowedGatewaysIps, accountGeneralSettings.allowedGatewaysIps) &&
        Objects.equals(this.authUsageEvent, accountGeneralSettings.authUsageEvent) &&
        Objects.equals(this.dataProtectionSection, accountGeneralSettings.dataProtectionSection) &&
        Objects.equals(this.defaultHomePage, accountGeneralSettings.defaultHomePage) &&
        Objects.equals(this.dynamicSecretMaxTtl, accountGeneralSettings.dynamicSecretMaxTtl) &&
        Objects.equals(this.enableRequestForAccess, accountGeneralSettings.enableRequestForAccess) &&
        Objects.equals(this.invalidCharacters, accountGeneralSettings.invalidCharacters) &&
        Objects.equals(this.itemUsageEvent, accountGeneralSettings.itemUsageEvent) &&
        Objects.equals(this.lockDefaultKey, accountGeneralSettings.lockDefaultKey) &&
        Objects.equals(this.passwordExpirationInfo, accountGeneralSettings.passwordExpirationInfo) &&
        Objects.equals(this.passwordPolicy, accountGeneralSettings.passwordPolicy) &&
        Objects.equals(this.passwordScore, accountGeneralSettings.passwordScore) &&
        Objects.equals(this.protectItemsByDefault, accountGeneralSettings.protectItemsByDefault) &&
        Objects.equals(this.rotationSecretMaxInterval, accountGeneralSettings.rotationSecretMaxInterval) &&
        Objects.equals(this.sharingPolicy, accountGeneralSettings.sharingPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountDefaultKeyItemId, accountDefaultKeyName, allowedClientsIps, allowedGatewaysIps, authUsageEvent, dataProtectionSection, defaultHomePage, dynamicSecretMaxTtl, enableRequestForAccess, invalidCharacters, itemUsageEvent, lockDefaultKey, passwordExpirationInfo, passwordPolicy, passwordScore, protectItemsByDefault, rotationSecretMaxInterval, sharingPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountGeneralSettings {\n");
    sb.append("    accountDefaultKeyItemId: ").append(toIndentedString(accountDefaultKeyItemId)).append("\n");
    sb.append("    accountDefaultKeyName: ").append(toIndentedString(accountDefaultKeyName)).append("\n");
    sb.append("    allowedClientsIps: ").append(toIndentedString(allowedClientsIps)).append("\n");
    sb.append("    allowedGatewaysIps: ").append(toIndentedString(allowedGatewaysIps)).append("\n");
    sb.append("    authUsageEvent: ").append(toIndentedString(authUsageEvent)).append("\n");
    sb.append("    dataProtectionSection: ").append(toIndentedString(dataProtectionSection)).append("\n");
    sb.append("    defaultHomePage: ").append(toIndentedString(defaultHomePage)).append("\n");
    sb.append("    dynamicSecretMaxTtl: ").append(toIndentedString(dynamicSecretMaxTtl)).append("\n");
    sb.append("    enableRequestForAccess: ").append(toIndentedString(enableRequestForAccess)).append("\n");
    sb.append("    invalidCharacters: ").append(toIndentedString(invalidCharacters)).append("\n");
    sb.append("    itemUsageEvent: ").append(toIndentedString(itemUsageEvent)).append("\n");
    sb.append("    lockDefaultKey: ").append(toIndentedString(lockDefaultKey)).append("\n");
    sb.append("    passwordExpirationInfo: ").append(toIndentedString(passwordExpirationInfo)).append("\n");
    sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
    sb.append("    passwordScore: ").append(toIndentedString(passwordScore)).append("\n");
    sb.append("    protectItemsByDefault: ").append(toIndentedString(protectItemsByDefault)).append("\n");
    sb.append("    rotationSecretMaxInterval: ").append(toIndentedString(rotationSecretMaxInterval)).append("\n");
    sb.append("    sharingPolicy: ").append(toIndentedString(sharingPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_default_key_item_id");
    openapiFields.add("account_default_key_name");
    openapiFields.add("allowed_clients_ips");
    openapiFields.add("allowed_gateways_ips");
    openapiFields.add("auth_usage_event");
    openapiFields.add("data_protection_section");
    openapiFields.add("default_home_page");
    openapiFields.add("dynamic_secret_max_ttl");
    openapiFields.add("enable_request_for_access");
    openapiFields.add("invalid_characters");
    openapiFields.add("item_usage_event");
    openapiFields.add("lock_default_key");
    openapiFields.add("password_expiration_info");
    openapiFields.add("password_policy");
    openapiFields.add("password_score");
    openapiFields.add("protect_items_by_default");
    openapiFields.add("rotation_secret_max_interval");
    openapiFields.add("sharing_policy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountGeneralSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountGeneralSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountGeneralSettings is not found in the empty JSON string", AccountGeneralSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountGeneralSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountGeneralSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_default_key_name") != null && !jsonObj.get("account_default_key_name").isJsonNull()) && !jsonObj.get("account_default_key_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_default_key_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_default_key_name").toString()));
      }
      // validate the optional field `allowed_clients_ips`
      if (jsonObj.get("allowed_clients_ips") != null && !jsonObj.get("allowed_clients_ips").isJsonNull()) {
        AllowedIpSettings.validateJsonElement(jsonObj.get("allowed_clients_ips"));
      }
      // validate the optional field `allowed_gateways_ips`
      if (jsonObj.get("allowed_gateways_ips") != null && !jsonObj.get("allowed_gateways_ips").isJsonNull()) {
        AllowedIpSettings.validateJsonElement(jsonObj.get("allowed_gateways_ips"));
      }
      // validate the optional field `auth_usage_event`
      if (jsonObj.get("auth_usage_event") != null && !jsonObj.get("auth_usage_event").isJsonNull()) {
        UsageEventSetting.validateJsonElement(jsonObj.get("auth_usage_event"));
      }
      // validate the optional field `data_protection_section`
      if (jsonObj.get("data_protection_section") != null && !jsonObj.get("data_protection_section").isJsonNull()) {
        DataProtectionSection.validateJsonElement(jsonObj.get("data_protection_section"));
      }
      // validate the optional field `default_home_page`
      if (jsonObj.get("default_home_page") != null && !jsonObj.get("default_home_page").isJsonNull()) {
        DefaultHomePage.validateJsonElement(jsonObj.get("default_home_page"));
      }
      // validate the optional field `dynamic_secret_max_ttl`
      if (jsonObj.get("dynamic_secret_max_ttl") != null && !jsonObj.get("dynamic_secret_max_ttl").isJsonNull()) {
        DynamicSecretMaxTtl.validateJsonElement(jsonObj.get("dynamic_secret_max_ttl"));
      }
      if ((jsonObj.get("invalid_characters") != null && !jsonObj.get("invalid_characters").isJsonNull()) && !jsonObj.get("invalid_characters").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invalid_characters` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invalid_characters").toString()));
      }
      // validate the optional field `item_usage_event`
      if (jsonObj.get("item_usage_event") != null && !jsonObj.get("item_usage_event").isJsonNull()) {
        UsageEventSetting.validateJsonElement(jsonObj.get("item_usage_event"));
      }
      // validate the optional field `password_expiration_info`
      if (jsonObj.get("password_expiration_info") != null && !jsonObj.get("password_expiration_info").isJsonNull()) {
        PasswordExpirationInfo.validateJsonElement(jsonObj.get("password_expiration_info"));
      }
      // validate the optional field `password_policy`
      if (jsonObj.get("password_policy") != null && !jsonObj.get("password_policy").isJsonNull()) {
        PasswordPolicyInfo.validateJsonElement(jsonObj.get("password_policy"));
      }
      // validate the optional field `password_score`
      if (jsonObj.get("password_score") != null && !jsonObj.get("password_score").isJsonNull()) {
        PasswordScoreSetting.validateJsonElement(jsonObj.get("password_score"));
      }
      // validate the optional field `rotation_secret_max_interval`
      if (jsonObj.get("rotation_secret_max_interval") != null && !jsonObj.get("rotation_secret_max_interval").isJsonNull()) {
        RotationSecretMaxInterval.validateJsonElement(jsonObj.get("rotation_secret_max_interval"));
      }
      // validate the optional field `sharing_policy`
      if (jsonObj.get("sharing_policy") != null && !jsonObj.get("sharing_policy").isJsonNull()) {
        SharingPolicyInfo.validateJsonElement(jsonObj.get("sharing_policy"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountGeneralSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountGeneralSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountGeneralSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountGeneralSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountGeneralSettings>() {
           @Override
           public void write(JsonWriter out, AccountGeneralSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountGeneralSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountGeneralSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountGeneralSettings
   * @throws IOException if the JSON string is invalid with respect to AccountGeneralSettings
   */
  public static AccountGeneralSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountGeneralSettings.class);
  }

  /**
   * Convert an instance of AccountGeneralSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

