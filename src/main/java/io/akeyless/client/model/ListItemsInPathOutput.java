/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.Item;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ListItemsInPathOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ListItemsInPathOutput {
  public static final String SERIALIZED_NAME_FOLDERS = "folders";
  @SerializedName(SERIALIZED_NAME_FOLDERS)
  private List<String> folders = null;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<Item> items = null;

  public static final String SERIALIZED_NAME_NEXT_PAGE = "next_page";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE)
  private String nextPage;

  public ListItemsInPathOutput() { 
  }

  public ListItemsInPathOutput folders(List<String> folders) {
    
    this.folders = folders;
    return this;
  }

  public ListItemsInPathOutput addFoldersItem(String foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<String>();
    }
    this.folders.add(foldersItem);
    return this;
  }

   /**
   * Get folders
   * @return folders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getFolders() {
    return folders;
  }


  public void setFolders(List<String> folders) {
    this.folders = folders;
  }


  public ListItemsInPathOutput items(List<Item> items) {
    
    this.items = items;
    return this;
  }

  public ListItemsInPathOutput addItemsItem(Item itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<Item>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Item> getItems() {
    return items;
  }


  public void setItems(List<Item> items) {
    this.items = items;
  }


  public ListItemsInPathOutput nextPage(String nextPage) {
    
    this.nextPage = nextPage;
    return this;
  }

   /**
   * Get nextPage
   * @return nextPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNextPage() {
    return nextPage;
  }


  public void setNextPage(String nextPage) {
    this.nextPage = nextPage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListItemsInPathOutput listItemsInPathOutput = (ListItemsInPathOutput) o;
    return Objects.equals(this.folders, listItemsInPathOutput.folders) &&
        Objects.equals(this.items, listItemsInPathOutput.items) &&
        Objects.equals(this.nextPage, listItemsInPathOutput.nextPage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(folders, items, nextPage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListItemsInPathOutput {\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    nextPage: ").append(toIndentedString(nextPage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

