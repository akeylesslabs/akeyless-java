/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ChefTargetDetails
 */
@ApiModel(description = "ChefTargetDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ChefTargetDetails {
  public static final String SERIALIZED_NAME_CHEF_SERVER_HOST_NAME = "chef_server_host_name";
  @SerializedName(SERIALIZED_NAME_CHEF_SERVER_HOST_NAME)
  private String chefServerHostName;

  public static final String SERIALIZED_NAME_CHEF_SERVER_KEY = "chef_server_key";
  @SerializedName(SERIALIZED_NAME_CHEF_SERVER_KEY)
  private String chefServerKey;

  public static final String SERIALIZED_NAME_CHEF_SERVER_PORT = "chef_server_port";
  @SerializedName(SERIALIZED_NAME_CHEF_SERVER_PORT)
  private String chefServerPort;

  public static final String SERIALIZED_NAME_CHEF_SERVER_URL = "chef_server_url";
  @SerializedName(SERIALIZED_NAME_CHEF_SERVER_URL)
  private String chefServerUrl;

  public static final String SERIALIZED_NAME_CHEF_SERVER_USERNAME = "chef_server_username";
  @SerializedName(SERIALIZED_NAME_CHEF_SERVER_USERNAME)
  private String chefServerUsername;

  public static final String SERIALIZED_NAME_CHEF_SKIP_SSL = "chef_skip_ssl";
  @SerializedName(SERIALIZED_NAME_CHEF_SKIP_SSL)
  private Boolean chefSkipSsl;

  public ChefTargetDetails() { 
  }

  public ChefTargetDetails chefServerHostName(String chefServerHostName) {
    
    this.chefServerHostName = chefServerHostName;
    return this;
  }

   /**
   * Get chefServerHostName
   * @return chefServerHostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefServerHostName() {
    return chefServerHostName;
  }


  public void setChefServerHostName(String chefServerHostName) {
    this.chefServerHostName = chefServerHostName;
  }


  public ChefTargetDetails chefServerKey(String chefServerKey) {
    
    this.chefServerKey = chefServerKey;
    return this;
  }

   /**
   * Get chefServerKey
   * @return chefServerKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefServerKey() {
    return chefServerKey;
  }


  public void setChefServerKey(String chefServerKey) {
    this.chefServerKey = chefServerKey;
  }


  public ChefTargetDetails chefServerPort(String chefServerPort) {
    
    this.chefServerPort = chefServerPort;
    return this;
  }

   /**
   * Get chefServerPort
   * @return chefServerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefServerPort() {
    return chefServerPort;
  }


  public void setChefServerPort(String chefServerPort) {
    this.chefServerPort = chefServerPort;
  }


  public ChefTargetDetails chefServerUrl(String chefServerUrl) {
    
    this.chefServerUrl = chefServerUrl;
    return this;
  }

   /**
   * Get chefServerUrl
   * @return chefServerUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefServerUrl() {
    return chefServerUrl;
  }


  public void setChefServerUrl(String chefServerUrl) {
    this.chefServerUrl = chefServerUrl;
  }


  public ChefTargetDetails chefServerUsername(String chefServerUsername) {
    
    this.chefServerUsername = chefServerUsername;
    return this;
  }

   /**
   * Get chefServerUsername
   * @return chefServerUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefServerUsername() {
    return chefServerUsername;
  }


  public void setChefServerUsername(String chefServerUsername) {
    this.chefServerUsername = chefServerUsername;
  }


  public ChefTargetDetails chefSkipSsl(Boolean chefSkipSsl) {
    
    this.chefSkipSsl = chefSkipSsl;
    return this;
  }

   /**
   * Get chefSkipSsl
   * @return chefSkipSsl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getChefSkipSsl() {
    return chefSkipSsl;
  }


  public void setChefSkipSsl(Boolean chefSkipSsl) {
    this.chefSkipSsl = chefSkipSsl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChefTargetDetails chefTargetDetails = (ChefTargetDetails) o;
    return Objects.equals(this.chefServerHostName, chefTargetDetails.chefServerHostName) &&
        Objects.equals(this.chefServerKey, chefTargetDetails.chefServerKey) &&
        Objects.equals(this.chefServerPort, chefTargetDetails.chefServerPort) &&
        Objects.equals(this.chefServerUrl, chefTargetDetails.chefServerUrl) &&
        Objects.equals(this.chefServerUsername, chefTargetDetails.chefServerUsername) &&
        Objects.equals(this.chefSkipSsl, chefTargetDetails.chefSkipSsl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chefServerHostName, chefServerKey, chefServerPort, chefServerUrl, chefServerUsername, chefSkipSsl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChefTargetDetails {\n");
    sb.append("    chefServerHostName: ").append(toIndentedString(chefServerHostName)).append("\n");
    sb.append("    chefServerKey: ").append(toIndentedString(chefServerKey)).append("\n");
    sb.append("    chefServerPort: ").append(toIndentedString(chefServerPort)).append("\n");
    sb.append("    chefServerUrl: ").append(toIndentedString(chefServerUrl)).append("\n");
    sb.append("    chefServerUsername: ").append(toIndentedString(chefServerUsername)).append("\n");
    sb.append("    chefSkipSsl: ").append(toIndentedString(chefSkipSsl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

