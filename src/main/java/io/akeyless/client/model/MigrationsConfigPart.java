/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.AWSSecretsMigration;
import io.akeyless.client.model.ActiveDirectoryMigration;
import io.akeyless.client.model.AzureKeyVaultMigration;
import io.akeyless.client.model.GCPSecretsMigration;
import io.akeyless.client.model.HashiMigration;
import io.akeyless.client.model.K8SMigration;
import io.akeyless.client.model.MockMigration;
import io.akeyless.client.model.OnePasswordMigration;
import io.akeyless.client.model.ServerInventoryMigration;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * MigrationsConfigPart
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class MigrationsConfigPart {
  public static final String SERIALIZED_NAME_ACTIVE_DIRECTORY_MIGRATIONS = "active_directory_migrations";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DIRECTORY_MIGRATIONS)
  @javax.annotation.Nullable
  private List<ActiveDirectoryMigration> activeDirectoryMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_AWS_SECRETS_MIGRATIONS = "aws_secrets_migrations";
  @SerializedName(SERIALIZED_NAME_AWS_SECRETS_MIGRATIONS)
  @javax.annotation.Nullable
  private List<AWSSecretsMigration> awsSecretsMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_AZURE_KV_MIGRATIONS = "azure_kv_migrations";
  @SerializedName(SERIALIZED_NAME_AZURE_KV_MIGRATIONS)
  @javax.annotation.Nullable
  private List<AzureKeyVaultMigration> azureKvMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_GCP_SECRETS_MIGRATIONS = "gcp_secrets_migrations";
  @SerializedName(SERIALIZED_NAME_GCP_SECRETS_MIGRATIONS)
  @javax.annotation.Nullable
  private List<GCPSecretsMigration> gcpSecretsMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_HASHI_MIGRATIONS = "hashi_migrations";
  @SerializedName(SERIALIZED_NAME_HASHI_MIGRATIONS)
  @javax.annotation.Nullable
  private List<HashiMigration> hashiMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_K8S_MIGRATIONS = "k8s_migrations";
  @SerializedName(SERIALIZED_NAME_K8S_MIGRATIONS)
  @javax.annotation.Nullable
  private List<K8SMigration> k8sMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_MOCK_MIGRATIONS = "mock_migrations";
  @SerializedName(SERIALIZED_NAME_MOCK_MIGRATIONS)
  @javax.annotation.Nullable
  private List<MockMigration> mockMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_ONE_PASSWORD_MIGRATIONS = "one_password_migrations";
  @SerializedName(SERIALIZED_NAME_ONE_PASSWORD_MIGRATIONS)
  @javax.annotation.Nullable
  private List<OnePasswordMigration> onePasswordMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVER_INVENTORY_MIGRATIONS = "server_inventory_migrations";
  @SerializedName(SERIALIZED_NAME_SERVER_INVENTORY_MIGRATIONS)
  @javax.annotation.Nullable
  private List<ServerInventoryMigration> serverInventoryMigrations = new ArrayList<>();

  public MigrationsConfigPart() {
  }

  public MigrationsConfigPart activeDirectoryMigrations(@javax.annotation.Nullable List<ActiveDirectoryMigration> activeDirectoryMigrations) {
    this.activeDirectoryMigrations = activeDirectoryMigrations;
    return this;
  }

  public MigrationsConfigPart addActiveDirectoryMigrationsItem(ActiveDirectoryMigration activeDirectoryMigrationsItem) {
    if (this.activeDirectoryMigrations == null) {
      this.activeDirectoryMigrations = new ArrayList<>();
    }
    this.activeDirectoryMigrations.add(activeDirectoryMigrationsItem);
    return this;
  }

  /**
   * Get activeDirectoryMigrations
   * @return activeDirectoryMigrations
   */
  @javax.annotation.Nullable
  public List<ActiveDirectoryMigration> getActiveDirectoryMigrations() {
    return activeDirectoryMigrations;
  }

  public void setActiveDirectoryMigrations(@javax.annotation.Nullable List<ActiveDirectoryMigration> activeDirectoryMigrations) {
    this.activeDirectoryMigrations = activeDirectoryMigrations;
  }


  public MigrationsConfigPart awsSecretsMigrations(@javax.annotation.Nullable List<AWSSecretsMigration> awsSecretsMigrations) {
    this.awsSecretsMigrations = awsSecretsMigrations;
    return this;
  }

  public MigrationsConfigPart addAwsSecretsMigrationsItem(AWSSecretsMigration awsSecretsMigrationsItem) {
    if (this.awsSecretsMigrations == null) {
      this.awsSecretsMigrations = new ArrayList<>();
    }
    this.awsSecretsMigrations.add(awsSecretsMigrationsItem);
    return this;
  }

  /**
   * Get awsSecretsMigrations
   * @return awsSecretsMigrations
   */
  @javax.annotation.Nullable
  public List<AWSSecretsMigration> getAwsSecretsMigrations() {
    return awsSecretsMigrations;
  }

  public void setAwsSecretsMigrations(@javax.annotation.Nullable List<AWSSecretsMigration> awsSecretsMigrations) {
    this.awsSecretsMigrations = awsSecretsMigrations;
  }


  public MigrationsConfigPart azureKvMigrations(@javax.annotation.Nullable List<AzureKeyVaultMigration> azureKvMigrations) {
    this.azureKvMigrations = azureKvMigrations;
    return this;
  }

  public MigrationsConfigPart addAzureKvMigrationsItem(AzureKeyVaultMigration azureKvMigrationsItem) {
    if (this.azureKvMigrations == null) {
      this.azureKvMigrations = new ArrayList<>();
    }
    this.azureKvMigrations.add(azureKvMigrationsItem);
    return this;
  }

  /**
   * Get azureKvMigrations
   * @return azureKvMigrations
   */
  @javax.annotation.Nullable
  public List<AzureKeyVaultMigration> getAzureKvMigrations() {
    return azureKvMigrations;
  }

  public void setAzureKvMigrations(@javax.annotation.Nullable List<AzureKeyVaultMigration> azureKvMigrations) {
    this.azureKvMigrations = azureKvMigrations;
  }


  public MigrationsConfigPart gcpSecretsMigrations(@javax.annotation.Nullable List<GCPSecretsMigration> gcpSecretsMigrations) {
    this.gcpSecretsMigrations = gcpSecretsMigrations;
    return this;
  }

  public MigrationsConfigPart addGcpSecretsMigrationsItem(GCPSecretsMigration gcpSecretsMigrationsItem) {
    if (this.gcpSecretsMigrations == null) {
      this.gcpSecretsMigrations = new ArrayList<>();
    }
    this.gcpSecretsMigrations.add(gcpSecretsMigrationsItem);
    return this;
  }

  /**
   * Get gcpSecretsMigrations
   * @return gcpSecretsMigrations
   */
  @javax.annotation.Nullable
  public List<GCPSecretsMigration> getGcpSecretsMigrations() {
    return gcpSecretsMigrations;
  }

  public void setGcpSecretsMigrations(@javax.annotation.Nullable List<GCPSecretsMigration> gcpSecretsMigrations) {
    this.gcpSecretsMigrations = gcpSecretsMigrations;
  }


  public MigrationsConfigPart hashiMigrations(@javax.annotation.Nullable List<HashiMigration> hashiMigrations) {
    this.hashiMigrations = hashiMigrations;
    return this;
  }

  public MigrationsConfigPart addHashiMigrationsItem(HashiMigration hashiMigrationsItem) {
    if (this.hashiMigrations == null) {
      this.hashiMigrations = new ArrayList<>();
    }
    this.hashiMigrations.add(hashiMigrationsItem);
    return this;
  }

  /**
   * Get hashiMigrations
   * @return hashiMigrations
   */
  @javax.annotation.Nullable
  public List<HashiMigration> getHashiMigrations() {
    return hashiMigrations;
  }

  public void setHashiMigrations(@javax.annotation.Nullable List<HashiMigration> hashiMigrations) {
    this.hashiMigrations = hashiMigrations;
  }


  public MigrationsConfigPart k8sMigrations(@javax.annotation.Nullable List<K8SMigration> k8sMigrations) {
    this.k8sMigrations = k8sMigrations;
    return this;
  }

  public MigrationsConfigPart addK8sMigrationsItem(K8SMigration k8sMigrationsItem) {
    if (this.k8sMigrations == null) {
      this.k8sMigrations = new ArrayList<>();
    }
    this.k8sMigrations.add(k8sMigrationsItem);
    return this;
  }

  /**
   * Get k8sMigrations
   * @return k8sMigrations
   */
  @javax.annotation.Nullable
  public List<K8SMigration> getK8sMigrations() {
    return k8sMigrations;
  }

  public void setK8sMigrations(@javax.annotation.Nullable List<K8SMigration> k8sMigrations) {
    this.k8sMigrations = k8sMigrations;
  }


  public MigrationsConfigPart mockMigrations(@javax.annotation.Nullable List<MockMigration> mockMigrations) {
    this.mockMigrations = mockMigrations;
    return this;
  }

  public MigrationsConfigPart addMockMigrationsItem(MockMigration mockMigrationsItem) {
    if (this.mockMigrations == null) {
      this.mockMigrations = new ArrayList<>();
    }
    this.mockMigrations.add(mockMigrationsItem);
    return this;
  }

  /**
   * Get mockMigrations
   * @return mockMigrations
   */
  @javax.annotation.Nullable
  public List<MockMigration> getMockMigrations() {
    return mockMigrations;
  }

  public void setMockMigrations(@javax.annotation.Nullable List<MockMigration> mockMigrations) {
    this.mockMigrations = mockMigrations;
  }


  public MigrationsConfigPart onePasswordMigrations(@javax.annotation.Nullable List<OnePasswordMigration> onePasswordMigrations) {
    this.onePasswordMigrations = onePasswordMigrations;
    return this;
  }

  public MigrationsConfigPart addOnePasswordMigrationsItem(OnePasswordMigration onePasswordMigrationsItem) {
    if (this.onePasswordMigrations == null) {
      this.onePasswordMigrations = new ArrayList<>();
    }
    this.onePasswordMigrations.add(onePasswordMigrationsItem);
    return this;
  }

  /**
   * Get onePasswordMigrations
   * @return onePasswordMigrations
   */
  @javax.annotation.Nullable
  public List<OnePasswordMigration> getOnePasswordMigrations() {
    return onePasswordMigrations;
  }

  public void setOnePasswordMigrations(@javax.annotation.Nullable List<OnePasswordMigration> onePasswordMigrations) {
    this.onePasswordMigrations = onePasswordMigrations;
  }


  public MigrationsConfigPart serverInventoryMigrations(@javax.annotation.Nullable List<ServerInventoryMigration> serverInventoryMigrations) {
    this.serverInventoryMigrations = serverInventoryMigrations;
    return this;
  }

  public MigrationsConfigPart addServerInventoryMigrationsItem(ServerInventoryMigration serverInventoryMigrationsItem) {
    if (this.serverInventoryMigrations == null) {
      this.serverInventoryMigrations = new ArrayList<>();
    }
    this.serverInventoryMigrations.add(serverInventoryMigrationsItem);
    return this;
  }

  /**
   * Get serverInventoryMigrations
   * @return serverInventoryMigrations
   */
  @javax.annotation.Nullable
  public List<ServerInventoryMigration> getServerInventoryMigrations() {
    return serverInventoryMigrations;
  }

  public void setServerInventoryMigrations(@javax.annotation.Nullable List<ServerInventoryMigration> serverInventoryMigrations) {
    this.serverInventoryMigrations = serverInventoryMigrations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrationsConfigPart migrationsConfigPart = (MigrationsConfigPart) o;
    return Objects.equals(this.activeDirectoryMigrations, migrationsConfigPart.activeDirectoryMigrations) &&
        Objects.equals(this.awsSecretsMigrations, migrationsConfigPart.awsSecretsMigrations) &&
        Objects.equals(this.azureKvMigrations, migrationsConfigPart.azureKvMigrations) &&
        Objects.equals(this.gcpSecretsMigrations, migrationsConfigPart.gcpSecretsMigrations) &&
        Objects.equals(this.hashiMigrations, migrationsConfigPart.hashiMigrations) &&
        Objects.equals(this.k8sMigrations, migrationsConfigPart.k8sMigrations) &&
        Objects.equals(this.mockMigrations, migrationsConfigPart.mockMigrations) &&
        Objects.equals(this.onePasswordMigrations, migrationsConfigPart.onePasswordMigrations) &&
        Objects.equals(this.serverInventoryMigrations, migrationsConfigPart.serverInventoryMigrations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeDirectoryMigrations, awsSecretsMigrations, azureKvMigrations, gcpSecretsMigrations, hashiMigrations, k8sMigrations, mockMigrations, onePasswordMigrations, serverInventoryMigrations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrationsConfigPart {\n");
    sb.append("    activeDirectoryMigrations: ").append(toIndentedString(activeDirectoryMigrations)).append("\n");
    sb.append("    awsSecretsMigrations: ").append(toIndentedString(awsSecretsMigrations)).append("\n");
    sb.append("    azureKvMigrations: ").append(toIndentedString(azureKvMigrations)).append("\n");
    sb.append("    gcpSecretsMigrations: ").append(toIndentedString(gcpSecretsMigrations)).append("\n");
    sb.append("    hashiMigrations: ").append(toIndentedString(hashiMigrations)).append("\n");
    sb.append("    k8sMigrations: ").append(toIndentedString(k8sMigrations)).append("\n");
    sb.append("    mockMigrations: ").append(toIndentedString(mockMigrations)).append("\n");
    sb.append("    onePasswordMigrations: ").append(toIndentedString(onePasswordMigrations)).append("\n");
    sb.append("    serverInventoryMigrations: ").append(toIndentedString(serverInventoryMigrations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active_directory_migrations");
    openapiFields.add("aws_secrets_migrations");
    openapiFields.add("azure_kv_migrations");
    openapiFields.add("gcp_secrets_migrations");
    openapiFields.add("hashi_migrations");
    openapiFields.add("k8s_migrations");
    openapiFields.add("mock_migrations");
    openapiFields.add("one_password_migrations");
    openapiFields.add("server_inventory_migrations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MigrationsConfigPart
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MigrationsConfigPart.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MigrationsConfigPart is not found in the empty JSON string", MigrationsConfigPart.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MigrationsConfigPart.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MigrationsConfigPart` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("active_directory_migrations") != null && !jsonObj.get("active_directory_migrations").isJsonNull()) {
        JsonArray jsonArrayactiveDirectoryMigrations = jsonObj.getAsJsonArray("active_directory_migrations");
        if (jsonArrayactiveDirectoryMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("active_directory_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `active_directory_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("active_directory_migrations").toString()));
          }

          // validate the optional field `active_directory_migrations` (array)
          for (int i = 0; i < jsonArrayactiveDirectoryMigrations.size(); i++) {
            ActiveDirectoryMigration.validateJsonElement(jsonArrayactiveDirectoryMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("aws_secrets_migrations") != null && !jsonObj.get("aws_secrets_migrations").isJsonNull()) {
        JsonArray jsonArrayawsSecretsMigrations = jsonObj.getAsJsonArray("aws_secrets_migrations");
        if (jsonArrayawsSecretsMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("aws_secrets_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `aws_secrets_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("aws_secrets_migrations").toString()));
          }

          // validate the optional field `aws_secrets_migrations` (array)
          for (int i = 0; i < jsonArrayawsSecretsMigrations.size(); i++) {
            AWSSecretsMigration.validateJsonElement(jsonArrayawsSecretsMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("azure_kv_migrations") != null && !jsonObj.get("azure_kv_migrations").isJsonNull()) {
        JsonArray jsonArrayazureKvMigrations = jsonObj.getAsJsonArray("azure_kv_migrations");
        if (jsonArrayazureKvMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("azure_kv_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `azure_kv_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("azure_kv_migrations").toString()));
          }

          // validate the optional field `azure_kv_migrations` (array)
          for (int i = 0; i < jsonArrayazureKvMigrations.size(); i++) {
            AzureKeyVaultMigration.validateJsonElement(jsonArrayazureKvMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("gcp_secrets_migrations") != null && !jsonObj.get("gcp_secrets_migrations").isJsonNull()) {
        JsonArray jsonArraygcpSecretsMigrations = jsonObj.getAsJsonArray("gcp_secrets_migrations");
        if (jsonArraygcpSecretsMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("gcp_secrets_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `gcp_secrets_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("gcp_secrets_migrations").toString()));
          }

          // validate the optional field `gcp_secrets_migrations` (array)
          for (int i = 0; i < jsonArraygcpSecretsMigrations.size(); i++) {
            GCPSecretsMigration.validateJsonElement(jsonArraygcpSecretsMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("hashi_migrations") != null && !jsonObj.get("hashi_migrations").isJsonNull()) {
        JsonArray jsonArrayhashiMigrations = jsonObj.getAsJsonArray("hashi_migrations");
        if (jsonArrayhashiMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hashi_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hashi_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("hashi_migrations").toString()));
          }

          // validate the optional field `hashi_migrations` (array)
          for (int i = 0; i < jsonArrayhashiMigrations.size(); i++) {
            HashiMigration.validateJsonElement(jsonArrayhashiMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("k8s_migrations") != null && !jsonObj.get("k8s_migrations").isJsonNull()) {
        JsonArray jsonArrayk8sMigrations = jsonObj.getAsJsonArray("k8s_migrations");
        if (jsonArrayk8sMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("k8s_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `k8s_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("k8s_migrations").toString()));
          }

          // validate the optional field `k8s_migrations` (array)
          for (int i = 0; i < jsonArrayk8sMigrations.size(); i++) {
            K8SMigration.validateJsonElement(jsonArrayk8sMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("mock_migrations") != null && !jsonObj.get("mock_migrations").isJsonNull()) {
        JsonArray jsonArraymockMigrations = jsonObj.getAsJsonArray("mock_migrations");
        if (jsonArraymockMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mock_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mock_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("mock_migrations").toString()));
          }

          // validate the optional field `mock_migrations` (array)
          for (int i = 0; i < jsonArraymockMigrations.size(); i++) {
            MockMigration.validateJsonElement(jsonArraymockMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("one_password_migrations") != null && !jsonObj.get("one_password_migrations").isJsonNull()) {
        JsonArray jsonArrayonePasswordMigrations = jsonObj.getAsJsonArray("one_password_migrations");
        if (jsonArrayonePasswordMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("one_password_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `one_password_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("one_password_migrations").toString()));
          }

          // validate the optional field `one_password_migrations` (array)
          for (int i = 0; i < jsonArrayonePasswordMigrations.size(); i++) {
            OnePasswordMigration.validateJsonElement(jsonArrayonePasswordMigrations.get(i));
          };
        }
      }
      if (jsonObj.get("server_inventory_migrations") != null && !jsonObj.get("server_inventory_migrations").isJsonNull()) {
        JsonArray jsonArrayserverInventoryMigrations = jsonObj.getAsJsonArray("server_inventory_migrations");
        if (jsonArrayserverInventoryMigrations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("server_inventory_migrations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `server_inventory_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("server_inventory_migrations").toString()));
          }

          // validate the optional field `server_inventory_migrations` (array)
          for (int i = 0; i < jsonArrayserverInventoryMigrations.size(); i++) {
            ServerInventoryMigration.validateJsonElement(jsonArrayserverInventoryMigrations.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MigrationsConfigPart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MigrationsConfigPart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MigrationsConfigPart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MigrationsConfigPart.class));

       return (TypeAdapter<T>) new TypeAdapter<MigrationsConfigPart>() {
           @Override
           public void write(JsonWriter out, MigrationsConfigPart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MigrationsConfigPart read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MigrationsConfigPart given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MigrationsConfigPart
   * @throws IOException if the JSON string is invalid with respect to MigrationsConfigPart
   */
  public static MigrationsConfigPart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MigrationsConfigPart.class);
  }

  /**
   * Convert an instance of MigrationsConfigPart to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

