/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * SectigoTargetDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class SectigoTargetDetails {
  public static final String SERIALIZED_NAME_CERTIFICATE_PROFILE_ID = "certificate_profile_id";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_PROFILE_ID)
  @javax.annotation.Nullable
  private Long certificateProfileId;

  public static final String SERIALIZED_NAME_CUSTOMER_URI = "customer_uri";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_URI)
  @javax.annotation.Nullable
  private String customerUri;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUESTER = "external_requester";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUESTER)
  @javax.annotation.Nullable
  private String externalRequester;

  public static final String SERIALIZED_NAME_ORG_ID = "org_id";
  @SerializedName(SERIALIZED_NAME_ORG_ID)
  @javax.annotation.Nullable
  private Long orgId;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  @javax.annotation.Nullable
  private String password;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  @javax.annotation.Nullable
  private Long timeout;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  @javax.annotation.Nullable
  private String username;

  public SectigoTargetDetails() {
  }

  public SectigoTargetDetails certificateProfileId(@javax.annotation.Nullable Long certificateProfileId) {
    this.certificateProfileId = certificateProfileId;
    return this;
  }

  /**
   * Get certificateProfileId
   * @return certificateProfileId
   */
  @javax.annotation.Nullable
  public Long getCertificateProfileId() {
    return certificateProfileId;
  }

  public void setCertificateProfileId(@javax.annotation.Nullable Long certificateProfileId) {
    this.certificateProfileId = certificateProfileId;
  }


  public SectigoTargetDetails customerUri(@javax.annotation.Nullable String customerUri) {
    this.customerUri = customerUri;
    return this;
  }

  /**
   * Get customerUri
   * @return customerUri
   */
  @javax.annotation.Nullable
  public String getCustomerUri() {
    return customerUri;
  }

  public void setCustomerUri(@javax.annotation.Nullable String customerUri) {
    this.customerUri = customerUri;
  }


  public SectigoTargetDetails externalRequester(@javax.annotation.Nullable String externalRequester) {
    this.externalRequester = externalRequester;
    return this;
  }

  /**
   * Get externalRequester
   * @return externalRequester
   */
  @javax.annotation.Nullable
  public String getExternalRequester() {
    return externalRequester;
  }

  public void setExternalRequester(@javax.annotation.Nullable String externalRequester) {
    this.externalRequester = externalRequester;
  }


  public SectigoTargetDetails orgId(@javax.annotation.Nullable Long orgId) {
    this.orgId = orgId;
    return this;
  }

  /**
   * Get orgId
   * @return orgId
   */
  @javax.annotation.Nullable
  public Long getOrgId() {
    return orgId;
  }

  public void setOrgId(@javax.annotation.Nullable Long orgId) {
    this.orgId = orgId;
  }


  public SectigoTargetDetails password(@javax.annotation.Nullable String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }


  public SectigoTargetDetails timeout(@javax.annotation.Nullable Long timeout) {
    this.timeout = timeout;
    return this;
  }

  /**
   * A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
   * @return timeout
   */
  @javax.annotation.Nullable
  public Long getTimeout() {
    return timeout;
  }

  public void setTimeout(@javax.annotation.Nullable Long timeout) {
    this.timeout = timeout;
  }


  public SectigoTargetDetails username(@javax.annotation.Nullable String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SectigoTargetDetails sectigoTargetDetails = (SectigoTargetDetails) o;
    return Objects.equals(this.certificateProfileId, sectigoTargetDetails.certificateProfileId) &&
        Objects.equals(this.customerUri, sectigoTargetDetails.customerUri) &&
        Objects.equals(this.externalRequester, sectigoTargetDetails.externalRequester) &&
        Objects.equals(this.orgId, sectigoTargetDetails.orgId) &&
        Objects.equals(this.password, sectigoTargetDetails.password) &&
        Objects.equals(this.timeout, sectigoTargetDetails.timeout) &&
        Objects.equals(this.username, sectigoTargetDetails.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateProfileId, customerUri, externalRequester, orgId, password, timeout, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SectigoTargetDetails {\n");
    sb.append("    certificateProfileId: ").append(toIndentedString(certificateProfileId)).append("\n");
    sb.append("    customerUri: ").append(toIndentedString(customerUri)).append("\n");
    sb.append("    externalRequester: ").append(toIndentedString(externalRequester)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("certificate_profile_id");
    openapiFields.add("customer_uri");
    openapiFields.add("external_requester");
    openapiFields.add("org_id");
    openapiFields.add("password");
    openapiFields.add("timeout");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SectigoTargetDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SectigoTargetDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SectigoTargetDetails is not found in the empty JSON string", SectigoTargetDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SectigoTargetDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SectigoTargetDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customer_uri") != null && !jsonObj.get("customer_uri").isJsonNull()) && !jsonObj.get("customer_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_uri").toString()));
      }
      if ((jsonObj.get("external_requester") != null && !jsonObj.get("external_requester").isJsonNull()) && !jsonObj.get("external_requester").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `external_requester` to be a primitive type in the JSON string but got `%s`", jsonObj.get("external_requester").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SectigoTargetDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SectigoTargetDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SectigoTargetDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SectigoTargetDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<SectigoTargetDetails>() {
           @Override
           public void write(JsonWriter out, SectigoTargetDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SectigoTargetDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SectigoTargetDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SectigoTargetDetails
   * @throws IOException if the JSON string is invalid with respect to SectigoTargetDetails
   */
  public static SectigoTargetDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SectigoTargetDetails.class);
  }

  /**
   * Convert an instance of SectigoTargetDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

