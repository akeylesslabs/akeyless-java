/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SectigoTargetDetails
 */
@ApiModel(description = "SectigoTargetDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SectigoTargetDetails {
  public static final String SERIALIZED_NAME_CERTIFICATE_PROFILE_ID = "certificate_profile_id";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_PROFILE_ID)
  private Long certificateProfileId;

  public static final String SERIALIZED_NAME_CUSTOMER_URI = "customer_uri";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_URI)
  private String customerUri;

  public static final String SERIALIZED_NAME_EXTERNAL_REQUESTER = "external_requester";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_REQUESTER)
  private String externalRequester;

  public static final String SERIALIZED_NAME_ORG_ID = "org_id";
  @SerializedName(SERIALIZED_NAME_ORG_ID)
  private Long orgId;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_TIMEOUT = "timeout";
  @SerializedName(SERIALIZED_NAME_TIMEOUT)
  private Long timeout;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public SectigoTargetDetails() { 
  }

  public SectigoTargetDetails certificateProfileId(Long certificateProfileId) {
    
    this.certificateProfileId = certificateProfileId;
    return this;
  }

   /**
   * Get certificateProfileId
   * @return certificateProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCertificateProfileId() {
    return certificateProfileId;
  }


  public void setCertificateProfileId(Long certificateProfileId) {
    this.certificateProfileId = certificateProfileId;
  }


  public SectigoTargetDetails customerUri(String customerUri) {
    
    this.customerUri = customerUri;
    return this;
  }

   /**
   * Get customerUri
   * @return customerUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomerUri() {
    return customerUri;
  }


  public void setCustomerUri(String customerUri) {
    this.customerUri = customerUri;
  }


  public SectigoTargetDetails externalRequester(String externalRequester) {
    
    this.externalRequester = externalRequester;
    return this;
  }

   /**
   * Get externalRequester
   * @return externalRequester
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalRequester() {
    return externalRequester;
  }


  public void setExternalRequester(String externalRequester) {
    this.externalRequester = externalRequester;
  }


  public SectigoTargetDetails orgId(Long orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * Get orgId
   * @return orgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getOrgId() {
    return orgId;
  }


  public void setOrgId(Long orgId) {
    this.orgId = orgId;
  }


  public SectigoTargetDetails password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public SectigoTargetDetails timeout(Long timeout) {
    
    this.timeout = timeout;
    return this;
  }

   /**
   * A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A Duration represents the elapsed time between two instants as an int64 nanosecond count. The representation limits the largest representable duration to approximately 290 years.")

  public Long getTimeout() {
    return timeout;
  }


  public void setTimeout(Long timeout) {
    this.timeout = timeout;
  }


  public SectigoTargetDetails username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SectigoTargetDetails sectigoTargetDetails = (SectigoTargetDetails) o;
    return Objects.equals(this.certificateProfileId, sectigoTargetDetails.certificateProfileId) &&
        Objects.equals(this.customerUri, sectigoTargetDetails.customerUri) &&
        Objects.equals(this.externalRequester, sectigoTargetDetails.externalRequester) &&
        Objects.equals(this.orgId, sectigoTargetDetails.orgId) &&
        Objects.equals(this.password, sectigoTargetDetails.password) &&
        Objects.equals(this.timeout, sectigoTargetDetails.timeout) &&
        Objects.equals(this.username, sectigoTargetDetails.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateProfileId, customerUri, externalRequester, orgId, password, timeout, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SectigoTargetDetails {\n");
    sb.append("    certificateProfileId: ").append(toIndentedString(certificateProfileId)).append("\n");
    sb.append("    customerUri: ").append(toIndentedString(customerUri)).append("\n");
    sb.append("    externalRequester: ").append(toIndentedString(externalRequester)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

