/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * authMethodCreateCert is a command that creates a new auth method that will be able to authenticate using a client certificate
 */
@ApiModel(description = "authMethodCreateCert is a command that creates a new auth method that will be able to authenticate using a client certificate")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AuthMethodCreateCert {
  public static final String SERIALIZED_NAME_ACCESS_EXPIRES = "access-expires";
  @SerializedName(SERIALIZED_NAME_ACCESS_EXPIRES)
  private Long accessExpires = 0l;

  public static final String SERIALIZED_NAME_ALLOWED_CORS = "allowed-cors";
  @SerializedName(SERIALIZED_NAME_ALLOWED_CORS)
  private String allowedCors;

  public static final String SERIALIZED_NAME_AUDIT_LOGS_CLAIMS = "audit-logs-claims";
  @SerializedName(SERIALIZED_NAME_AUDIT_LOGS_CLAIMS)
  private List<String> auditLogsClaims = null;

  public static final String SERIALIZED_NAME_BOUND_COMMON_NAMES = "bound-common-names";
  @SerializedName(SERIALIZED_NAME_BOUND_COMMON_NAMES)
  private List<String> boundCommonNames = null;

  public static final String SERIALIZED_NAME_BOUND_DNS_SANS = "bound-dns-sans";
  @SerializedName(SERIALIZED_NAME_BOUND_DNS_SANS)
  private List<String> boundDnsSans = null;

  public static final String SERIALIZED_NAME_BOUND_EMAIL_SANS = "bound-email-sans";
  @SerializedName(SERIALIZED_NAME_BOUND_EMAIL_SANS)
  private List<String> boundEmailSans = null;

  public static final String SERIALIZED_NAME_BOUND_EXTENSIONS = "bound-extensions";
  @SerializedName(SERIALIZED_NAME_BOUND_EXTENSIONS)
  private List<String> boundExtensions = null;

  public static final String SERIALIZED_NAME_BOUND_IPS = "bound-ips";
  @SerializedName(SERIALIZED_NAME_BOUND_IPS)
  private List<String> boundIps = null;

  public static final String SERIALIZED_NAME_BOUND_ORGANIZATIONAL_UNITS = "bound-organizational-units";
  @SerializedName(SERIALIZED_NAME_BOUND_ORGANIZATIONAL_UNITS)
  private List<String> boundOrganizationalUnits = null;

  public static final String SERIALIZED_NAME_BOUND_URI_SANS = "bound-uri-sans";
  @SerializedName(SERIALIZED_NAME_BOUND_URI_SANS)
  private List<String> boundUriSans = null;

  public static final String SERIALIZED_NAME_CERTIFICATE_DATA = "certificate-data";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_DATA)
  private String certificateData;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FORCE_SUB_CLAIMS = "force-sub-claims";
  @SerializedName(SERIALIZED_NAME_FORCE_SUB_CLAIMS)
  private Boolean forceSubClaims;

  public static final String SERIALIZED_NAME_GW_BOUND_IPS = "gw-bound-ips";
  @SerializedName(SERIALIZED_NAME_GW_BOUND_IPS)
  private List<String> gwBoundIps = null;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_JWT_TTL = "jwt-ttl";
  @SerializedName(SERIALIZED_NAME_JWT_TTL)
  private Long jwtTtl = 0l;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "product-type";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private List<String> productType = null;

  public static final String SERIALIZED_NAME_REVOKED_CERT_IDS = "revoked-cert-ids";
  @SerializedName(SERIALIZED_NAME_REVOKED_CERT_IDS)
  private List<String> revokedCertIds = null;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_UNIQUE_IDENTIFIER = "unique-identifier";
  @SerializedName(SERIALIZED_NAME_UNIQUE_IDENTIFIER)
  private String uniqueIdentifier;

  public AuthMethodCreateCert() { 
  }

  public AuthMethodCreateCert accessExpires(Long accessExpires) {
    
    this.accessExpires = accessExpires;
    return this;
  }

   /**
   * Access expiration date in Unix timestamp (select 0 for access without expiry date)
   * @return accessExpires
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Access expiration date in Unix timestamp (select 0 for access without expiry date)")

  public Long getAccessExpires() {
    return accessExpires;
  }


  public void setAccessExpires(Long accessExpires) {
    this.accessExpires = accessExpires;
  }


  public AuthMethodCreateCert allowedCors(String allowedCors) {
    
    this.allowedCors = allowedCors;
    return this;
  }

   /**
   * Comma separated list of allowed CORS domains to be validated as part of the authentication flow.
   * @return allowedCors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comma separated list of allowed CORS domains to be validated as part of the authentication flow.")

  public String getAllowedCors() {
    return allowedCors;
  }


  public void setAllowedCors(String allowedCors) {
    this.allowedCors = allowedCors;
  }


  public AuthMethodCreateCert auditLogsClaims(List<String> auditLogsClaims) {
    
    this.auditLogsClaims = auditLogsClaims;
    return this;
  }

  public AuthMethodCreateCert addAuditLogsClaimsItem(String auditLogsClaimsItem) {
    if (this.auditLogsClaims == null) {
      this.auditLogsClaims = new ArrayList<String>();
    }
    this.auditLogsClaims.add(auditLogsClaimsItem);
    return this;
  }

   /**
   * Subclaims to include in audit logs, e.g \&quot;--audit-logs-claims email --audit-logs-claims username\&quot;
   * @return auditLogsClaims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subclaims to include in audit logs, e.g \"--audit-logs-claims email --audit-logs-claims username\"")

  public List<String> getAuditLogsClaims() {
    return auditLogsClaims;
  }


  public void setAuditLogsClaims(List<String> auditLogsClaims) {
    this.auditLogsClaims = auditLogsClaims;
  }


  public AuthMethodCreateCert boundCommonNames(List<String> boundCommonNames) {
    
    this.boundCommonNames = boundCommonNames;
    return this;
  }

  public AuthMethodCreateCert addBoundCommonNamesItem(String boundCommonNamesItem) {
    if (this.boundCommonNames == null) {
      this.boundCommonNames = new ArrayList<String>();
    }
    this.boundCommonNames.add(boundCommonNamesItem);
    return this;
  }

   /**
   * A list of names. At least one must exist in the Common Name. Supports globbing.
   * @return boundCommonNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of names. At least one must exist in the Common Name. Supports globbing.")

  public List<String> getBoundCommonNames() {
    return boundCommonNames;
  }


  public void setBoundCommonNames(List<String> boundCommonNames) {
    this.boundCommonNames = boundCommonNames;
  }


  public AuthMethodCreateCert boundDnsSans(List<String> boundDnsSans) {
    
    this.boundDnsSans = boundDnsSans;
    return this;
  }

  public AuthMethodCreateCert addBoundDnsSansItem(String boundDnsSansItem) {
    if (this.boundDnsSans == null) {
      this.boundDnsSans = new ArrayList<String>();
    }
    this.boundDnsSans.add(boundDnsSansItem);
    return this;
  }

   /**
   * A list of DNS names. At least one must exist in the SANs. Supports globbing.
   * @return boundDnsSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of DNS names. At least one must exist in the SANs. Supports globbing.")

  public List<String> getBoundDnsSans() {
    return boundDnsSans;
  }


  public void setBoundDnsSans(List<String> boundDnsSans) {
    this.boundDnsSans = boundDnsSans;
  }


  public AuthMethodCreateCert boundEmailSans(List<String> boundEmailSans) {
    
    this.boundEmailSans = boundEmailSans;
    return this;
  }

  public AuthMethodCreateCert addBoundEmailSansItem(String boundEmailSansItem) {
    if (this.boundEmailSans == null) {
      this.boundEmailSans = new ArrayList<String>();
    }
    this.boundEmailSans.add(boundEmailSansItem);
    return this;
  }

   /**
   * A list of Email Addresses. At least one must exist in the SANs. Supports globbing.
   * @return boundEmailSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Email Addresses. At least one must exist in the SANs. Supports globbing.")

  public List<String> getBoundEmailSans() {
    return boundEmailSans;
  }


  public void setBoundEmailSans(List<String> boundEmailSans) {
    this.boundEmailSans = boundEmailSans;
  }


  public AuthMethodCreateCert boundExtensions(List<String> boundExtensions) {
    
    this.boundExtensions = boundExtensions;
    return this;
  }

  public AuthMethodCreateCert addBoundExtensionsItem(String boundExtensionsItem) {
    if (this.boundExtensions == null) {
      this.boundExtensions = new ArrayList<String>();
    }
    this.boundExtensions.add(boundExtensionsItem);
    return this;
  }

   /**
   * A list of extensions formatted as \&quot;oid:value\&quot;. Expects the extension value to be some type of ASN1 encoded string. All values much match. Supports globbing on \&quot;value\&quot;.
   * @return boundExtensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of extensions formatted as \"oid:value\". Expects the extension value to be some type of ASN1 encoded string. All values much match. Supports globbing on \"value\".")

  public List<String> getBoundExtensions() {
    return boundExtensions;
  }


  public void setBoundExtensions(List<String> boundExtensions) {
    this.boundExtensions = boundExtensions;
  }


  public AuthMethodCreateCert boundIps(List<String> boundIps) {
    
    this.boundIps = boundIps;
    return this;
  }

  public AuthMethodCreateCert addBoundIpsItem(String boundIpsItem) {
    if (this.boundIps == null) {
      this.boundIps = new ArrayList<String>();
    }
    this.boundIps.add(boundIpsItem);
    return this;
  }

   /**
   * A CIDR whitelist with the IPs that the access is restricted to
   * @return boundIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A CIDR whitelist with the IPs that the access is restricted to")

  public List<String> getBoundIps() {
    return boundIps;
  }


  public void setBoundIps(List<String> boundIps) {
    this.boundIps = boundIps;
  }


  public AuthMethodCreateCert boundOrganizationalUnits(List<String> boundOrganizationalUnits) {
    
    this.boundOrganizationalUnits = boundOrganizationalUnits;
    return this;
  }

  public AuthMethodCreateCert addBoundOrganizationalUnitsItem(String boundOrganizationalUnitsItem) {
    if (this.boundOrganizationalUnits == null) {
      this.boundOrganizationalUnits = new ArrayList<String>();
    }
    this.boundOrganizationalUnits.add(boundOrganizationalUnitsItem);
    return this;
  }

   /**
   * A list of Organizational Units names. At least one must exist in the OU field.
   * @return boundOrganizationalUnits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Organizational Units names. At least one must exist in the OU field.")

  public List<String> getBoundOrganizationalUnits() {
    return boundOrganizationalUnits;
  }


  public void setBoundOrganizationalUnits(List<String> boundOrganizationalUnits) {
    this.boundOrganizationalUnits = boundOrganizationalUnits;
  }


  public AuthMethodCreateCert boundUriSans(List<String> boundUriSans) {
    
    this.boundUriSans = boundUriSans;
    return this;
  }

  public AuthMethodCreateCert addBoundUriSansItem(String boundUriSansItem) {
    if (this.boundUriSans == null) {
      this.boundUriSans = new ArrayList<String>();
    }
    this.boundUriSans.add(boundUriSansItem);
    return this;
  }

   /**
   * A list of URIs. At least one must exist in the SANs. Supports globbing.
   * @return boundUriSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of URIs. At least one must exist in the SANs. Supports globbing.")

  public List<String> getBoundUriSans() {
    return boundUriSans;
  }


  public void setBoundUriSans(List<String> boundUriSans) {
    this.boundUriSans = boundUriSans;
  }


  public AuthMethodCreateCert certificateData(String certificateData) {
    
    this.certificateData = certificateData;
    return this;
  }

   /**
   * The certificate data in base64, if no file was provided
   * @return certificateData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The certificate data in base64, if no file was provided")

  public String getCertificateData() {
    return certificateData;
  }


  public void setCertificateData(String certificateData) {
    this.certificateData = certificateData;
  }


  public AuthMethodCreateCert description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Auth Method description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Auth Method description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AuthMethodCreateCert forceSubClaims(Boolean forceSubClaims) {
    
    this.forceSubClaims = forceSubClaims;
    return this;
  }

   /**
   * if true: enforce role-association must include sub claims
   * @return forceSubClaims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "if true: enforce role-association must include sub claims")

  public Boolean getForceSubClaims() {
    return forceSubClaims;
  }


  public void setForceSubClaims(Boolean forceSubClaims) {
    this.forceSubClaims = forceSubClaims;
  }


  public AuthMethodCreateCert gwBoundIps(List<String> gwBoundIps) {
    
    this.gwBoundIps = gwBoundIps;
    return this;
  }

  public AuthMethodCreateCert addGwBoundIpsItem(String gwBoundIpsItem) {
    if (this.gwBoundIps == null) {
      this.gwBoundIps = new ArrayList<String>();
    }
    this.gwBoundIps.add(gwBoundIpsItem);
    return this;
  }

   /**
   * A CIDR whitelist with the GW IPs that the access is restricted to
   * @return gwBoundIps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A CIDR whitelist with the GW IPs that the access is restricted to")

  public List<String> getGwBoundIps() {
    return gwBoundIps;
  }


  public void setGwBoundIps(List<String> gwBoundIps) {
    this.gwBoundIps = gwBoundIps;
  }


  public AuthMethodCreateCert json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public AuthMethodCreateCert jwtTtl(Long jwtTtl) {
    
    this.jwtTtl = jwtTtl;
    return this;
  }

   /**
   * Jwt TTL
   * @return jwtTtl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Jwt TTL")

  public Long getJwtTtl() {
    return jwtTtl;
  }


  public void setJwtTtl(Long jwtTtl) {
    this.jwtTtl = jwtTtl;
  }


  public AuthMethodCreateCert name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Auth Method name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Auth Method name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AuthMethodCreateCert productType(List<String> productType) {
    
    this.productType = productType;
    return this;
  }

  public AuthMethodCreateCert addProductTypeItem(String productTypeItem) {
    if (this.productType == null) {
      this.productType = new ArrayList<String>();
    }
    this.productType.add(productTypeItem);
    return this;
  }

   /**
   * Choose the relevant product type for the auth method [sm, sra, pm, dp, ca]
   * @return productType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Choose the relevant product type for the auth method [sm, sra, pm, dp, ca]")

  public List<String> getProductType() {
    return productType;
  }


  public void setProductType(List<String> productType) {
    this.productType = productType;
  }


  public AuthMethodCreateCert revokedCertIds(List<String> revokedCertIds) {
    
    this.revokedCertIds = revokedCertIds;
    return this;
  }

  public AuthMethodCreateCert addRevokedCertIdsItem(String revokedCertIdsItem) {
    if (this.revokedCertIds == null) {
      this.revokedCertIds = new ArrayList<String>();
    }
    this.revokedCertIds.add(revokedCertIdsItem);
    return this;
  }

   /**
   * A list of revoked cert ids
   * @return revokedCertIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of revoked cert ids")

  public List<String> getRevokedCertIds() {
    return revokedCertIds;
  }


  public void setRevokedCertIds(List<String> revokedCertIds) {
    this.revokedCertIds = revokedCertIds;
  }


  public AuthMethodCreateCert token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public AuthMethodCreateCert uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public AuthMethodCreateCert uniqueIdentifier(String uniqueIdentifier) {
    
    this.uniqueIdentifier = uniqueIdentifier;
    return this;
  }

   /**
   * A unique identifier (ID) value should be configured, such as common_name or organizational_unit Whenever a user logs in with a token, these authentication types issue a \&quot;sub claim\&quot; that contains details uniquely identifying that user. This sub claim includes a key containing the ID value that you configured, and is used to distinguish between different users from within the same organization.
   * @return uniqueIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A unique identifier (ID) value should be configured, such as common_name or organizational_unit Whenever a user logs in with a token, these authentication types issue a \"sub claim\" that contains details uniquely identifying that user. This sub claim includes a key containing the ID value that you configured, and is used to distinguish between different users from within the same organization.")

  public String getUniqueIdentifier() {
    return uniqueIdentifier;
  }


  public void setUniqueIdentifier(String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthMethodCreateCert authMethodCreateCert = (AuthMethodCreateCert) o;
    return Objects.equals(this.accessExpires, authMethodCreateCert.accessExpires) &&
        Objects.equals(this.allowedCors, authMethodCreateCert.allowedCors) &&
        Objects.equals(this.auditLogsClaims, authMethodCreateCert.auditLogsClaims) &&
        Objects.equals(this.boundCommonNames, authMethodCreateCert.boundCommonNames) &&
        Objects.equals(this.boundDnsSans, authMethodCreateCert.boundDnsSans) &&
        Objects.equals(this.boundEmailSans, authMethodCreateCert.boundEmailSans) &&
        Objects.equals(this.boundExtensions, authMethodCreateCert.boundExtensions) &&
        Objects.equals(this.boundIps, authMethodCreateCert.boundIps) &&
        Objects.equals(this.boundOrganizationalUnits, authMethodCreateCert.boundOrganizationalUnits) &&
        Objects.equals(this.boundUriSans, authMethodCreateCert.boundUriSans) &&
        Objects.equals(this.certificateData, authMethodCreateCert.certificateData) &&
        Objects.equals(this.description, authMethodCreateCert.description) &&
        Objects.equals(this.forceSubClaims, authMethodCreateCert.forceSubClaims) &&
        Objects.equals(this.gwBoundIps, authMethodCreateCert.gwBoundIps) &&
        Objects.equals(this.json, authMethodCreateCert.json) &&
        Objects.equals(this.jwtTtl, authMethodCreateCert.jwtTtl) &&
        Objects.equals(this.name, authMethodCreateCert.name) &&
        Objects.equals(this.productType, authMethodCreateCert.productType) &&
        Objects.equals(this.revokedCertIds, authMethodCreateCert.revokedCertIds) &&
        Objects.equals(this.token, authMethodCreateCert.token) &&
        Objects.equals(this.uidToken, authMethodCreateCert.uidToken) &&
        Objects.equals(this.uniqueIdentifier, authMethodCreateCert.uniqueIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessExpires, allowedCors, auditLogsClaims, boundCommonNames, boundDnsSans, boundEmailSans, boundExtensions, boundIps, boundOrganizationalUnits, boundUriSans, certificateData, description, forceSubClaims, gwBoundIps, json, jwtTtl, name, productType, revokedCertIds, token, uidToken, uniqueIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthMethodCreateCert {\n");
    sb.append("    accessExpires: ").append(toIndentedString(accessExpires)).append("\n");
    sb.append("    allowedCors: ").append(toIndentedString(allowedCors)).append("\n");
    sb.append("    auditLogsClaims: ").append(toIndentedString(auditLogsClaims)).append("\n");
    sb.append("    boundCommonNames: ").append(toIndentedString(boundCommonNames)).append("\n");
    sb.append("    boundDnsSans: ").append(toIndentedString(boundDnsSans)).append("\n");
    sb.append("    boundEmailSans: ").append(toIndentedString(boundEmailSans)).append("\n");
    sb.append("    boundExtensions: ").append(toIndentedString(boundExtensions)).append("\n");
    sb.append("    boundIps: ").append(toIndentedString(boundIps)).append("\n");
    sb.append("    boundOrganizationalUnits: ").append(toIndentedString(boundOrganizationalUnits)).append("\n");
    sb.append("    boundUriSans: ").append(toIndentedString(boundUriSans)).append("\n");
    sb.append("    certificateData: ").append(toIndentedString(certificateData)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    forceSubClaims: ").append(toIndentedString(forceSubClaims)).append("\n");
    sb.append("    gwBoundIps: ").append(toIndentedString(gwBoundIps)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    jwtTtl: ").append(toIndentedString(jwtTtl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    revokedCertIds: ").append(toIndentedString(revokedCertIds)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    uniqueIdentifier: ").append(toIndentedString(uniqueIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

