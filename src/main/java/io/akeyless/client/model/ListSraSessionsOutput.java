/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.SraSessionEntryOut;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ListSraSessionsOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ListSraSessionsOutput {
  public static final String SERIALIZED_NAME_ALLOWED_GATEWAYS = "allowed_gateways";
  @SerializedName(SERIALIZED_NAME_ALLOWED_GATEWAYS)
  private List<String> allowedGateways = null;

  public static final String SERIALIZED_NAME_NEXT_PAGE = "next_page";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE)
  private String nextPage;

  public static final String SERIALIZED_NAME_SESSIONS = "sessions";
  @SerializedName(SERIALIZED_NAME_SESSIONS)
  private List<SraSessionEntryOut> sessions = null;

  public ListSraSessionsOutput() { 
  }

  public ListSraSessionsOutput allowedGateways(List<String> allowedGateways) {
    
    this.allowedGateways = allowedGateways;
    return this;
  }

  public ListSraSessionsOutput addAllowedGatewaysItem(String allowedGatewaysItem) {
    if (this.allowedGateways == null) {
      this.allowedGateways = new ArrayList<String>();
    }
    this.allowedGateways.add(allowedGatewaysItem);
    return this;
  }

   /**
   * Get allowedGateways
   * @return allowedGateways
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getAllowedGateways() {
    return allowedGateways;
  }


  public void setAllowedGateways(List<String> allowedGateways) {
    this.allowedGateways = allowedGateways;
  }


  public ListSraSessionsOutput nextPage(String nextPage) {
    
    this.nextPage = nextPage;
    return this;
  }

   /**
   * Get nextPage
   * @return nextPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNextPage() {
    return nextPage;
  }


  public void setNextPage(String nextPage) {
    this.nextPage = nextPage;
  }


  public ListSraSessionsOutput sessions(List<SraSessionEntryOut> sessions) {
    
    this.sessions = sessions;
    return this;
  }

  public ListSraSessionsOutput addSessionsItem(SraSessionEntryOut sessionsItem) {
    if (this.sessions == null) {
      this.sessions = new ArrayList<SraSessionEntryOut>();
    }
    this.sessions.add(sessionsItem);
    return this;
  }

   /**
   * Get sessions
   * @return sessions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SraSessionEntryOut> getSessions() {
    return sessions;
  }


  public void setSessions(List<SraSessionEntryOut> sessions) {
    this.sessions = sessions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListSraSessionsOutput listSraSessionsOutput = (ListSraSessionsOutput) o;
    return Objects.equals(this.allowedGateways, listSraSessionsOutput.allowedGateways) &&
        Objects.equals(this.nextPage, listSraSessionsOutput.nextPage) &&
        Objects.equals(this.sessions, listSraSessionsOutput.sessions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedGateways, nextPage, sessions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListSraSessionsOutput {\n");
    sb.append("    allowedGateways: ").append(toIndentedString(allowedGateways)).append("\n");
    sb.append("    nextPage: ").append(toIndentedString(nextPage)).append("\n");
    sb.append("    sessions: ").append(toIndentedString(sessions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

