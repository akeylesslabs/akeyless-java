/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * SshBastionSessionTermination
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class SshBastionSessionTermination {
  public static final String SERIALIZED_NAME_API_PASSWORD = "api_password";
  @SerializedName(SERIALIZED_NAME_API_PASSWORD)
  @javax.annotation.Nullable
  private String apiPassword;

  public static final String SERIALIZED_NAME_API_TOKEN = "api_token";
  @SerializedName(SERIALIZED_NAME_API_TOKEN)
  @javax.annotation.Nullable
  private String apiToken;

  public static final String SERIALIZED_NAME_API_URL = "api_url";
  @SerializedName(SERIALIZED_NAME_API_URL)
  @javax.annotation.Nullable
  private String apiUrl;

  public static final String SERIALIZED_NAME_API_USERNAME = "api_username";
  @SerializedName(SERIALIZED_NAME_API_USERNAME)
  @javax.annotation.Nullable
  private String apiUsername;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public SshBastionSessionTermination() {
  }

  public SshBastionSessionTermination apiPassword(@javax.annotation.Nullable String apiPassword) {
    this.apiPassword = apiPassword;
    return this;
  }

  /**
   * Get apiPassword
   * @return apiPassword
   */
  @javax.annotation.Nullable
  public String getApiPassword() {
    return apiPassword;
  }

  public void setApiPassword(@javax.annotation.Nullable String apiPassword) {
    this.apiPassword = apiPassword;
  }


  public SshBastionSessionTermination apiToken(@javax.annotation.Nullable String apiToken) {
    this.apiToken = apiToken;
    return this;
  }

  /**
   * Get apiToken
   * @return apiToken
   */
  @javax.annotation.Nullable
  public String getApiToken() {
    return apiToken;
  }

  public void setApiToken(@javax.annotation.Nullable String apiToken) {
    this.apiToken = apiToken;
  }


  public SshBastionSessionTermination apiUrl(@javax.annotation.Nullable String apiUrl) {
    this.apiUrl = apiUrl;
    return this;
  }

  /**
   * Get apiUrl
   * @return apiUrl
   */
  @javax.annotation.Nullable
  public String getApiUrl() {
    return apiUrl;
  }

  public void setApiUrl(@javax.annotation.Nullable String apiUrl) {
    this.apiUrl = apiUrl;
  }


  public SshBastionSessionTermination apiUsername(@javax.annotation.Nullable String apiUsername) {
    this.apiUsername = apiUsername;
    return this;
  }

  /**
   * Get apiUsername
   * @return apiUsername
   */
  @javax.annotation.Nullable
  public String getApiUsername() {
    return apiUsername;
  }

  public void setApiUsername(@javax.annotation.Nullable String apiUsername) {
    this.apiUsername = apiUsername;
  }


  public SshBastionSessionTermination enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SshBastionSessionTermination sshBastionSessionTermination = (SshBastionSessionTermination) o;
    return Objects.equals(this.apiPassword, sshBastionSessionTermination.apiPassword) &&
        Objects.equals(this.apiToken, sshBastionSessionTermination.apiToken) &&
        Objects.equals(this.apiUrl, sshBastionSessionTermination.apiUrl) &&
        Objects.equals(this.apiUsername, sshBastionSessionTermination.apiUsername) &&
        Objects.equals(this.enabled, sshBastionSessionTermination.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiPassword, apiToken, apiUrl, apiUsername, enabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SshBastionSessionTermination {\n");
    sb.append("    apiPassword: ").append(toIndentedString(apiPassword)).append("\n");
    sb.append("    apiToken: ").append(toIndentedString(apiToken)).append("\n");
    sb.append("    apiUrl: ").append(toIndentedString(apiUrl)).append("\n");
    sb.append("    apiUsername: ").append(toIndentedString(apiUsername)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("api_password");
    openapiFields.add("api_token");
    openapiFields.add("api_url");
    openapiFields.add("api_username");
    openapiFields.add("enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SshBastionSessionTermination
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SshBastionSessionTermination.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SshBastionSessionTermination is not found in the empty JSON string", SshBastionSessionTermination.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SshBastionSessionTermination.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SshBastionSessionTermination` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("api_password") != null && !jsonObj.get("api_password").isJsonNull()) && !jsonObj.get("api_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_password").toString()));
      }
      if ((jsonObj.get("api_token") != null && !jsonObj.get("api_token").isJsonNull()) && !jsonObj.get("api_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_token").toString()));
      }
      if ((jsonObj.get("api_url") != null && !jsonObj.get("api_url").isJsonNull()) && !jsonObj.get("api_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_url").toString()));
      }
      if ((jsonObj.get("api_username") != null && !jsonObj.get("api_username").isJsonNull()) && !jsonObj.get("api_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SshBastionSessionTermination.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SshBastionSessionTermination' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SshBastionSessionTermination> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SshBastionSessionTermination.class));

       return (TypeAdapter<T>) new TypeAdapter<SshBastionSessionTermination>() {
           @Override
           public void write(JsonWriter out, SshBastionSessionTermination value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SshBastionSessionTermination read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SshBastionSessionTermination given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SshBastionSessionTermination
   * @throws IOException if the JSON string is invalid with respect to SshBastionSessionTermination
   */
  public static SshBastionSessionTermination fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SshBastionSessionTermination.class);
  }

  /**
   * Convert an instance of SshBastionSessionTermination to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

