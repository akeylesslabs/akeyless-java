/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LdapTargetDetails
 */
@ApiModel(description = "LdapTargetDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LdapTargetDetails {
  public static final String SERIALIZED_NAME_IMPLEMENTATION_TYPE = "implementation_type";
  @SerializedName(SERIALIZED_NAME_IMPLEMENTATION_TYPE)
  private String implementationType;

  public static final String SERIALIZED_NAME_LDAP_AUDIENCE = "ldap_audience";
  @SerializedName(SERIALIZED_NAME_LDAP_AUDIENCE)
  private String ldapAudience;

  public static final String SERIALIZED_NAME_LDAP_BIND_DN = "ldap_bind_dn";
  @SerializedName(SERIALIZED_NAME_LDAP_BIND_DN)
  private String ldapBindDn;

  public static final String SERIALIZED_NAME_LDAP_BIND_PASSWORD = "ldap_bind_password";
  @SerializedName(SERIALIZED_NAME_LDAP_BIND_PASSWORD)
  private String ldapBindPassword;

  public static final String SERIALIZED_NAME_LDAP_CERTIFICATE = "ldap_certificate";
  @SerializedName(SERIALIZED_NAME_LDAP_CERTIFICATE)
  private String ldapCertificate;

  public static final String SERIALIZED_NAME_LDAP_TOKEN_EXPIRATION = "ldap_token_expiration";
  @SerializedName(SERIALIZED_NAME_LDAP_TOKEN_EXPIRATION)
  private String ldapTokenExpiration;

  public static final String SERIALIZED_NAME_LDAP_URL = "ldap_url";
  @SerializedName(SERIALIZED_NAME_LDAP_URL)
  private String ldapUrl;

  public LdapTargetDetails() { 
  }

  public LdapTargetDetails implementationType(String implementationType) {
    
    this.implementationType = implementationType;
    return this;
  }

   /**
   * Get implementationType
   * @return implementationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImplementationType() {
    return implementationType;
  }


  public void setImplementationType(String implementationType) {
    this.implementationType = implementationType;
  }


  public LdapTargetDetails ldapAudience(String ldapAudience) {
    
    this.ldapAudience = ldapAudience;
    return this;
  }

   /**
   * Get ldapAudience
   * @return ldapAudience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLdapAudience() {
    return ldapAudience;
  }


  public void setLdapAudience(String ldapAudience) {
    this.ldapAudience = ldapAudience;
  }


  public LdapTargetDetails ldapBindDn(String ldapBindDn) {
    
    this.ldapBindDn = ldapBindDn;
    return this;
  }

   /**
   * Get ldapBindDn
   * @return ldapBindDn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLdapBindDn() {
    return ldapBindDn;
  }


  public void setLdapBindDn(String ldapBindDn) {
    this.ldapBindDn = ldapBindDn;
  }


  public LdapTargetDetails ldapBindPassword(String ldapBindPassword) {
    
    this.ldapBindPassword = ldapBindPassword;
    return this;
  }

   /**
   * Get ldapBindPassword
   * @return ldapBindPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLdapBindPassword() {
    return ldapBindPassword;
  }


  public void setLdapBindPassword(String ldapBindPassword) {
    this.ldapBindPassword = ldapBindPassword;
  }


  public LdapTargetDetails ldapCertificate(String ldapCertificate) {
    
    this.ldapCertificate = ldapCertificate;
    return this;
  }

   /**
   * Get ldapCertificate
   * @return ldapCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLdapCertificate() {
    return ldapCertificate;
  }


  public void setLdapCertificate(String ldapCertificate) {
    this.ldapCertificate = ldapCertificate;
  }


  public LdapTargetDetails ldapTokenExpiration(String ldapTokenExpiration) {
    
    this.ldapTokenExpiration = ldapTokenExpiration;
    return this;
  }

   /**
   * Get ldapTokenExpiration
   * @return ldapTokenExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLdapTokenExpiration() {
    return ldapTokenExpiration;
  }


  public void setLdapTokenExpiration(String ldapTokenExpiration) {
    this.ldapTokenExpiration = ldapTokenExpiration;
  }


  public LdapTargetDetails ldapUrl(String ldapUrl) {
    
    this.ldapUrl = ldapUrl;
    return this;
  }

   /**
   * Get ldapUrl
   * @return ldapUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLdapUrl() {
    return ldapUrl;
  }


  public void setLdapUrl(String ldapUrl) {
    this.ldapUrl = ldapUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LdapTargetDetails ldapTargetDetails = (LdapTargetDetails) o;
    return Objects.equals(this.implementationType, ldapTargetDetails.implementationType) &&
        Objects.equals(this.ldapAudience, ldapTargetDetails.ldapAudience) &&
        Objects.equals(this.ldapBindDn, ldapTargetDetails.ldapBindDn) &&
        Objects.equals(this.ldapBindPassword, ldapTargetDetails.ldapBindPassword) &&
        Objects.equals(this.ldapCertificate, ldapTargetDetails.ldapCertificate) &&
        Objects.equals(this.ldapTokenExpiration, ldapTargetDetails.ldapTokenExpiration) &&
        Objects.equals(this.ldapUrl, ldapTargetDetails.ldapUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(implementationType, ldapAudience, ldapBindDn, ldapBindPassword, ldapCertificate, ldapTokenExpiration, ldapUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LdapTargetDetails {\n");
    sb.append("    implementationType: ").append(toIndentedString(implementationType)).append("\n");
    sb.append("    ldapAudience: ").append(toIndentedString(ldapAudience)).append("\n");
    sb.append("    ldapBindDn: ").append(toIndentedString(ldapBindDn)).append("\n");
    sb.append("    ldapBindPassword: ").append(toIndentedString(ldapBindPassword)).append("\n");
    sb.append("    ldapCertificate: ").append(toIndentedString(ldapCertificate)).append("\n");
    sb.append("    ldapTokenExpiration: ").append(toIndentedString(ldapTokenExpiration)).append("\n");
    sb.append("    ldapUrl: ").append(toIndentedString(ldapUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

