/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.AwsStorage;
import io.akeyless.client.model.AzureStorage;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * WebBastionRdpRecord
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class WebBastionRdpRecord {
  public static final String SERIALIZED_NAME_AWS = "aws";
  @SerializedName(SERIALIZED_NAME_AWS)
  @javax.annotation.Nullable
  private AwsStorage aws;

  public static final String SERIALIZED_NAME_AZURE = "azure";
  @SerializedName(SERIALIZED_NAME_AZURE)
  @javax.annotation.Nullable
  private AzureStorage azure;

  public static final String SERIALIZED_NAME_STORAGE_TYPE = "storage_type";
  @SerializedName(SERIALIZED_NAME_STORAGE_TYPE)
  @javax.annotation.Nullable
  private String storageType;

  public WebBastionRdpRecord() {
  }

  public WebBastionRdpRecord aws(@javax.annotation.Nullable AwsStorage aws) {
    this.aws = aws;
    return this;
  }

  /**
   * Get aws
   * @return aws
   */
  @javax.annotation.Nullable
  public AwsStorage getAws() {
    return aws;
  }

  public void setAws(@javax.annotation.Nullable AwsStorage aws) {
    this.aws = aws;
  }


  public WebBastionRdpRecord azure(@javax.annotation.Nullable AzureStorage azure) {
    this.azure = azure;
    return this;
  }

  /**
   * Get azure
   * @return azure
   */
  @javax.annotation.Nullable
  public AzureStorage getAzure() {
    return azure;
  }

  public void setAzure(@javax.annotation.Nullable AzureStorage azure) {
    this.azure = azure;
  }


  public WebBastionRdpRecord storageType(@javax.annotation.Nullable String storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   */
  @javax.annotation.Nullable
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(@javax.annotation.Nullable String storageType) {
    this.storageType = storageType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebBastionRdpRecord webBastionRdpRecord = (WebBastionRdpRecord) o;
    return Objects.equals(this.aws, webBastionRdpRecord.aws) &&
        Objects.equals(this.azure, webBastionRdpRecord.azure) &&
        Objects.equals(this.storageType, webBastionRdpRecord.storageType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aws, azure, storageType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebBastionRdpRecord {\n");
    sb.append("    aws: ").append(toIndentedString(aws)).append("\n");
    sb.append("    azure: ").append(toIndentedString(azure)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aws");
    openapiFields.add("azure");
    openapiFields.add("storage_type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to WebBastionRdpRecord
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!WebBastionRdpRecord.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebBastionRdpRecord is not found in the empty JSON string", WebBastionRdpRecord.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!WebBastionRdpRecord.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebBastionRdpRecord` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `aws`
      if (jsonObj.get("aws") != null && !jsonObj.get("aws").isJsonNull()) {
        AwsStorage.validateJsonElement(jsonObj.get("aws"));
      }
      // validate the optional field `azure`
      if (jsonObj.get("azure") != null && !jsonObj.get("azure").isJsonNull()) {
        AzureStorage.validateJsonElement(jsonObj.get("azure"));
      }
      if ((jsonObj.get("storage_type") != null && !jsonObj.get("storage_type").isJsonNull()) && !jsonObj.get("storage_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storage_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storage_type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebBastionRdpRecord.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebBastionRdpRecord' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebBastionRdpRecord> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebBastionRdpRecord.class));

       return (TypeAdapter<T>) new TypeAdapter<WebBastionRdpRecord>() {
           @Override
           public void write(JsonWriter out, WebBastionRdpRecord value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebBastionRdpRecord read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of WebBastionRdpRecord given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of WebBastionRdpRecord
   * @throws IOException if the JSON string is invalid with respect to WebBastionRdpRecord
   */
  public static WebBastionRdpRecord fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebBastionRdpRecord.class);
  }

  /**
   * Convert an instance of WebBastionRdpRecord to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

