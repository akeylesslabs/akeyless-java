/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RabbitMQTargetDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RabbitMQTargetDetails {
  public static final String SERIALIZED_NAME_RABBITMQ_SERVER_PASSWORD = "rabbitmq_server_password";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_SERVER_PASSWORD)
  private String rabbitmqServerPassword;

  public static final String SERIALIZED_NAME_RABBITMQ_SERVER_URI = "rabbitmq_server_uri";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_SERVER_URI)
  private String rabbitmqServerUri;

  public static final String SERIALIZED_NAME_RABBITMQ_SERVER_USER = "rabbitmq_server_user";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_SERVER_USER)
  private String rabbitmqServerUser;

  public RabbitMQTargetDetails() { 
  }

  public RabbitMQTargetDetails rabbitmqServerPassword(String rabbitmqServerPassword) {
    
    this.rabbitmqServerPassword = rabbitmqServerPassword;
    return this;
  }

   /**
   * Get rabbitmqServerPassword
   * @return rabbitmqServerPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRabbitmqServerPassword() {
    return rabbitmqServerPassword;
  }


  public void setRabbitmqServerPassword(String rabbitmqServerPassword) {
    this.rabbitmqServerPassword = rabbitmqServerPassword;
  }


  public RabbitMQTargetDetails rabbitmqServerUri(String rabbitmqServerUri) {
    
    this.rabbitmqServerUri = rabbitmqServerUri;
    return this;
  }

   /**
   * Get rabbitmqServerUri
   * @return rabbitmqServerUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRabbitmqServerUri() {
    return rabbitmqServerUri;
  }


  public void setRabbitmqServerUri(String rabbitmqServerUri) {
    this.rabbitmqServerUri = rabbitmqServerUri;
  }


  public RabbitMQTargetDetails rabbitmqServerUser(String rabbitmqServerUser) {
    
    this.rabbitmqServerUser = rabbitmqServerUser;
    return this;
  }

   /**
   * Get rabbitmqServerUser
   * @return rabbitmqServerUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRabbitmqServerUser() {
    return rabbitmqServerUser;
  }


  public void setRabbitmqServerUser(String rabbitmqServerUser) {
    this.rabbitmqServerUser = rabbitmqServerUser;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RabbitMQTargetDetails rabbitMQTargetDetails = (RabbitMQTargetDetails) o;
    return Objects.equals(this.rabbitmqServerPassword, rabbitMQTargetDetails.rabbitmqServerPassword) &&
        Objects.equals(this.rabbitmqServerUri, rabbitMQTargetDetails.rabbitmqServerUri) &&
        Objects.equals(this.rabbitmqServerUser, rabbitMQTargetDetails.rabbitmqServerUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rabbitmqServerPassword, rabbitmqServerUri, rabbitmqServerUser);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RabbitMQTargetDetails {\n");
    sb.append("    rabbitmqServerPassword: ").append(toIndentedString(rabbitmqServerPassword)).append("\n");
    sb.append("    rabbitmqServerUri: ").append(toIndentedString(rabbitmqServerUri)).append("\n");
    sb.append("    rabbitmqServerUser: ").append(toIndentedString(rabbitmqServerUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

