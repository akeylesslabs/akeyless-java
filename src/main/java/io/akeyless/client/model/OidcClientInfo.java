/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.AccessOrGroupPermissionAssignment;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * OidcClientInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class OidcClientInfo {
  public static final String SERIALIZED_NAME_ACCESS_PERMISSION_ASSIGNMENT = "access_permission_assignment";
  @SerializedName(SERIALIZED_NAME_ACCESS_PERMISSION_ASSIGNMENT)
  @javax.annotation.Nullable
  private List<AccessOrGroupPermissionAssignment> accessPermissionAssignment = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  @javax.annotation.Nullable
  private List<String> audience = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  @javax.annotation.Nullable
  private String clientId;

  public static final String SERIALIZED_NAME_GRANT_TYPES = "grant_types";
  @SerializedName(SERIALIZED_NAME_GRANT_TYPES)
  @javax.annotation.Nullable
  private List<String> grantTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ISSUER_URL = "issuer_url";
  @SerializedName(SERIALIZED_NAME_ISSUER_URL)
  @javax.annotation.Nullable
  private String issuerUrl;

  public static final String SERIALIZED_NAME_LOGOUT_URIS = "logout_uris";
  @SerializedName(SERIALIZED_NAME_LOGOUT_URIS)
  @javax.annotation.Nullable
  private List<String> logoutUris = new ArrayList<>();

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  @javax.annotation.Nullable
  private Boolean _public;

  public static final String SERIALIZED_NAME_REDIRECT_URIS = "redirect_uris";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URIS)
  @javax.annotation.Nullable
  private List<String> redirectUris = new ArrayList<>();

  public static final String SERIALIZED_NAME_RESPONSE_TYPES = "response_types";
  @SerializedName(SERIALIZED_NAME_RESPONSE_TYPES)
  @javax.annotation.Nullable
  private List<String> responseTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCOPES = "scopes";
  @SerializedName(SERIALIZED_NAME_SCOPES)
  @javax.annotation.Nullable
  private List<String> scopes = new ArrayList<>();

  public OidcClientInfo() {
  }

  public OidcClientInfo accessPermissionAssignment(@javax.annotation.Nullable List<AccessOrGroupPermissionAssignment> accessPermissionAssignment) {
    this.accessPermissionAssignment = accessPermissionAssignment;
    return this;
  }

  public OidcClientInfo addAccessPermissionAssignmentItem(AccessOrGroupPermissionAssignment accessPermissionAssignmentItem) {
    if (this.accessPermissionAssignment == null) {
      this.accessPermissionAssignment = new ArrayList<>();
    }
    this.accessPermissionAssignment.add(accessPermissionAssignmentItem);
    return this;
  }

  /**
   * Get accessPermissionAssignment
   * @return accessPermissionAssignment
   */
  @javax.annotation.Nullable
  public List<AccessOrGroupPermissionAssignment> getAccessPermissionAssignment() {
    return accessPermissionAssignment;
  }

  public void setAccessPermissionAssignment(@javax.annotation.Nullable List<AccessOrGroupPermissionAssignment> accessPermissionAssignment) {
    this.accessPermissionAssignment = accessPermissionAssignment;
  }


  public OidcClientInfo audience(@javax.annotation.Nullable List<String> audience) {
    this.audience = audience;
    return this;
  }

  public OidcClientInfo addAudienceItem(String audienceItem) {
    if (this.audience == null) {
      this.audience = new ArrayList<>();
    }
    this.audience.add(audienceItem);
    return this;
  }

  /**
   * Get audience
   * @return audience
   */
  @javax.annotation.Nullable
  public List<String> getAudience() {
    return audience;
  }

  public void setAudience(@javax.annotation.Nullable List<String> audience) {
    this.audience = audience;
  }


  public OidcClientInfo clientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }


  public OidcClientInfo grantTypes(@javax.annotation.Nullable List<String> grantTypes) {
    this.grantTypes = grantTypes;
    return this;
  }

  public OidcClientInfo addGrantTypesItem(String grantTypesItem) {
    if (this.grantTypes == null) {
      this.grantTypes = new ArrayList<>();
    }
    this.grantTypes.add(grantTypesItem);
    return this;
  }

  /**
   * Get grantTypes
   * @return grantTypes
   */
  @javax.annotation.Nullable
  public List<String> getGrantTypes() {
    return grantTypes;
  }

  public void setGrantTypes(@javax.annotation.Nullable List<String> grantTypes) {
    this.grantTypes = grantTypes;
  }


  public OidcClientInfo issuerUrl(@javax.annotation.Nullable String issuerUrl) {
    this.issuerUrl = issuerUrl;
    return this;
  }

  /**
   * Get issuerUrl
   * @return issuerUrl
   */
  @javax.annotation.Nullable
  public String getIssuerUrl() {
    return issuerUrl;
  }

  public void setIssuerUrl(@javax.annotation.Nullable String issuerUrl) {
    this.issuerUrl = issuerUrl;
  }


  public OidcClientInfo logoutUris(@javax.annotation.Nullable List<String> logoutUris) {
    this.logoutUris = logoutUris;
    return this;
  }

  public OidcClientInfo addLogoutUrisItem(String logoutUrisItem) {
    if (this.logoutUris == null) {
      this.logoutUris = new ArrayList<>();
    }
    this.logoutUris.add(logoutUrisItem);
    return this;
  }

  /**
   * Get logoutUris
   * @return logoutUris
   */
  @javax.annotation.Nullable
  public List<String> getLogoutUris() {
    return logoutUris;
  }

  public void setLogoutUris(@javax.annotation.Nullable List<String> logoutUris) {
    this.logoutUris = logoutUris;
  }


  public OidcClientInfo _public(@javax.annotation.Nullable Boolean _public) {
    this._public = _public;
    return this;
  }

  /**
   * Get _public
   * @return _public
   */
  @javax.annotation.Nullable
  public Boolean getPublic() {
    return _public;
  }

  public void setPublic(@javax.annotation.Nullable Boolean _public) {
    this._public = _public;
  }


  public OidcClientInfo redirectUris(@javax.annotation.Nullable List<String> redirectUris) {
    this.redirectUris = redirectUris;
    return this;
  }

  public OidcClientInfo addRedirectUrisItem(String redirectUrisItem) {
    if (this.redirectUris == null) {
      this.redirectUris = new ArrayList<>();
    }
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

  /**
   * Get redirectUris
   * @return redirectUris
   */
  @javax.annotation.Nullable
  public List<String> getRedirectUris() {
    return redirectUris;
  }

  public void setRedirectUris(@javax.annotation.Nullable List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }


  public OidcClientInfo responseTypes(@javax.annotation.Nullable List<String> responseTypes) {
    this.responseTypes = responseTypes;
    return this;
  }

  public OidcClientInfo addResponseTypesItem(String responseTypesItem) {
    if (this.responseTypes == null) {
      this.responseTypes = new ArrayList<>();
    }
    this.responseTypes.add(responseTypesItem);
    return this;
  }

  /**
   * Get responseTypes
   * @return responseTypes
   */
  @javax.annotation.Nullable
  public List<String> getResponseTypes() {
    return responseTypes;
  }

  public void setResponseTypes(@javax.annotation.Nullable List<String> responseTypes) {
    this.responseTypes = responseTypes;
  }


  public OidcClientInfo scopes(@javax.annotation.Nullable List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public OidcClientInfo addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

  /**
   * Get scopes
   * @return scopes
   */
  @javax.annotation.Nullable
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(@javax.annotation.Nullable List<String> scopes) {
    this.scopes = scopes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OidcClientInfo oidcClientInfo = (OidcClientInfo) o;
    return Objects.equals(this.accessPermissionAssignment, oidcClientInfo.accessPermissionAssignment) &&
        Objects.equals(this.audience, oidcClientInfo.audience) &&
        Objects.equals(this.clientId, oidcClientInfo.clientId) &&
        Objects.equals(this.grantTypes, oidcClientInfo.grantTypes) &&
        Objects.equals(this.issuerUrl, oidcClientInfo.issuerUrl) &&
        Objects.equals(this.logoutUris, oidcClientInfo.logoutUris) &&
        Objects.equals(this._public, oidcClientInfo._public) &&
        Objects.equals(this.redirectUris, oidcClientInfo.redirectUris) &&
        Objects.equals(this.responseTypes, oidcClientInfo.responseTypes) &&
        Objects.equals(this.scopes, oidcClientInfo.scopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessPermissionAssignment, audience, clientId, grantTypes, issuerUrl, logoutUris, _public, redirectUris, responseTypes, scopes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OidcClientInfo {\n");
    sb.append("    accessPermissionAssignment: ").append(toIndentedString(accessPermissionAssignment)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    grantTypes: ").append(toIndentedString(grantTypes)).append("\n");
    sb.append("    issuerUrl: ").append(toIndentedString(issuerUrl)).append("\n");
    sb.append("    logoutUris: ").append(toIndentedString(logoutUris)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("    responseTypes: ").append(toIndentedString(responseTypes)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_permission_assignment");
    openapiFields.add("audience");
    openapiFields.add("client_id");
    openapiFields.add("grant_types");
    openapiFields.add("issuer_url");
    openapiFields.add("logout_uris");
    openapiFields.add("public");
    openapiFields.add("redirect_uris");
    openapiFields.add("response_types");
    openapiFields.add("scopes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OidcClientInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OidcClientInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OidcClientInfo is not found in the empty JSON string", OidcClientInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OidcClientInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OidcClientInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("access_permission_assignment") != null && !jsonObj.get("access_permission_assignment").isJsonNull()) {
        JsonArray jsonArrayaccessPermissionAssignment = jsonObj.getAsJsonArray("access_permission_assignment");
        if (jsonArrayaccessPermissionAssignment != null) {
          // ensure the json data is an array
          if (!jsonObj.get("access_permission_assignment").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `access_permission_assignment` to be an array in the JSON string but got `%s`", jsonObj.get("access_permission_assignment").toString()));
          }

          // validate the optional field `access_permission_assignment` (array)
          for (int i = 0; i < jsonArrayaccessPermissionAssignment.size(); i++) {
            AccessOrGroupPermissionAssignment.validateJsonElement(jsonArrayaccessPermissionAssignment.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull() && !jsonObj.get("audience").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `audience` to be an array in the JSON string but got `%s`", jsonObj.get("audience").toString()));
      }
      if ((jsonObj.get("client_id") != null && !jsonObj.get("client_id").isJsonNull()) && !jsonObj.get("client_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("grant_types") != null && !jsonObj.get("grant_types").isJsonNull() && !jsonObj.get("grant_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `grant_types` to be an array in the JSON string but got `%s`", jsonObj.get("grant_types").toString()));
      }
      if ((jsonObj.get("issuer_url") != null && !jsonObj.get("issuer_url").isJsonNull()) && !jsonObj.get("issuer_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuer_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuer_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("logout_uris") != null && !jsonObj.get("logout_uris").isJsonNull() && !jsonObj.get("logout_uris").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `logout_uris` to be an array in the JSON string but got `%s`", jsonObj.get("logout_uris").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redirect_uris") != null && !jsonObj.get("redirect_uris").isJsonNull() && !jsonObj.get("redirect_uris").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirect_uris` to be an array in the JSON string but got `%s`", jsonObj.get("redirect_uris").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("response_types") != null && !jsonObj.get("response_types").isJsonNull() && !jsonObj.get("response_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `response_types` to be an array in the JSON string but got `%s`", jsonObj.get("response_types").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("scopes") != null && !jsonObj.get("scopes").isJsonNull() && !jsonObj.get("scopes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `scopes` to be an array in the JSON string but got `%s`", jsonObj.get("scopes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OidcClientInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OidcClientInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OidcClientInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OidcClientInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<OidcClientInfo>() {
           @Override
           public void write(JsonWriter out, OidcClientInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OidcClientInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OidcClientInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OidcClientInfo
   * @throws IOException if the JSON string is invalid with respect to OidcClientInfo
   */
  public static OidcClientInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OidcClientInfo.class);
  }

  /**
   * Convert an instance of OidcClientInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

