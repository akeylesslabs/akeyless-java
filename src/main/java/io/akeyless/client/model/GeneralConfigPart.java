/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * GeneralConfigPart
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GeneralConfigPart {
  public static final String SERIALIZED_NAME_AKEYLESS_URL = "akeyless_url";
  @SerializedName(SERIALIZED_NAME_AKEYLESS_URL)
  @javax.annotation.Nullable
  private String akeylessUrl;

  public static final String SERIALIZED_NAME_API_TOKEN_TTL = "api_token_ttl";
  @SerializedName(SERIALIZED_NAME_API_TOKEN_TTL)
  @javax.annotation.Nullable
  private String apiTokenTtl;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_SNI_PROXY = "enable_sni_proxy";
  @SerializedName(SERIALIZED_NAME_ENABLE_SNI_PROXY)
  @javax.annotation.Nullable
  private Boolean enableSniProxy;

  public static final String SERIALIZED_NAME_ENABLE_TLS = "enable_tls";
  @SerializedName(SERIALIZED_NAME_ENABLE_TLS)
  @javax.annotation.Nullable
  private Boolean enableTls;

  public static final String SERIALIZED_NAME_ENABLE_TLS_CONFIGURE = "enable_tls_configure";
  @SerializedName(SERIALIZED_NAME_ENABLE_TLS_CONFIGURE)
  @javax.annotation.Nullable
  private Boolean enableTlsConfigure;

  public static final String SERIALIZED_NAME_ENABLE_TLS_CURL = "enable_tls_curl";
  @SerializedName(SERIALIZED_NAME_ENABLE_TLS_CURL)
  @javax.annotation.Nullable
  private Boolean enableTlsCurl;

  public static final String SERIALIZED_NAME_ENABLE_TLS_HVP = "enable_tls_hvp";
  @SerializedName(SERIALIZED_NAME_ENABLE_TLS_HVP)
  @javax.annotation.Nullable
  private Boolean enableTlsHvp;

  public static final String SERIALIZED_NAME_GW_CLUSTER_URL = "gw_cluster_url";
  @SerializedName(SERIALIZED_NAME_GW_CLUSTER_URL)
  @javax.annotation.Nullable
  private String gwClusterUrl;

  public static final String SERIALIZED_NAME_HVP_ROUTE_VERSION = "hvp_route_version";
  @SerializedName(SERIALIZED_NAME_HVP_ROUTE_VERSION)
  @javax.annotation.Nullable
  private Long hvpRouteVersion;

  public static final String SERIALIZED_NAME_NOTIFY_ON_STATUS_CHANGE = "notify_on_status_change";
  @SerializedName(SERIALIZED_NAME_NOTIFY_ON_STATUS_CHANGE)
  @javax.annotation.Nullable
  private Boolean notifyOnStatusChange;

  public static final String SERIALIZED_NAME_TCP_PORT = "tcp_port";
  @SerializedName(SERIALIZED_NAME_TCP_PORT)
  @javax.annotation.Nullable
  private String tcpPort;

  public static final String SERIALIZED_NAME_TLS_CERT = "tls_cert";
  @SerializedName(SERIALIZED_NAME_TLS_CERT)
  @javax.annotation.Nullable
  private String tlsCert;

  public static final String SERIALIZED_NAME_TLS_KEY = "tls_key";
  @SerializedName(SERIALIZED_NAME_TLS_KEY)
  @javax.annotation.Nullable
  private String tlsKey;

  public GeneralConfigPart() {
  }

  public GeneralConfigPart akeylessUrl(@javax.annotation.Nullable String akeylessUrl) {
    this.akeylessUrl = akeylessUrl;
    return this;
  }

  /**
   * AkeylessUrl is here for BC only. Gator will still return it if it exists in the configuration, but new clients (&gt;&#x3D;2.34.0) will ignore it and override it with what exists in their local file. It will no longer be sent to Gator for update, so new clusters will only have the default value saved in the DB.
   * @return akeylessUrl
   */
  @javax.annotation.Nullable
  public String getAkeylessUrl() {
    return akeylessUrl;
  }

  public void setAkeylessUrl(@javax.annotation.Nullable String akeylessUrl) {
    this.akeylessUrl = akeylessUrl;
  }


  public GeneralConfigPart apiTokenTtl(@javax.annotation.Nullable String apiTokenTtl) {
    this.apiTokenTtl = apiTokenTtl;
    return this;
  }

  /**
   * Get apiTokenTtl
   * @return apiTokenTtl
   */
  @javax.annotation.Nullable
  public String getApiTokenTtl() {
    return apiTokenTtl;
  }

  public void setApiTokenTtl(@javax.annotation.Nullable String apiTokenTtl) {
    this.apiTokenTtl = apiTokenTtl;
  }


  public GeneralConfigPart displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public GeneralConfigPart enableSniProxy(@javax.annotation.Nullable Boolean enableSniProxy) {
    this.enableSniProxy = enableSniProxy;
    return this;
  }

  /**
   * Get enableSniProxy
   * @return enableSniProxy
   */
  @javax.annotation.Nullable
  public Boolean getEnableSniProxy() {
    return enableSniProxy;
  }

  public void setEnableSniProxy(@javax.annotation.Nullable Boolean enableSniProxy) {
    this.enableSniProxy = enableSniProxy;
  }


  public GeneralConfigPart enableTls(@javax.annotation.Nullable Boolean enableTls) {
    this.enableTls = enableTls;
    return this;
  }

  /**
   * Get enableTls
   * @return enableTls
   */
  @javax.annotation.Nullable
  public Boolean getEnableTls() {
    return enableTls;
  }

  public void setEnableTls(@javax.annotation.Nullable Boolean enableTls) {
    this.enableTls = enableTls;
  }


  public GeneralConfigPart enableTlsConfigure(@javax.annotation.Nullable Boolean enableTlsConfigure) {
    this.enableTlsConfigure = enableTlsConfigure;
    return this;
  }

  /**
   * Get enableTlsConfigure
   * @return enableTlsConfigure
   */
  @javax.annotation.Nullable
  public Boolean getEnableTlsConfigure() {
    return enableTlsConfigure;
  }

  public void setEnableTlsConfigure(@javax.annotation.Nullable Boolean enableTlsConfigure) {
    this.enableTlsConfigure = enableTlsConfigure;
  }


  public GeneralConfigPart enableTlsCurl(@javax.annotation.Nullable Boolean enableTlsCurl) {
    this.enableTlsCurl = enableTlsCurl;
    return this;
  }

  /**
   * Get enableTlsCurl
   * @return enableTlsCurl
   */
  @javax.annotation.Nullable
  public Boolean getEnableTlsCurl() {
    return enableTlsCurl;
  }

  public void setEnableTlsCurl(@javax.annotation.Nullable Boolean enableTlsCurl) {
    this.enableTlsCurl = enableTlsCurl;
  }


  public GeneralConfigPart enableTlsHvp(@javax.annotation.Nullable Boolean enableTlsHvp) {
    this.enableTlsHvp = enableTlsHvp;
    return this;
  }

  /**
   * Get enableTlsHvp
   * @return enableTlsHvp
   */
  @javax.annotation.Nullable
  public Boolean getEnableTlsHvp() {
    return enableTlsHvp;
  }

  public void setEnableTlsHvp(@javax.annotation.Nullable Boolean enableTlsHvp) {
    this.enableTlsHvp = enableTlsHvp;
  }


  public GeneralConfigPart gwClusterUrl(@javax.annotation.Nullable String gwClusterUrl) {
    this.gwClusterUrl = gwClusterUrl;
    return this;
  }

  /**
   * Get gwClusterUrl
   * @return gwClusterUrl
   */
  @javax.annotation.Nullable
  public String getGwClusterUrl() {
    return gwClusterUrl;
  }

  public void setGwClusterUrl(@javax.annotation.Nullable String gwClusterUrl) {
    this.gwClusterUrl = gwClusterUrl;
  }


  public GeneralConfigPart hvpRouteVersion(@javax.annotation.Nullable Long hvpRouteVersion) {
    this.hvpRouteVersion = hvpRouteVersion;
    return this;
  }

  /**
   * Get hvpRouteVersion
   * @return hvpRouteVersion
   */
  @javax.annotation.Nullable
  public Long getHvpRouteVersion() {
    return hvpRouteVersion;
  }

  public void setHvpRouteVersion(@javax.annotation.Nullable Long hvpRouteVersion) {
    this.hvpRouteVersion = hvpRouteVersion;
  }


  public GeneralConfigPart notifyOnStatusChange(@javax.annotation.Nullable Boolean notifyOnStatusChange) {
    this.notifyOnStatusChange = notifyOnStatusChange;
    return this;
  }

  /**
   * Get notifyOnStatusChange
   * @return notifyOnStatusChange
   */
  @javax.annotation.Nullable
  public Boolean getNotifyOnStatusChange() {
    return notifyOnStatusChange;
  }

  public void setNotifyOnStatusChange(@javax.annotation.Nullable Boolean notifyOnStatusChange) {
    this.notifyOnStatusChange = notifyOnStatusChange;
  }


  public GeneralConfigPart tcpPort(@javax.annotation.Nullable String tcpPort) {
    this.tcpPort = tcpPort;
    return this;
  }

  /**
   * Get tcpPort
   * @return tcpPort
   */
  @javax.annotation.Nullable
  public String getTcpPort() {
    return tcpPort;
  }

  public void setTcpPort(@javax.annotation.Nullable String tcpPort) {
    this.tcpPort = tcpPort;
  }


  public GeneralConfigPart tlsCert(@javax.annotation.Nullable String tlsCert) {
    this.tlsCert = tlsCert;
    return this;
  }

  /**
   * Get tlsCert
   * @return tlsCert
   */
  @javax.annotation.Nullable
  public String getTlsCert() {
    return tlsCert;
  }

  public void setTlsCert(@javax.annotation.Nullable String tlsCert) {
    this.tlsCert = tlsCert;
  }


  public GeneralConfigPart tlsKey(@javax.annotation.Nullable String tlsKey) {
    this.tlsKey = tlsKey;
    return this;
  }

  /**
   * Get tlsKey
   * @return tlsKey
   */
  @javax.annotation.Nullable
  public String getTlsKey() {
    return tlsKey;
  }

  public void setTlsKey(@javax.annotation.Nullable String tlsKey) {
    this.tlsKey = tlsKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralConfigPart generalConfigPart = (GeneralConfigPart) o;
    return Objects.equals(this.akeylessUrl, generalConfigPart.akeylessUrl) &&
        Objects.equals(this.apiTokenTtl, generalConfigPart.apiTokenTtl) &&
        Objects.equals(this.displayName, generalConfigPart.displayName) &&
        Objects.equals(this.enableSniProxy, generalConfigPart.enableSniProxy) &&
        Objects.equals(this.enableTls, generalConfigPart.enableTls) &&
        Objects.equals(this.enableTlsConfigure, generalConfigPart.enableTlsConfigure) &&
        Objects.equals(this.enableTlsCurl, generalConfigPart.enableTlsCurl) &&
        Objects.equals(this.enableTlsHvp, generalConfigPart.enableTlsHvp) &&
        Objects.equals(this.gwClusterUrl, generalConfigPart.gwClusterUrl) &&
        Objects.equals(this.hvpRouteVersion, generalConfigPart.hvpRouteVersion) &&
        Objects.equals(this.notifyOnStatusChange, generalConfigPart.notifyOnStatusChange) &&
        Objects.equals(this.tcpPort, generalConfigPart.tcpPort) &&
        Objects.equals(this.tlsCert, generalConfigPart.tlsCert) &&
        Objects.equals(this.tlsKey, generalConfigPart.tlsKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(akeylessUrl, apiTokenTtl, displayName, enableSniProxy, enableTls, enableTlsConfigure, enableTlsCurl, enableTlsHvp, gwClusterUrl, hvpRouteVersion, notifyOnStatusChange, tcpPort, tlsCert, tlsKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralConfigPart {\n");
    sb.append("    akeylessUrl: ").append(toIndentedString(akeylessUrl)).append("\n");
    sb.append("    apiTokenTtl: ").append(toIndentedString(apiTokenTtl)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableSniProxy: ").append(toIndentedString(enableSniProxy)).append("\n");
    sb.append("    enableTls: ").append(toIndentedString(enableTls)).append("\n");
    sb.append("    enableTlsConfigure: ").append(toIndentedString(enableTlsConfigure)).append("\n");
    sb.append("    enableTlsCurl: ").append(toIndentedString(enableTlsCurl)).append("\n");
    sb.append("    enableTlsHvp: ").append(toIndentedString(enableTlsHvp)).append("\n");
    sb.append("    gwClusterUrl: ").append(toIndentedString(gwClusterUrl)).append("\n");
    sb.append("    hvpRouteVersion: ").append(toIndentedString(hvpRouteVersion)).append("\n");
    sb.append("    notifyOnStatusChange: ").append(toIndentedString(notifyOnStatusChange)).append("\n");
    sb.append("    tcpPort: ").append(toIndentedString(tcpPort)).append("\n");
    sb.append("    tlsCert: ").append(toIndentedString(tlsCert)).append("\n");
    sb.append("    tlsKey: ").append(toIndentedString(tlsKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("akeyless_url");
    openapiFields.add("api_token_ttl");
    openapiFields.add("display_name");
    openapiFields.add("enable_sni_proxy");
    openapiFields.add("enable_tls");
    openapiFields.add("enable_tls_configure");
    openapiFields.add("enable_tls_curl");
    openapiFields.add("enable_tls_hvp");
    openapiFields.add("gw_cluster_url");
    openapiFields.add("hvp_route_version");
    openapiFields.add("notify_on_status_change");
    openapiFields.add("tcp_port");
    openapiFields.add("tls_cert");
    openapiFields.add("tls_key");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GeneralConfigPart
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GeneralConfigPart.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GeneralConfigPart is not found in the empty JSON string", GeneralConfigPart.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GeneralConfigPart.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GeneralConfigPart` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("akeyless_url") != null && !jsonObj.get("akeyless_url").isJsonNull()) && !jsonObj.get("akeyless_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `akeyless_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("akeyless_url").toString()));
      }
      if ((jsonObj.get("api_token_ttl") != null && !jsonObj.get("api_token_ttl").isJsonNull()) && !jsonObj.get("api_token_ttl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_token_ttl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_token_ttl").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("gw_cluster_url") != null && !jsonObj.get("gw_cluster_url").isJsonNull()) && !jsonObj.get("gw_cluster_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gw_cluster_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gw_cluster_url").toString()));
      }
      if ((jsonObj.get("tcp_port") != null && !jsonObj.get("tcp_port").isJsonNull()) && !jsonObj.get("tcp_port").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tcp_port` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tcp_port").toString()));
      }
      if ((jsonObj.get("tls_cert") != null && !jsonObj.get("tls_cert").isJsonNull()) && !jsonObj.get("tls_cert").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tls_cert` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tls_cert").toString()));
      }
      if ((jsonObj.get("tls_key") != null && !jsonObj.get("tls_key").isJsonNull()) && !jsonObj.get("tls_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tls_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tls_key").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GeneralConfigPart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GeneralConfigPart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GeneralConfigPart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GeneralConfigPart.class));

       return (TypeAdapter<T>) new TypeAdapter<GeneralConfigPart>() {
           @Override
           public void write(JsonWriter out, GeneralConfigPart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GeneralConfigPart read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GeneralConfigPart given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GeneralConfigPart
   * @throws IOException if the JSON string is invalid with respect to GeneralConfigPart
   */
  public static GeneralConfigPart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GeneralConfigPart.class);
  }

  /**
   * Convert an instance of GeneralConfigPart to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

