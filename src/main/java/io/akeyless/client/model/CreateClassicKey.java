/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CreateClassicKey is a command that creates classic key
 */
@ApiModel(description = "CreateClassicKey is a command that creates classic key")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateClassicKey {
  public static final String SERIALIZED_NAME_ALG = "alg";
  @SerializedName(SERIALIZED_NAME_ALG)
  private String alg;

  public static final String SERIALIZED_NAME_AUTO_ROTATE = "auto-rotate";
  @SerializedName(SERIALIZED_NAME_AUTO_ROTATE)
  private String autoRotate;

  public static final String SERIALIZED_NAME_CERT_FILE_DATA = "cert-file-data";
  @SerializedName(SERIALIZED_NAME_CERT_FILE_DATA)
  private String certFileData;

  public static final String SERIALIZED_NAME_CERTIFICATE_COMMON_NAME = "certificate-common-name";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_COMMON_NAME)
  private String certificateCommonName;

  public static final String SERIALIZED_NAME_CERTIFICATE_COUNTRY = "certificate-country";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_COUNTRY)
  private String certificateCountry;

  public static final String SERIALIZED_NAME_CERTIFICATE_DIGEST_ALGO = "certificate-digest-algo";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_DIGEST_ALGO)
  private String certificateDigestAlgo;

  public static final String SERIALIZED_NAME_CERTIFICATE_FORMAT = "certificate-format";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_FORMAT)
  private String certificateFormat;

  public static final String SERIALIZED_NAME_CERTIFICATE_LOCALITY = "certificate-locality";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_LOCALITY)
  private String certificateLocality;

  public static final String SERIALIZED_NAME_CERTIFICATE_ORGANIZATION = "certificate-organization";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_ORGANIZATION)
  private String certificateOrganization;

  public static final String SERIALIZED_NAME_CERTIFICATE_PROVINCE = "certificate-province";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_PROVINCE)
  private String certificateProvince;

  public static final String SERIALIZED_NAME_CERTIFICATE_TTL = "certificate-ttl";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_TTL)
  private Long certificateTtl;

  public static final String SERIALIZED_NAME_CONF_FILE_DATA = "conf-file-data";
  @SerializedName(SERIALIZED_NAME_CONF_FILE_DATA)
  private String confFileData;

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  private String deleteProtection;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXPIRATION_EVENT_IN = "expiration-event-in";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_EVENT_IN)
  private List<String> expirationEventIn = null;

  public static final String SERIALIZED_NAME_GENERATE_SELF_SIGNED_CERTIFICATE = "generate-self-signed-certificate";
  @SerializedName(SERIALIZED_NAME_GENERATE_SELF_SIGNED_CERTIFICATE)
  private Boolean generateSelfSignedCertificate;

  public static final String SERIALIZED_NAME_GPG_ALG = "gpg-alg";
  @SerializedName(SERIALIZED_NAME_GPG_ALG)
  private String gpgAlg;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_KEY_DATA = "key-data";
  @SerializedName(SERIALIZED_NAME_KEY_DATA)
  private String keyData;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROTECTION_KEY_NAME = "protection-key-name";
  @SerializedName(SERIALIZED_NAME_PROTECTION_KEY_NAME)
  private String protectionKeyName;

  public static final String SERIALIZED_NAME_ROTATION_EVENT_IN = "rotation-event-in";
  @SerializedName(SERIALIZED_NAME_ROTATION_EVENT_IN)
  private List<String> rotationEventIn = null;

  public static final String SERIALIZED_NAME_ROTATION_INTERVAL = "rotation-interval";
  @SerializedName(SERIALIZED_NAME_ROTATION_INTERVAL)
  private String rotationInterval;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public CreateClassicKey() { 
  }

  public CreateClassicKey alg(String alg) {
    
    this.alg = alg;
    return this;
  }

   /**
   * Classic Key type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, RSA1024, RSA2048, RSA3072, RSA4096, EC256, EC384, GPG]
   * @return alg
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Classic Key type; options: [AES128GCM, AES256GCM, AES128SIV, AES256SIV, RSA1024, RSA2048, RSA3072, RSA4096, EC256, EC384, GPG]")

  public String getAlg() {
    return alg;
  }


  public void setAlg(String alg) {
    this.alg = alg;
  }


  public CreateClassicKey autoRotate(String autoRotate) {
    
    this.autoRotate = autoRotate;
    return this;
  }

   /**
   * Whether to automatically rotate every rotation_interval days, or disable existing automatic rotation [true/false]
   * @return autoRotate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to automatically rotate every rotation_interval days, or disable existing automatic rotation [true/false]")

  public String getAutoRotate() {
    return autoRotate;
  }


  public void setAutoRotate(String autoRotate) {
    this.autoRotate = autoRotate;
  }


  public CreateClassicKey certFileData(String certFileData) {
    
    this.certFileData = certFileData;
    return this;
  }

   /**
   * Certificate in a PEM format.
   * @return certFileData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Certificate in a PEM format.")

  public String getCertFileData() {
    return certFileData;
  }


  public void setCertFileData(String certFileData) {
    this.certFileData = certFileData;
  }


  public CreateClassicKey certificateCommonName(String certificateCommonName) {
    
    this.certificateCommonName = certificateCommonName;
    return this;
  }

   /**
   * Common name for the generated certificate. Relevant only for generate-self-signed-certificate.
   * @return certificateCommonName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Common name for the generated certificate. Relevant only for generate-self-signed-certificate.")

  public String getCertificateCommonName() {
    return certificateCommonName;
  }


  public void setCertificateCommonName(String certificateCommonName) {
    this.certificateCommonName = certificateCommonName;
  }


  public CreateClassicKey certificateCountry(String certificateCountry) {
    
    this.certificateCountry = certificateCountry;
    return this;
  }

   /**
   * Country name for the generated certificate. Relevant only for generate-self-signed-certificate.
   * @return certificateCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country name for the generated certificate. Relevant only for generate-self-signed-certificate.")

  public String getCertificateCountry() {
    return certificateCountry;
  }


  public void setCertificateCountry(String certificateCountry) {
    this.certificateCountry = certificateCountry;
  }


  public CreateClassicKey certificateDigestAlgo(String certificateDigestAlgo) {
    
    this.certificateDigestAlgo = certificateDigestAlgo;
    return this;
  }

   /**
   * Digest algorithm to be used for the certificate key signing. Currently, we support only \&quot;sha256\&quot; so we hide this option for CLI.
   * @return certificateDigestAlgo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Digest algorithm to be used for the certificate key signing. Currently, we support only \"sha256\" so we hide this option for CLI.")

  public String getCertificateDigestAlgo() {
    return certificateDigestAlgo;
  }


  public void setCertificateDigestAlgo(String certificateDigestAlgo) {
    this.certificateDigestAlgo = certificateDigestAlgo;
  }


  public CreateClassicKey certificateFormat(String certificateFormat) {
    
    this.certificateFormat = certificateFormat;
    return this;
  }

   /**
   * Get certificateFormat
   * @return certificateFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertificateFormat() {
    return certificateFormat;
  }


  public void setCertificateFormat(String certificateFormat) {
    this.certificateFormat = certificateFormat;
  }


  public CreateClassicKey certificateLocality(String certificateLocality) {
    
    this.certificateLocality = certificateLocality;
    return this;
  }

   /**
   * Locality for the generated certificate. Relevant only for generate-self-signed-certificate.
   * @return certificateLocality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Locality for the generated certificate. Relevant only for generate-self-signed-certificate.")

  public String getCertificateLocality() {
    return certificateLocality;
  }


  public void setCertificateLocality(String certificateLocality) {
    this.certificateLocality = certificateLocality;
  }


  public CreateClassicKey certificateOrganization(String certificateOrganization) {
    
    this.certificateOrganization = certificateOrganization;
    return this;
  }

   /**
   * Organization name for the generated certificate. Relevant only for generate-self-signed-certificate.
   * @return certificateOrganization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organization name for the generated certificate. Relevant only for generate-self-signed-certificate.")

  public String getCertificateOrganization() {
    return certificateOrganization;
  }


  public void setCertificateOrganization(String certificateOrganization) {
    this.certificateOrganization = certificateOrganization;
  }


  public CreateClassicKey certificateProvince(String certificateProvince) {
    
    this.certificateProvince = certificateProvince;
    return this;
  }

   /**
   * Province name for the generated certificate. Relevant only for generate-self-signed-certificate.
   * @return certificateProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Province name for the generated certificate. Relevant only for generate-self-signed-certificate.")

  public String getCertificateProvince() {
    return certificateProvince;
  }


  public void setCertificateProvince(String certificateProvince) {
    this.certificateProvince = certificateProvince;
  }


  public CreateClassicKey certificateTtl(Long certificateTtl) {
    
    this.certificateTtl = certificateTtl;
    return this;
  }

   /**
   * TTL in days for the generated certificate. Required only for generate-self-signed-certificate.
   * @return certificateTtl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "TTL in days for the generated certificate. Required only for generate-self-signed-certificate.")

  public Long getCertificateTtl() {
    return certificateTtl;
  }


  public void setCertificateTtl(Long certificateTtl) {
    this.certificateTtl = certificateTtl;
  }


  public CreateClassicKey confFileData(String confFileData) {
    
    this.confFileData = confFileData;
    return this;
  }

   /**
   * The csr config data in base64 encoding
   * @return confFileData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The csr config data in base64 encoding")

  public String getConfFileData() {
    return confFileData;
  }


  public void setConfFileData(String confFileData) {
    this.confFileData = confFileData;
  }


  public CreateClassicKey deleteProtection(String deleteProtection) {
    
    this.deleteProtection = deleteProtection;
    return this;
  }

   /**
   * Protection from accidental deletion of this object [true/false]
   * @return deleteProtection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Protection from accidental deletion of this object [true/false]")

  public String getDeleteProtection() {
    return deleteProtection;
  }


  public void setDeleteProtection(String deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public CreateClassicKey description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the object
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the object")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CreateClassicKey expirationEventIn(List<String> expirationEventIn) {
    
    this.expirationEventIn = expirationEventIn;
    return this;
  }

  public CreateClassicKey addExpirationEventInItem(String expirationEventInItem) {
    if (this.expirationEventIn == null) {
      this.expirationEventIn = new ArrayList<String>();
    }
    this.expirationEventIn.add(expirationEventInItem);
    return this;
  }

   /**
   * How many days before the expiration of the certificate would you like to be notified.
   * @return expirationEventIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How many days before the expiration of the certificate would you like to be notified.")

  public List<String> getExpirationEventIn() {
    return expirationEventIn;
  }


  public void setExpirationEventIn(List<String> expirationEventIn) {
    this.expirationEventIn = expirationEventIn;
  }


  public CreateClassicKey generateSelfSignedCertificate(Boolean generateSelfSignedCertificate) {
    
    this.generateSelfSignedCertificate = generateSelfSignedCertificate;
    return this;
  }

   /**
   * Whether to generate a self signed certificate with the key. If set, --certificate-ttl must be provided.
   * @return generateSelfSignedCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to generate a self signed certificate with the key. If set, --certificate-ttl must be provided.")

  public Boolean getGenerateSelfSignedCertificate() {
    return generateSelfSignedCertificate;
  }


  public void setGenerateSelfSignedCertificate(Boolean generateSelfSignedCertificate) {
    this.generateSelfSignedCertificate = generateSelfSignedCertificate;
  }


  public CreateClassicKey gpgAlg(String gpgAlg) {
    
    this.gpgAlg = gpgAlg;
    return this;
  }

   /**
   * gpg alg: Relevant only if GPG key type selected; options: [RSA1024, RSA2048, RSA3072, RSA4096, Ed25519]
   * @return gpgAlg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "gpg alg: Relevant only if GPG key type selected; options: [RSA1024, RSA2048, RSA3072, RSA4096, Ed25519]")

  public String getGpgAlg() {
    return gpgAlg;
  }


  public void setGpgAlg(String gpgAlg) {
    this.gpgAlg = gpgAlg;
  }


  public CreateClassicKey json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public CreateClassicKey keyData(String keyData) {
    
    this.keyData = keyData;
    return this;
  }

   /**
   * Base64-encoded classic key value
   * @return keyData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64-encoded classic key value")

  public String getKeyData() {
    return keyData;
  }


  public void setKeyData(String keyData) {
    this.keyData = keyData;
  }


  public CreateClassicKey metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Deprecated - use description
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated - use description")

  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public CreateClassicKey name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * ClassicKey name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "ClassicKey name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateClassicKey protectionKeyName(String protectionKeyName) {
    
    this.protectionKeyName = protectionKeyName;
    return this;
  }

   /**
   * The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)
   * @return protectionKeyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)")

  public String getProtectionKeyName() {
    return protectionKeyName;
  }


  public void setProtectionKeyName(String protectionKeyName) {
    this.protectionKeyName = protectionKeyName;
  }


  public CreateClassicKey rotationEventIn(List<String> rotationEventIn) {
    
    this.rotationEventIn = rotationEventIn;
    return this;
  }

  public CreateClassicKey addRotationEventInItem(String rotationEventInItem) {
    if (this.rotationEventIn == null) {
      this.rotationEventIn = new ArrayList<String>();
    }
    this.rotationEventIn.add(rotationEventInItem);
    return this;
  }

   /**
   * How many days before the rotation of the item would you like to be notified
   * @return rotationEventIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How many days before the rotation of the item would you like to be notified")

  public List<String> getRotationEventIn() {
    return rotationEventIn;
  }


  public void setRotationEventIn(List<String> rotationEventIn) {
    this.rotationEventIn = rotationEventIn;
  }


  public CreateClassicKey rotationInterval(String rotationInterval) {
    
    this.rotationInterval = rotationInterval;
    return this;
  }

   /**
   * The number of days to wait between every automatic rotation (1-365)
   * @return rotationInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of days to wait between every automatic rotation (1-365)")

  public String getRotationInterval() {
    return rotationInterval;
  }


  public void setRotationInterval(String rotationInterval) {
    this.rotationInterval = rotationInterval;
  }


  public CreateClassicKey tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public CreateClassicKey addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Add tags attached to this object
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add tags attached to this object")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public CreateClassicKey token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public CreateClassicKey uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClassicKey createClassicKey = (CreateClassicKey) o;
    return Objects.equals(this.alg, createClassicKey.alg) &&
        Objects.equals(this.autoRotate, createClassicKey.autoRotate) &&
        Objects.equals(this.certFileData, createClassicKey.certFileData) &&
        Objects.equals(this.certificateCommonName, createClassicKey.certificateCommonName) &&
        Objects.equals(this.certificateCountry, createClassicKey.certificateCountry) &&
        Objects.equals(this.certificateDigestAlgo, createClassicKey.certificateDigestAlgo) &&
        Objects.equals(this.certificateFormat, createClassicKey.certificateFormat) &&
        Objects.equals(this.certificateLocality, createClassicKey.certificateLocality) &&
        Objects.equals(this.certificateOrganization, createClassicKey.certificateOrganization) &&
        Objects.equals(this.certificateProvince, createClassicKey.certificateProvince) &&
        Objects.equals(this.certificateTtl, createClassicKey.certificateTtl) &&
        Objects.equals(this.confFileData, createClassicKey.confFileData) &&
        Objects.equals(this.deleteProtection, createClassicKey.deleteProtection) &&
        Objects.equals(this.description, createClassicKey.description) &&
        Objects.equals(this.expirationEventIn, createClassicKey.expirationEventIn) &&
        Objects.equals(this.generateSelfSignedCertificate, createClassicKey.generateSelfSignedCertificate) &&
        Objects.equals(this.gpgAlg, createClassicKey.gpgAlg) &&
        Objects.equals(this.json, createClassicKey.json) &&
        Objects.equals(this.keyData, createClassicKey.keyData) &&
        Objects.equals(this.metadata, createClassicKey.metadata) &&
        Objects.equals(this.name, createClassicKey.name) &&
        Objects.equals(this.protectionKeyName, createClassicKey.protectionKeyName) &&
        Objects.equals(this.rotationEventIn, createClassicKey.rotationEventIn) &&
        Objects.equals(this.rotationInterval, createClassicKey.rotationInterval) &&
        Objects.equals(this.tags, createClassicKey.tags) &&
        Objects.equals(this.token, createClassicKey.token) &&
        Objects.equals(this.uidToken, createClassicKey.uidToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alg, autoRotate, certFileData, certificateCommonName, certificateCountry, certificateDigestAlgo, certificateFormat, certificateLocality, certificateOrganization, certificateProvince, certificateTtl, confFileData, deleteProtection, description, expirationEventIn, generateSelfSignedCertificate, gpgAlg, json, keyData, metadata, name, protectionKeyName, rotationEventIn, rotationInterval, tags, token, uidToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClassicKey {\n");
    sb.append("    alg: ").append(toIndentedString(alg)).append("\n");
    sb.append("    autoRotate: ").append(toIndentedString(autoRotate)).append("\n");
    sb.append("    certFileData: ").append(toIndentedString(certFileData)).append("\n");
    sb.append("    certificateCommonName: ").append(toIndentedString(certificateCommonName)).append("\n");
    sb.append("    certificateCountry: ").append(toIndentedString(certificateCountry)).append("\n");
    sb.append("    certificateDigestAlgo: ").append(toIndentedString(certificateDigestAlgo)).append("\n");
    sb.append("    certificateFormat: ").append(toIndentedString(certificateFormat)).append("\n");
    sb.append("    certificateLocality: ").append(toIndentedString(certificateLocality)).append("\n");
    sb.append("    certificateOrganization: ").append(toIndentedString(certificateOrganization)).append("\n");
    sb.append("    certificateProvince: ").append(toIndentedString(certificateProvince)).append("\n");
    sb.append("    certificateTtl: ").append(toIndentedString(certificateTtl)).append("\n");
    sb.append("    confFileData: ").append(toIndentedString(confFileData)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expirationEventIn: ").append(toIndentedString(expirationEventIn)).append("\n");
    sb.append("    generateSelfSignedCertificate: ").append(toIndentedString(generateSelfSignedCertificate)).append("\n");
    sb.append("    gpgAlg: ").append(toIndentedString(gpgAlg)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    keyData: ").append(toIndentedString(keyData)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protectionKeyName: ").append(toIndentedString(protectionKeyName)).append("\n");
    sb.append("    rotationEventIn: ").append(toIndentedString(rotationEventIn)).append("\n");
    sb.append("    rotationInterval: ").append(toIndentedString(rotationInterval)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

