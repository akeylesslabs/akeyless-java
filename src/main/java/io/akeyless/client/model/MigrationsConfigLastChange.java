/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * MigrationsConfigLastChange
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class MigrationsConfigLastChange {
  public static final String SERIALIZED_NAME_CHANGED_MIGRATIONS = "changed_migrations";
  @SerializedName(SERIALIZED_NAME_CHANGED_MIGRATIONS)
  @javax.annotation.Nullable
  private List<String> changedMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_MIGRATIONS = "created_migrations";
  @SerializedName(SERIALIZED_NAME_CREATED_MIGRATIONS)
  @javax.annotation.Nullable
  private List<String> createdMigrations = new ArrayList<>();

  public static final String SERIALIZED_NAME_DELETED_MIGRATIONS = "deleted_migrations";
  @SerializedName(SERIALIZED_NAME_DELETED_MIGRATIONS)
  @javax.annotation.Nullable
  private List<String> deletedMigrations = new ArrayList<>();

  public MigrationsConfigLastChange() {
  }

  public MigrationsConfigLastChange changedMigrations(@javax.annotation.Nullable List<String> changedMigrations) {
    this.changedMigrations = changedMigrations;
    return this;
  }

  public MigrationsConfigLastChange addChangedMigrationsItem(String changedMigrationsItem) {
    if (this.changedMigrations == null) {
      this.changedMigrations = new ArrayList<>();
    }
    this.changedMigrations.add(changedMigrationsItem);
    return this;
  }

  /**
   * Get changedMigrations
   * @return changedMigrations
   */
  @javax.annotation.Nullable
  public List<String> getChangedMigrations() {
    return changedMigrations;
  }

  public void setChangedMigrations(@javax.annotation.Nullable List<String> changedMigrations) {
    this.changedMigrations = changedMigrations;
  }


  public MigrationsConfigLastChange createdMigrations(@javax.annotation.Nullable List<String> createdMigrations) {
    this.createdMigrations = createdMigrations;
    return this;
  }

  public MigrationsConfigLastChange addCreatedMigrationsItem(String createdMigrationsItem) {
    if (this.createdMigrations == null) {
      this.createdMigrations = new ArrayList<>();
    }
    this.createdMigrations.add(createdMigrationsItem);
    return this;
  }

  /**
   * Get createdMigrations
   * @return createdMigrations
   */
  @javax.annotation.Nullable
  public List<String> getCreatedMigrations() {
    return createdMigrations;
  }

  public void setCreatedMigrations(@javax.annotation.Nullable List<String> createdMigrations) {
    this.createdMigrations = createdMigrations;
  }


  public MigrationsConfigLastChange deletedMigrations(@javax.annotation.Nullable List<String> deletedMigrations) {
    this.deletedMigrations = deletedMigrations;
    return this;
  }

  public MigrationsConfigLastChange addDeletedMigrationsItem(String deletedMigrationsItem) {
    if (this.deletedMigrations == null) {
      this.deletedMigrations = new ArrayList<>();
    }
    this.deletedMigrations.add(deletedMigrationsItem);
    return this;
  }

  /**
   * Get deletedMigrations
   * @return deletedMigrations
   */
  @javax.annotation.Nullable
  public List<String> getDeletedMigrations() {
    return deletedMigrations;
  }

  public void setDeletedMigrations(@javax.annotation.Nullable List<String> deletedMigrations) {
    this.deletedMigrations = deletedMigrations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrationsConfigLastChange migrationsConfigLastChange = (MigrationsConfigLastChange) o;
    return Objects.equals(this.changedMigrations, migrationsConfigLastChange.changedMigrations) &&
        Objects.equals(this.createdMigrations, migrationsConfigLastChange.createdMigrations) &&
        Objects.equals(this.deletedMigrations, migrationsConfigLastChange.deletedMigrations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedMigrations, createdMigrations, deletedMigrations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrationsConfigLastChange {\n");
    sb.append("    changedMigrations: ").append(toIndentedString(changedMigrations)).append("\n");
    sb.append("    createdMigrations: ").append(toIndentedString(createdMigrations)).append("\n");
    sb.append("    deletedMigrations: ").append(toIndentedString(deletedMigrations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("changed_migrations");
    openapiFields.add("created_migrations");
    openapiFields.add("deleted_migrations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MigrationsConfigLastChange
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MigrationsConfigLastChange.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MigrationsConfigLastChange is not found in the empty JSON string", MigrationsConfigLastChange.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MigrationsConfigLastChange.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MigrationsConfigLastChange` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("changed_migrations") != null && !jsonObj.get("changed_migrations").isJsonNull() && !jsonObj.get("changed_migrations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `changed_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("changed_migrations").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("created_migrations") != null && !jsonObj.get("created_migrations").isJsonNull() && !jsonObj.get("created_migrations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("created_migrations").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("deleted_migrations") != null && !jsonObj.get("deleted_migrations").isJsonNull() && !jsonObj.get("deleted_migrations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deleted_migrations` to be an array in the JSON string but got `%s`", jsonObj.get("deleted_migrations").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MigrationsConfigLastChange.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MigrationsConfigLastChange' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MigrationsConfigLastChange> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MigrationsConfigLastChange.class));

       return (TypeAdapter<T>) new TypeAdapter<MigrationsConfigLastChange>() {
           @Override
           public void write(JsonWriter out, MigrationsConfigLastChange value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MigrationsConfigLastChange read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MigrationsConfigLastChange given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MigrationsConfigLastChange
   * @throws IOException if the JSON string is invalid with respect to MigrationsConfigLastChange
   */
  public static MigrationsConfigLastChange fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MigrationsConfigLastChange.class);
  }

  /**
   * Convert an instance of MigrationsConfigLastChange to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

