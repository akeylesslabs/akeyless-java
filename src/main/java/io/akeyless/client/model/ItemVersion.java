/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.CertificateVersionInfo;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * ItemVersion
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class ItemVersion {
  public static final String SERIALIZED_NAME_ACCESS_DATE = "access_date";
  @SerializedName(SERIALIZED_NAME_ACCESS_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime accessDate;

  public static final String SERIALIZED_NAME_ACCESS_DATE_DISPLAY = "access_date_display";
  @SerializedName(SERIALIZED_NAME_ACCESS_DATE_DISPLAY)
  @javax.annotation.Nullable
  private String accessDateDisplay;

  public static final String SERIALIZED_NAME_CERTIFICATE_VERSION_INFO = "certificate_version_info";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_VERSION_INFO)
  @javax.annotation.Nullable
  private CertificateVersionInfo certificateVersionInfo;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_CUSTOMER_FRAGMENT_ID = "customer_fragment_id";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_FRAGMENT_ID)
  @javax.annotation.Nullable
  private String customerFragmentId;

  public static final String SERIALIZED_NAME_DELETION_DATE = "deletion_date";
  @SerializedName(SERIALIZED_NAME_DELETION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime deletionDate;

  public static final String SERIALIZED_NAME_ITEM_VERSION_STATE = "item_version_state";
  @SerializedName(SERIALIZED_NAME_ITEM_VERSION_STATE)
  @javax.annotation.Nullable
  private String itemVersionState;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modification_date";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime modificationDate;

  public static final String SERIALIZED_NAME_PROTECTION_KEY_NAME = "protection_key_name";
  @SerializedName(SERIALIZED_NAME_PROTECTION_KEY_NAME)
  @javax.annotation.Nullable
  private String protectionKeyName;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nullable
  private Integer version;

  public static final String SERIALIZED_NAME_WITH_CUSTOMER_FRAGMENT = "with_customer_fragment";
  @SerializedName(SERIALIZED_NAME_WITH_CUSTOMER_FRAGMENT)
  @javax.annotation.Nullable
  private Boolean withCustomerFragment;

  public ItemVersion() {
  }

  public ItemVersion accessDate(@javax.annotation.Nullable OffsetDateTime accessDate) {
    this.accessDate = accessDate;
    return this;
  }

  /**
   * Get accessDate
   * @return accessDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAccessDate() {
    return accessDate;
  }

  public void setAccessDate(@javax.annotation.Nullable OffsetDateTime accessDate) {
    this.accessDate = accessDate;
  }


  public ItemVersion accessDateDisplay(@javax.annotation.Nullable String accessDateDisplay) {
    this.accessDateDisplay = accessDateDisplay;
    return this;
  }

  /**
   * Get accessDateDisplay
   * @return accessDateDisplay
   */
  @javax.annotation.Nullable
  public String getAccessDateDisplay() {
    return accessDateDisplay;
  }

  public void setAccessDateDisplay(@javax.annotation.Nullable String accessDateDisplay) {
    this.accessDateDisplay = accessDateDisplay;
  }


  public ItemVersion certificateVersionInfo(@javax.annotation.Nullable CertificateVersionInfo certificateVersionInfo) {
    this.certificateVersionInfo = certificateVersionInfo;
    return this;
  }

  /**
   * Get certificateVersionInfo
   * @return certificateVersionInfo
   */
  @javax.annotation.Nullable
  public CertificateVersionInfo getCertificateVersionInfo() {
    return certificateVersionInfo;
  }

  public void setCertificateVersionInfo(@javax.annotation.Nullable CertificateVersionInfo certificateVersionInfo) {
    this.certificateVersionInfo = certificateVersionInfo;
  }


  public ItemVersion creationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public ItemVersion customerFragmentId(@javax.annotation.Nullable String customerFragmentId) {
    this.customerFragmentId = customerFragmentId;
    return this;
  }

  /**
   * Get customerFragmentId
   * @return customerFragmentId
   */
  @javax.annotation.Nullable
  public String getCustomerFragmentId() {
    return customerFragmentId;
  }

  public void setCustomerFragmentId(@javax.annotation.Nullable String customerFragmentId) {
    this.customerFragmentId = customerFragmentId;
  }


  public ItemVersion deletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = deletionDate;
    return this;
  }

  /**
   * Get deletionDate
   * @return deletionDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletionDate() {
    return deletionDate;
  }

  public void setDeletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = deletionDate;
  }


  public ItemVersion itemVersionState(@javax.annotation.Nullable String itemVersionState) {
    this.itemVersionState = itemVersionState;
    return this;
  }

  /**
   * ItemState defines the different states an Item can be in
   * @return itemVersionState
   */
  @javax.annotation.Nullable
  public String getItemVersionState() {
    return itemVersionState;
  }

  public void setItemVersionState(@javax.annotation.Nullable String itemVersionState) {
    this.itemVersionState = itemVersionState;
  }


  public ItemVersion modificationDate(@javax.annotation.Nullable OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

  /**
   * Get modificationDate
   * @return modificationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(@javax.annotation.Nullable OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }


  public ItemVersion protectionKeyName(@javax.annotation.Nullable String protectionKeyName) {
    this.protectionKeyName = protectionKeyName;
    return this;
  }

  /**
   * Get protectionKeyName
   * @return protectionKeyName
   */
  @javax.annotation.Nullable
  public String getProtectionKeyName() {
    return protectionKeyName;
  }

  public void setProtectionKeyName(@javax.annotation.Nullable String protectionKeyName) {
    this.protectionKeyName = protectionKeyName;
  }


  public ItemVersion version(@javax.annotation.Nullable Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nullable Integer version) {
    this.version = version;
  }


  public ItemVersion withCustomerFragment(@javax.annotation.Nullable Boolean withCustomerFragment) {
    this.withCustomerFragment = withCustomerFragment;
    return this;
  }

  /**
   * Get withCustomerFragment
   * @return withCustomerFragment
   */
  @javax.annotation.Nullable
  public Boolean getWithCustomerFragment() {
    return withCustomerFragment;
  }

  public void setWithCustomerFragment(@javax.annotation.Nullable Boolean withCustomerFragment) {
    this.withCustomerFragment = withCustomerFragment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemVersion itemVersion = (ItemVersion) o;
    return Objects.equals(this.accessDate, itemVersion.accessDate) &&
        Objects.equals(this.accessDateDisplay, itemVersion.accessDateDisplay) &&
        Objects.equals(this.certificateVersionInfo, itemVersion.certificateVersionInfo) &&
        Objects.equals(this.creationDate, itemVersion.creationDate) &&
        Objects.equals(this.customerFragmentId, itemVersion.customerFragmentId) &&
        Objects.equals(this.deletionDate, itemVersion.deletionDate) &&
        Objects.equals(this.itemVersionState, itemVersion.itemVersionState) &&
        Objects.equals(this.modificationDate, itemVersion.modificationDate) &&
        Objects.equals(this.protectionKeyName, itemVersion.protectionKeyName) &&
        Objects.equals(this.version, itemVersion.version) &&
        Objects.equals(this.withCustomerFragment, itemVersion.withCustomerFragment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessDate, accessDateDisplay, certificateVersionInfo, creationDate, customerFragmentId, deletionDate, itemVersionState, modificationDate, protectionKeyName, version, withCustomerFragment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemVersion {\n");
    sb.append("    accessDate: ").append(toIndentedString(accessDate)).append("\n");
    sb.append("    accessDateDisplay: ").append(toIndentedString(accessDateDisplay)).append("\n");
    sb.append("    certificateVersionInfo: ").append(toIndentedString(certificateVersionInfo)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    customerFragmentId: ").append(toIndentedString(customerFragmentId)).append("\n");
    sb.append("    deletionDate: ").append(toIndentedString(deletionDate)).append("\n");
    sb.append("    itemVersionState: ").append(toIndentedString(itemVersionState)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    protectionKeyName: ").append(toIndentedString(protectionKeyName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    withCustomerFragment: ").append(toIndentedString(withCustomerFragment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_date");
    openapiFields.add("access_date_display");
    openapiFields.add("certificate_version_info");
    openapiFields.add("creation_date");
    openapiFields.add("customer_fragment_id");
    openapiFields.add("deletion_date");
    openapiFields.add("item_version_state");
    openapiFields.add("modification_date");
    openapiFields.add("protection_key_name");
    openapiFields.add("version");
    openapiFields.add("with_customer_fragment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ItemVersion
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ItemVersion.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemVersion is not found in the empty JSON string", ItemVersion.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ItemVersion.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemVersion` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("access_date_display") != null && !jsonObj.get("access_date_display").isJsonNull()) && !jsonObj.get("access_date_display").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_date_display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_date_display").toString()));
      }
      // validate the optional field `certificate_version_info`
      if (jsonObj.get("certificate_version_info") != null && !jsonObj.get("certificate_version_info").isJsonNull()) {
        CertificateVersionInfo.validateJsonElement(jsonObj.get("certificate_version_info"));
      }
      if ((jsonObj.get("customer_fragment_id") != null && !jsonObj.get("customer_fragment_id").isJsonNull()) && !jsonObj.get("customer_fragment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_fragment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customer_fragment_id").toString()));
      }
      if ((jsonObj.get("item_version_state") != null && !jsonObj.get("item_version_state").isJsonNull()) && !jsonObj.get("item_version_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_version_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_version_state").toString()));
      }
      if ((jsonObj.get("protection_key_name") != null && !jsonObj.get("protection_key_name").isJsonNull()) && !jsonObj.get("protection_key_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protection_key_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protection_key_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemVersion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemVersion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemVersion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemVersion.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemVersion>() {
           @Override
           public void write(JsonWriter out, ItemVersion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemVersion read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ItemVersion given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ItemVersion
   * @throws IOException if the JSON string is invalid with respect to ItemVersion
   */
  public static ItemVersion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemVersion.class);
  }

  /**
   * Convert an instance of ItemVersion to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

