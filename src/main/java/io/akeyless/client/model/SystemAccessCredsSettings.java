/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SystemAccessCredsSettings describes system access credential settings for account by minutes
 */
@ApiModel(description = "SystemAccessCredsSettings describes system access credential settings for account by minutes")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SystemAccessCredsSettings {
  public static final String SERIALIZED_NAME_JWT_TTL_DEFAULT = "jwt_ttl_default";
  @SerializedName(SERIALIZED_NAME_JWT_TTL_DEFAULT)
  private Long jwtTtlDefault;

  public static final String SERIALIZED_NAME_JWT_TTL_MAXIMUM = "jwt_ttl_maximum";
  @SerializedName(SERIALIZED_NAME_JWT_TTL_MAXIMUM)
  private Long jwtTtlMaximum;

  public static final String SERIALIZED_NAME_JWT_TTL_MINIMUM = "jwt_ttl_minimum";
  @SerializedName(SERIALIZED_NAME_JWT_TTL_MINIMUM)
  private Long jwtTtlMinimum;

  public SystemAccessCredsSettings() { 
  }

  public SystemAccessCredsSettings jwtTtlDefault(Long jwtTtlDefault) {
    
    this.jwtTtlDefault = jwtTtlDefault;
    return this;
  }

   /**
   * Get jwtTtlDefault
   * @return jwtTtlDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getJwtTtlDefault() {
    return jwtTtlDefault;
  }


  public void setJwtTtlDefault(Long jwtTtlDefault) {
    this.jwtTtlDefault = jwtTtlDefault;
  }


  public SystemAccessCredsSettings jwtTtlMaximum(Long jwtTtlMaximum) {
    
    this.jwtTtlMaximum = jwtTtlMaximum;
    return this;
  }

   /**
   * Get jwtTtlMaximum
   * @return jwtTtlMaximum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getJwtTtlMaximum() {
    return jwtTtlMaximum;
  }


  public void setJwtTtlMaximum(Long jwtTtlMaximum) {
    this.jwtTtlMaximum = jwtTtlMaximum;
  }


  public SystemAccessCredsSettings jwtTtlMinimum(Long jwtTtlMinimum) {
    
    this.jwtTtlMinimum = jwtTtlMinimum;
    return this;
  }

   /**
   * Get jwtTtlMinimum
   * @return jwtTtlMinimum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getJwtTtlMinimum() {
    return jwtTtlMinimum;
  }


  public void setJwtTtlMinimum(Long jwtTtlMinimum) {
    this.jwtTtlMinimum = jwtTtlMinimum;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemAccessCredsSettings systemAccessCredsSettings = (SystemAccessCredsSettings) o;
    return Objects.equals(this.jwtTtlDefault, systemAccessCredsSettings.jwtTtlDefault) &&
        Objects.equals(this.jwtTtlMaximum, systemAccessCredsSettings.jwtTtlMaximum) &&
        Objects.equals(this.jwtTtlMinimum, systemAccessCredsSettings.jwtTtlMinimum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jwtTtlDefault, jwtTtlMaximum, jwtTtlMinimum);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemAccessCredsSettings {\n");
    sb.append("    jwtTtlDefault: ").append(toIndentedString(jwtTtlDefault)).append("\n");
    sb.append("    jwtTtlMaximum: ").append(toIndentedString(jwtTtlMaximum)).append("\n");
    sb.append("    jwtTtlMinimum: ").append(toIndentedString(jwtTtlMinimum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

