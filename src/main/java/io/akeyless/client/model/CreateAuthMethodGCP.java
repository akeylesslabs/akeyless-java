/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * createAuthMethodGCP is a command that creates a new auth method that will be able to authenticate using GCP IAM Service Account credentials or GCE instance credentials. [Deprecated: Use auth-method-create-gcp command]
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateAuthMethodGCP {
  public static final String SERIALIZED_NAME_ACCESS_EXPIRES = "access-expires";
  @SerializedName(SERIALIZED_NAME_ACCESS_EXPIRES)
  @javax.annotation.Nullable
  private Long accessExpires = 0l;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  @javax.annotation.Nonnull
  private String audience = "akeyless.io";

  public static final String SERIALIZED_NAME_AUDIT_LOGS_CLAIMS = "audit-logs-claims";
  @SerializedName(SERIALIZED_NAME_AUDIT_LOGS_CLAIMS)
  @javax.annotation.Nullable
  private List<String> auditLogsClaims = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_IPS = "bound-ips";
  @SerializedName(SERIALIZED_NAME_BOUND_IPS)
  @javax.annotation.Nullable
  private List<String> boundIps = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_LABELS = "bound-labels";
  @SerializedName(SERIALIZED_NAME_BOUND_LABELS)
  @javax.annotation.Nullable
  private List<String> boundLabels = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_PROJECTS = "bound-projects";
  @SerializedName(SERIALIZED_NAME_BOUND_PROJECTS)
  @javax.annotation.Nullable
  private List<String> boundProjects = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_REGIONS = "bound-regions";
  @SerializedName(SERIALIZED_NAME_BOUND_REGIONS)
  @javax.annotation.Nullable
  private List<String> boundRegions = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_SERVICE_ACCOUNTS = "bound-service-accounts";
  @SerializedName(SERIALIZED_NAME_BOUND_SERVICE_ACCOUNTS)
  @javax.annotation.Nullable
  private List<String> boundServiceAccounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_ZONES = "bound-zones";
  @SerializedName(SERIALIZED_NAME_BOUND_ZONES)
  @javax.annotation.Nullable
  private List<String> boundZones = new ArrayList<>();

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  @javax.annotation.Nullable
  private String deleteProtection;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_EXPIRATION_EVENT_IN = "expiration-event-in";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_EVENT_IN)
  @javax.annotation.Nullable
  private List<String> expirationEventIn = new ArrayList<>();

  public static final String SERIALIZED_NAME_FORCE_SUB_CLAIMS = "force-sub-claims";
  @SerializedName(SERIALIZED_NAME_FORCE_SUB_CLAIMS)
  @javax.annotation.Nullable
  private Boolean forceSubClaims;

  public static final String SERIALIZED_NAME_GW_BOUND_IPS = "gw-bound-ips";
  @SerializedName(SERIALIZED_NAME_GW_BOUND_IPS)
  @javax.annotation.Nullable
  private List<String> gwBoundIps = new ArrayList<>();

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  @javax.annotation.Nullable
  private Boolean json = false;

  public static final String SERIALIZED_NAME_JWT_TTL = "jwt-ttl";
  @SerializedName(SERIALIZED_NAME_JWT_TTL)
  @javax.annotation.Nullable
  private Long jwtTtl = 0l;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nonnull
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "product-type";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  @javax.annotation.Nullable
  private List<String> productType = new ArrayList<>();

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_CREDS_DATA = "service-account-creds-data";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_CREDS_DATA)
  @javax.annotation.Nullable
  private String serviceAccountCredsData;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  @javax.annotation.Nullable
  private String token;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nonnull
  private String type;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  @javax.annotation.Nullable
  private String uidToken;

  public static final String SERIALIZED_NAME_UNIQUE_IDENTIFIER = "unique-identifier";
  @SerializedName(SERIALIZED_NAME_UNIQUE_IDENTIFIER)
  @javax.annotation.Nullable
  private String uniqueIdentifier;

  public CreateAuthMethodGCP() {
  }

  public CreateAuthMethodGCP accessExpires(@javax.annotation.Nullable Long accessExpires) {
    this.accessExpires = accessExpires;
    return this;
  }

  /**
   * Access expiration date in Unix timestamp (select 0 for access without expiry date)
   * @return accessExpires
   */
  @javax.annotation.Nullable
  public Long getAccessExpires() {
    return accessExpires;
  }

  public void setAccessExpires(@javax.annotation.Nullable Long accessExpires) {
    this.accessExpires = accessExpires;
  }


  public CreateAuthMethodGCP audience(@javax.annotation.Nonnull String audience) {
    this.audience = audience;
    return this;
  }

  /**
   * The audience to verify in the JWT received by the client
   * @return audience
   */
  @javax.annotation.Nonnull
  public String getAudience() {
    return audience;
  }

  public void setAudience(@javax.annotation.Nonnull String audience) {
    this.audience = audience;
  }


  public CreateAuthMethodGCP auditLogsClaims(@javax.annotation.Nullable List<String> auditLogsClaims) {
    this.auditLogsClaims = auditLogsClaims;
    return this;
  }

  public CreateAuthMethodGCP addAuditLogsClaimsItem(String auditLogsClaimsItem) {
    if (this.auditLogsClaims == null) {
      this.auditLogsClaims = new ArrayList<>();
    }
    this.auditLogsClaims.add(auditLogsClaimsItem);
    return this;
  }

  /**
   * Subclaims to include in audit logs, e.g \&quot;--audit-logs-claims email --audit-logs-claims username\&quot;
   * @return auditLogsClaims
   */
  @javax.annotation.Nullable
  public List<String> getAuditLogsClaims() {
    return auditLogsClaims;
  }

  public void setAuditLogsClaims(@javax.annotation.Nullable List<String> auditLogsClaims) {
    this.auditLogsClaims = auditLogsClaims;
  }


  public CreateAuthMethodGCP boundIps(@javax.annotation.Nullable List<String> boundIps) {
    this.boundIps = boundIps;
    return this;
  }

  public CreateAuthMethodGCP addBoundIpsItem(String boundIpsItem) {
    if (this.boundIps == null) {
      this.boundIps = new ArrayList<>();
    }
    this.boundIps.add(boundIpsItem);
    return this;
  }

  /**
   * A CIDR whitelist with the IPs that the access is restricted to
   * @return boundIps
   */
  @javax.annotation.Nullable
  public List<String> getBoundIps() {
    return boundIps;
  }

  public void setBoundIps(@javax.annotation.Nullable List<String> boundIps) {
    this.boundIps = boundIps;
  }


  public CreateAuthMethodGCP boundLabels(@javax.annotation.Nullable List<String> boundLabels) {
    this.boundLabels = boundLabels;
    return this;
  }

  public CreateAuthMethodGCP addBoundLabelsItem(String boundLabelsItem) {
    if (this.boundLabels == null) {
      this.boundLabels = new ArrayList<>();
    }
    this.boundLabels.add(boundLabelsItem);
    return this;
  }

  /**
   * A comma-separated list of GCP labels formatted as \&quot;key:value\&quot; strings that must be set on authorized GCE instances. TODO: Because GCP labels are not currently ACL&#39;d ....
   * @return boundLabels
   */
  @javax.annotation.Nullable
  public List<String> getBoundLabels() {
    return boundLabels;
  }

  public void setBoundLabels(@javax.annotation.Nullable List<String> boundLabels) {
    this.boundLabels = boundLabels;
  }


  public CreateAuthMethodGCP boundProjects(@javax.annotation.Nullable List<String> boundProjects) {
    this.boundProjects = boundProjects;
    return this;
  }

  public CreateAuthMethodGCP addBoundProjectsItem(String boundProjectsItem) {
    if (this.boundProjects == null) {
      this.boundProjects = new ArrayList<>();
    }
    this.boundProjects.add(boundProjectsItem);
    return this;
  }

  /**
   * &#x3D;&#x3D;&#x3D; Human and Machine authentication section &#x3D;&#x3D;&#x3D; Array of GCP project IDs. Only entities belonging to any of the provided projects can authenticate.
   * @return boundProjects
   */
  @javax.annotation.Nullable
  public List<String> getBoundProjects() {
    return boundProjects;
  }

  public void setBoundProjects(@javax.annotation.Nullable List<String> boundProjects) {
    this.boundProjects = boundProjects;
  }


  public CreateAuthMethodGCP boundRegions(@javax.annotation.Nullable List<String> boundRegions) {
    this.boundRegions = boundRegions;
    return this;
  }

  public CreateAuthMethodGCP addBoundRegionsItem(String boundRegionsItem) {
    if (this.boundRegions == null) {
      this.boundRegions = new ArrayList<>();
    }
    this.boundRegions.add(boundRegionsItem);
    return this;
  }

  /**
   * List of regions that a GCE instance must belong to in order to be authenticated. TODO: If bound_instance_groups is provided, it is assumed to be a regional group and the group must belong to this region. If bound_zones are provided, this attribute is ignored.
   * @return boundRegions
   */
  @javax.annotation.Nullable
  public List<String> getBoundRegions() {
    return boundRegions;
  }

  public void setBoundRegions(@javax.annotation.Nullable List<String> boundRegions) {
    this.boundRegions = boundRegions;
  }


  public CreateAuthMethodGCP boundServiceAccounts(@javax.annotation.Nullable List<String> boundServiceAccounts) {
    this.boundServiceAccounts = boundServiceAccounts;
    return this;
  }

  public CreateAuthMethodGCP addBoundServiceAccountsItem(String boundServiceAccountsItem) {
    if (this.boundServiceAccounts == null) {
      this.boundServiceAccounts = new ArrayList<>();
    }
    this.boundServiceAccounts.add(boundServiceAccountsItem);
    return this;
  }

  /**
   * List of service accounts the service account must be part of in order to be authenticated.
   * @return boundServiceAccounts
   */
  @javax.annotation.Nullable
  public List<String> getBoundServiceAccounts() {
    return boundServiceAccounts;
  }

  public void setBoundServiceAccounts(@javax.annotation.Nullable List<String> boundServiceAccounts) {
    this.boundServiceAccounts = boundServiceAccounts;
  }


  public CreateAuthMethodGCP boundZones(@javax.annotation.Nullable List<String> boundZones) {
    this.boundZones = boundZones;
    return this;
  }

  public CreateAuthMethodGCP addBoundZonesItem(String boundZonesItem) {
    if (this.boundZones == null) {
      this.boundZones = new ArrayList<>();
    }
    this.boundZones.add(boundZonesItem);
    return this;
  }

  /**
   * &#x3D;&#x3D;&#x3D; Machine authentication section &#x3D;&#x3D;&#x3D; List of zones that a GCE instance must belong to in order to be authenticated. TODO: If bound_instance_groups is provided, it is assumed to be a zonal group and the group must belong to this zone.
   * @return boundZones
   */
  @javax.annotation.Nullable
  public List<String> getBoundZones() {
    return boundZones;
  }

  public void setBoundZones(@javax.annotation.Nullable List<String> boundZones) {
    this.boundZones = boundZones;
  }


  public CreateAuthMethodGCP deleteProtection(@javax.annotation.Nullable String deleteProtection) {
    this.deleteProtection = deleteProtection;
    return this;
  }

  /**
   * Protection from accidental deletion of this object [true/false]
   * @return deleteProtection
   */
  @javax.annotation.Nullable
  public String getDeleteProtection() {
    return deleteProtection;
  }

  public void setDeleteProtection(@javax.annotation.Nullable String deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public CreateAuthMethodGCP description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Auth Method description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateAuthMethodGCP expirationEventIn(@javax.annotation.Nullable List<String> expirationEventIn) {
    this.expirationEventIn = expirationEventIn;
    return this;
  }

  public CreateAuthMethodGCP addExpirationEventInItem(String expirationEventInItem) {
    if (this.expirationEventIn == null) {
      this.expirationEventIn = new ArrayList<>();
    }
    this.expirationEventIn.add(expirationEventInItem);
    return this;
  }

  /**
   * How many days before the expiration of the auth method would you like to be notified.
   * @return expirationEventIn
   */
  @javax.annotation.Nullable
  public List<String> getExpirationEventIn() {
    return expirationEventIn;
  }

  public void setExpirationEventIn(@javax.annotation.Nullable List<String> expirationEventIn) {
    this.expirationEventIn = expirationEventIn;
  }


  public CreateAuthMethodGCP forceSubClaims(@javax.annotation.Nullable Boolean forceSubClaims) {
    this.forceSubClaims = forceSubClaims;
    return this;
  }

  /**
   * if true: enforce role-association must include sub claims
   * @return forceSubClaims
   */
  @javax.annotation.Nullable
  public Boolean getForceSubClaims() {
    return forceSubClaims;
  }

  public void setForceSubClaims(@javax.annotation.Nullable Boolean forceSubClaims) {
    this.forceSubClaims = forceSubClaims;
  }


  public CreateAuthMethodGCP gwBoundIps(@javax.annotation.Nullable List<String> gwBoundIps) {
    this.gwBoundIps = gwBoundIps;
    return this;
  }

  public CreateAuthMethodGCP addGwBoundIpsItem(String gwBoundIpsItem) {
    if (this.gwBoundIps == null) {
      this.gwBoundIps = new ArrayList<>();
    }
    this.gwBoundIps.add(gwBoundIpsItem);
    return this;
  }

  /**
   * A CIDR whitelist with the GW IPs that the access is restricted to
   * @return gwBoundIps
   */
  @javax.annotation.Nullable
  public List<String> getGwBoundIps() {
    return gwBoundIps;
  }

  public void setGwBoundIps(@javax.annotation.Nullable List<String> gwBoundIps) {
    this.gwBoundIps = gwBoundIps;
  }


  public CreateAuthMethodGCP json(@javax.annotation.Nullable Boolean json) {
    this.json = json;
    return this;
  }

  /**
   * Set output format to JSON
   * @return json
   */
  @javax.annotation.Nullable
  public Boolean getJson() {
    return json;
  }

  public void setJson(@javax.annotation.Nullable Boolean json) {
    this.json = json;
  }


  public CreateAuthMethodGCP jwtTtl(@javax.annotation.Nullable Long jwtTtl) {
    this.jwtTtl = jwtTtl;
    return this;
  }

  /**
   * Jwt TTL
   * @return jwtTtl
   */
  @javax.annotation.Nullable
  public Long getJwtTtl() {
    return jwtTtl;
  }

  public void setJwtTtl(@javax.annotation.Nullable Long jwtTtl) {
    this.jwtTtl = jwtTtl;
  }


  public CreateAuthMethodGCP name(@javax.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Auth Method name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nonnull String name) {
    this.name = name;
  }


  public CreateAuthMethodGCP productType(@javax.annotation.Nullable List<String> productType) {
    this.productType = productType;
    return this;
  }

  public CreateAuthMethodGCP addProductTypeItem(String productTypeItem) {
    if (this.productType == null) {
      this.productType = new ArrayList<>();
    }
    this.productType.add(productTypeItem);
    return this;
  }

  /**
   * Choose the relevant product type for the auth method [sm, sra, pm, dp, ca]
   * @return productType
   */
  @javax.annotation.Nullable
  public List<String> getProductType() {
    return productType;
  }

  public void setProductType(@javax.annotation.Nullable List<String> productType) {
    this.productType = productType;
  }


  public CreateAuthMethodGCP serviceAccountCredsData(@javax.annotation.Nullable String serviceAccountCredsData) {
    this.serviceAccountCredsData = serviceAccountCredsData;
    return this;
  }

  /**
   * ServiceAccount credentials data instead of giving a file path, base64 encoded
   * @return serviceAccountCredsData
   */
  @javax.annotation.Nullable
  public String getServiceAccountCredsData() {
    return serviceAccountCredsData;
  }

  public void setServiceAccountCredsData(@javax.annotation.Nullable String serviceAccountCredsData) {
    this.serviceAccountCredsData = serviceAccountCredsData;
  }


  public CreateAuthMethodGCP token(@javax.annotation.Nullable String token) {
    this.token = token;
    return this;
  }

  /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
   */
  @javax.annotation.Nullable
  public String getToken() {
    return token;
  }

  public void setToken(@javax.annotation.Nullable String token) {
    this.token = token;
  }


  public CreateAuthMethodGCP type(@javax.annotation.Nonnull String type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the GCP Access Rules
   * @return type
   */
  @javax.annotation.Nonnull
  public String getType() {
    return type;
  }

  public void setType(@javax.annotation.Nonnull String type) {
    this.type = type;
  }


  public CreateAuthMethodGCP uidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
    return this;
  }

  /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
   */
  @javax.annotation.Nullable
  public String getUidToken() {
    return uidToken;
  }

  public void setUidToken(@javax.annotation.Nullable String uidToken) {
    this.uidToken = uidToken;
  }


  public CreateAuthMethodGCP uniqueIdentifier(@javax.annotation.Nullable String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
    return this;
  }

  /**
   * A unique identifier (ID) value which is a \&quot;sub claim\&quot; name that contains details uniquely identifying that resource. This \&quot;sub claim\&quot; is used to distinguish between different identities.
   * @return uniqueIdentifier
   */
  @javax.annotation.Nullable
  public String getUniqueIdentifier() {
    return uniqueIdentifier;
  }

  public void setUniqueIdentifier(@javax.annotation.Nullable String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAuthMethodGCP createAuthMethodGCP = (CreateAuthMethodGCP) o;
    return Objects.equals(this.accessExpires, createAuthMethodGCP.accessExpires) &&
        Objects.equals(this.audience, createAuthMethodGCP.audience) &&
        Objects.equals(this.auditLogsClaims, createAuthMethodGCP.auditLogsClaims) &&
        Objects.equals(this.boundIps, createAuthMethodGCP.boundIps) &&
        Objects.equals(this.boundLabels, createAuthMethodGCP.boundLabels) &&
        Objects.equals(this.boundProjects, createAuthMethodGCP.boundProjects) &&
        Objects.equals(this.boundRegions, createAuthMethodGCP.boundRegions) &&
        Objects.equals(this.boundServiceAccounts, createAuthMethodGCP.boundServiceAccounts) &&
        Objects.equals(this.boundZones, createAuthMethodGCP.boundZones) &&
        Objects.equals(this.deleteProtection, createAuthMethodGCP.deleteProtection) &&
        Objects.equals(this.description, createAuthMethodGCP.description) &&
        Objects.equals(this.expirationEventIn, createAuthMethodGCP.expirationEventIn) &&
        Objects.equals(this.forceSubClaims, createAuthMethodGCP.forceSubClaims) &&
        Objects.equals(this.gwBoundIps, createAuthMethodGCP.gwBoundIps) &&
        Objects.equals(this.json, createAuthMethodGCP.json) &&
        Objects.equals(this.jwtTtl, createAuthMethodGCP.jwtTtl) &&
        Objects.equals(this.name, createAuthMethodGCP.name) &&
        Objects.equals(this.productType, createAuthMethodGCP.productType) &&
        Objects.equals(this.serviceAccountCredsData, createAuthMethodGCP.serviceAccountCredsData) &&
        Objects.equals(this.token, createAuthMethodGCP.token) &&
        Objects.equals(this.type, createAuthMethodGCP.type) &&
        Objects.equals(this.uidToken, createAuthMethodGCP.uidToken) &&
        Objects.equals(this.uniqueIdentifier, createAuthMethodGCP.uniqueIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessExpires, audience, auditLogsClaims, boundIps, boundLabels, boundProjects, boundRegions, boundServiceAccounts, boundZones, deleteProtection, description, expirationEventIn, forceSubClaims, gwBoundIps, json, jwtTtl, name, productType, serviceAccountCredsData, token, type, uidToken, uniqueIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAuthMethodGCP {\n");
    sb.append("    accessExpires: ").append(toIndentedString(accessExpires)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    auditLogsClaims: ").append(toIndentedString(auditLogsClaims)).append("\n");
    sb.append("    boundIps: ").append(toIndentedString(boundIps)).append("\n");
    sb.append("    boundLabels: ").append(toIndentedString(boundLabels)).append("\n");
    sb.append("    boundProjects: ").append(toIndentedString(boundProjects)).append("\n");
    sb.append("    boundRegions: ").append(toIndentedString(boundRegions)).append("\n");
    sb.append("    boundServiceAccounts: ").append(toIndentedString(boundServiceAccounts)).append("\n");
    sb.append("    boundZones: ").append(toIndentedString(boundZones)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expirationEventIn: ").append(toIndentedString(expirationEventIn)).append("\n");
    sb.append("    forceSubClaims: ").append(toIndentedString(forceSubClaims)).append("\n");
    sb.append("    gwBoundIps: ").append(toIndentedString(gwBoundIps)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    jwtTtl: ").append(toIndentedString(jwtTtl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    serviceAccountCredsData: ").append(toIndentedString(serviceAccountCredsData)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    uniqueIdentifier: ").append(toIndentedString(uniqueIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access-expires");
    openapiFields.add("audience");
    openapiFields.add("audit-logs-claims");
    openapiFields.add("bound-ips");
    openapiFields.add("bound-labels");
    openapiFields.add("bound-projects");
    openapiFields.add("bound-regions");
    openapiFields.add("bound-service-accounts");
    openapiFields.add("bound-zones");
    openapiFields.add("delete_protection");
    openapiFields.add("description");
    openapiFields.add("expiration-event-in");
    openapiFields.add("force-sub-claims");
    openapiFields.add("gw-bound-ips");
    openapiFields.add("json");
    openapiFields.add("jwt-ttl");
    openapiFields.add("name");
    openapiFields.add("product-type");
    openapiFields.add("service-account-creds-data");
    openapiFields.add("token");
    openapiFields.add("type");
    openapiFields.add("uid-token");
    openapiFields.add("unique-identifier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("audience");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAuthMethodGCP
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAuthMethodGCP.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAuthMethodGCP is not found in the empty JSON string", CreateAuthMethodGCP.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAuthMethodGCP.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAuthMethodGCP` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAuthMethodGCP.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("audience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audience").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("audit-logs-claims") != null && !jsonObj.get("audit-logs-claims").isJsonNull() && !jsonObj.get("audit-logs-claims").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `audit-logs-claims` to be an array in the JSON string but got `%s`", jsonObj.get("audit-logs-claims").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-ips") != null && !jsonObj.get("bound-ips").isJsonNull() && !jsonObj.get("bound-ips").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-ips` to be an array in the JSON string but got `%s`", jsonObj.get("bound-ips").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-labels") != null && !jsonObj.get("bound-labels").isJsonNull() && !jsonObj.get("bound-labels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-labels` to be an array in the JSON string but got `%s`", jsonObj.get("bound-labels").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-projects") != null && !jsonObj.get("bound-projects").isJsonNull() && !jsonObj.get("bound-projects").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-projects` to be an array in the JSON string but got `%s`", jsonObj.get("bound-projects").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-regions") != null && !jsonObj.get("bound-regions").isJsonNull() && !jsonObj.get("bound-regions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-regions` to be an array in the JSON string but got `%s`", jsonObj.get("bound-regions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-service-accounts") != null && !jsonObj.get("bound-service-accounts").isJsonNull() && !jsonObj.get("bound-service-accounts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-service-accounts` to be an array in the JSON string but got `%s`", jsonObj.get("bound-service-accounts").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound-zones") != null && !jsonObj.get("bound-zones").isJsonNull() && !jsonObj.get("bound-zones").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound-zones` to be an array in the JSON string but got `%s`", jsonObj.get("bound-zones").toString()));
      }
      if ((jsonObj.get("delete_protection") != null && !jsonObj.get("delete_protection").isJsonNull()) && !jsonObj.get("delete_protection").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delete_protection` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delete_protection").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("expiration-event-in") != null && !jsonObj.get("expiration-event-in").isJsonNull() && !jsonObj.get("expiration-event-in").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration-event-in` to be an array in the JSON string but got `%s`", jsonObj.get("expiration-event-in").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("gw-bound-ips") != null && !jsonObj.get("gw-bound-ips").isJsonNull() && !jsonObj.get("gw-bound-ips").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `gw-bound-ips` to be an array in the JSON string but got `%s`", jsonObj.get("gw-bound-ips").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product-type") != null && !jsonObj.get("product-type").isJsonNull() && !jsonObj.get("product-type").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product-type` to be an array in the JSON string but got `%s`", jsonObj.get("product-type").toString()));
      }
      if ((jsonObj.get("service-account-creds-data") != null && !jsonObj.get("service-account-creds-data").isJsonNull()) && !jsonObj.get("service-account-creds-data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service-account-creds-data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service-account-creds-data").toString()));
      }
      if ((jsonObj.get("token") != null && !jsonObj.get("token").isJsonNull()) && !jsonObj.get("token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("token").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("uid-token") != null && !jsonObj.get("uid-token").isJsonNull()) && !jsonObj.get("uid-token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uid-token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uid-token").toString()));
      }
      if ((jsonObj.get("unique-identifier") != null && !jsonObj.get("unique-identifier").isJsonNull()) && !jsonObj.get("unique-identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique-identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unique-identifier").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAuthMethodGCP.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAuthMethodGCP' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAuthMethodGCP> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAuthMethodGCP.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAuthMethodGCP>() {
           @Override
           public void write(JsonWriter out, CreateAuthMethodGCP value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAuthMethodGCP read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAuthMethodGCP given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAuthMethodGCP
   * @throws IOException if the JSON string is invalid with respect to CreateAuthMethodGCP
   */
  public static CreateAuthMethodGCP fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAuthMethodGCP.class);
  }

  /**
   * Convert an instance of CreateAuthMethodGCP to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

