/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CreateSecret
 */

public class CreateSecret {
  public static final String SERIALIZED_NAME_ACCESSIBILITY = "accessibility";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY)
  private String accessibility = "regular";

  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  private String deleteProtection;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_MULTILINE_VALUE = "multiline_value";
  @SerializedName(SERIALIZED_NAME_MULTILINE_VALUE)
  private Boolean multilineValue;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_CUSTOM_FIELD = "password-manager-custom-field";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_CUSTOM_FIELD)
  private Map<String, String> passwordManagerCustomField = null;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_INJECT_URL = "password-manager-inject-url";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_INJECT_URL)
  private List<String> passwordManagerInjectUrl = null;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_PASSWORD = "password-manager-password";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_PASSWORD)
  private String passwordManagerPassword;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_USERNAME = "password-manager-username";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_USERNAME)
  private String passwordManagerUsername;

  public static final String SERIALIZED_NAME_PROTECTION_KEY = "protection_key";
  @SerializedName(SERIALIZED_NAME_PROTECTION_KEY)
  private String protectionKey;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_BASTION_ISSUER = "secure-access-bastion-issuer";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_BASTION_ISSUER)
  private String secureAccessBastionIssuer;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_ENABLE = "secure-access-enable";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_ENABLE)
  private String secureAccessEnable;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_HOST = "secure-access-host";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_HOST)
  private List<String> secureAccessHost = null;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_SSH_CREDS = "secure-access-ssh-creds";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_SSH_CREDS)
  private String secureAccessSshCreds;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_SSH_USER = "secure-access-ssh-user";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_SSH_USER)
  private String secureAccessSshUser;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_URL = "secure-access-url";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_URL)
  private String secureAccessUrl;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB_BROWSING = "secure-access-web-browsing";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB_BROWSING)
  private Boolean secureAccessWebBrowsing;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB_PROXY = "secure-access-web-proxy";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB_PROXY)
  private Boolean secureAccessWebProxy;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;


  public CreateSecret accessibility(String accessibility) {
    
    this.accessibility = accessibility;
    return this;
  }

   /**
   * for personal password manager
   * @return accessibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "for personal password manager")

  public String getAccessibility() {
    return accessibility;
  }


  public void setAccessibility(String accessibility) {
    this.accessibility = accessibility;
  }


  public CreateSecret deleteProtection(String deleteProtection) {
    
    this.deleteProtection = deleteProtection;
    return this;
  }

   /**
   * Protection from accidental deletion of this item
   * @return deleteProtection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Protection from accidental deletion of this item")

  public String getDeleteProtection() {
    return deleteProtection;
  }


  public void setDeleteProtection(String deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public CreateSecret json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public CreateSecret metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Metadata about the secret
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metadata about the secret")

  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public CreateSecret multilineValue(Boolean multilineValue) {
    
    this.multilineValue = multilineValue;
    return this;
  }

   /**
   * The provided value is a multiline value (separated by &#39;\\n&#39;)
   * @return multilineValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The provided value is a multiline value (separated by '\\n')")

  public Boolean getMultilineValue() {
    return multilineValue;
  }


  public void setMultilineValue(Boolean multilineValue) {
    this.multilineValue = multilineValue;
  }


  public CreateSecret name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Secret name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Secret name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateSecret passwordManagerCustomField(Map<String, String> passwordManagerCustomField) {
    
    this.passwordManagerCustomField = passwordManagerCustomField;
    return this;
  }

  public CreateSecret putPasswordManagerCustomFieldItem(String key, String passwordManagerCustomFieldItem) {
    if (this.passwordManagerCustomField == null) {
      this.passwordManagerCustomField = new HashMap<String, String>();
    }
    this.passwordManagerCustomField.put(key, passwordManagerCustomFieldItem);
    return this;
  }

   /**
   * For Password Management use, additional fields
   * @return passwordManagerCustomField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, additional fields")

  public Map<String, String> getPasswordManagerCustomField() {
    return passwordManagerCustomField;
  }


  public void setPasswordManagerCustomField(Map<String, String> passwordManagerCustomField) {
    this.passwordManagerCustomField = passwordManagerCustomField;
  }


  public CreateSecret passwordManagerInjectUrl(List<String> passwordManagerInjectUrl) {
    
    this.passwordManagerInjectUrl = passwordManagerInjectUrl;
    return this;
  }

  public CreateSecret addPasswordManagerInjectUrlItem(String passwordManagerInjectUrlItem) {
    if (this.passwordManagerInjectUrl == null) {
      this.passwordManagerInjectUrl = new ArrayList<String>();
    }
    this.passwordManagerInjectUrl.add(passwordManagerInjectUrlItem);
    return this;
  }

   /**
   * For Password Management use, reflect the website context
   * @return passwordManagerInjectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, reflect the website context")

  public List<String> getPasswordManagerInjectUrl() {
    return passwordManagerInjectUrl;
  }


  public void setPasswordManagerInjectUrl(List<String> passwordManagerInjectUrl) {
    this.passwordManagerInjectUrl = passwordManagerInjectUrl;
  }


  public CreateSecret passwordManagerPassword(String passwordManagerPassword) {
    
    this.passwordManagerPassword = passwordManagerPassword;
    return this;
  }

   /**
   * For Password Management use, additional fields
   * @return passwordManagerPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, additional fields")

  public String getPasswordManagerPassword() {
    return passwordManagerPassword;
  }


  public void setPasswordManagerPassword(String passwordManagerPassword) {
    this.passwordManagerPassword = passwordManagerPassword;
  }


  public CreateSecret passwordManagerUsername(String passwordManagerUsername) {
    
    this.passwordManagerUsername = passwordManagerUsername;
    return this;
  }

   /**
   * For Password Management use
   * @return passwordManagerUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use")

  public String getPasswordManagerUsername() {
    return passwordManagerUsername;
  }


  public void setPasswordManagerUsername(String passwordManagerUsername) {
    this.passwordManagerUsername = passwordManagerUsername;
  }


  public CreateSecret protectionKey(String protectionKey) {
    
    this.protectionKey = protectionKey;
    return this;
  }

   /**
   * The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)
   * @return protectionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)")

  public String getProtectionKey() {
    return protectionKey;
  }


  public void setProtectionKey(String protectionKey) {
    this.protectionKey = protectionKey;
  }


  public CreateSecret secureAccessBastionIssuer(String secureAccessBastionIssuer) {
    
    this.secureAccessBastionIssuer = secureAccessBastionIssuer;
    return this;
  }

   /**
   * Get secureAccessBastionIssuer
   * @return secureAccessBastionIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecureAccessBastionIssuer() {
    return secureAccessBastionIssuer;
  }


  public void setSecureAccessBastionIssuer(String secureAccessBastionIssuer) {
    this.secureAccessBastionIssuer = secureAccessBastionIssuer;
  }


  public CreateSecret secureAccessEnable(String secureAccessEnable) {
    
    this.secureAccessEnable = secureAccessEnable;
    return this;
  }

   /**
   * Get secureAccessEnable
   * @return secureAccessEnable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecureAccessEnable() {
    return secureAccessEnable;
  }


  public void setSecureAccessEnable(String secureAccessEnable) {
    this.secureAccessEnable = secureAccessEnable;
  }


  public CreateSecret secureAccessHost(List<String> secureAccessHost) {
    
    this.secureAccessHost = secureAccessHost;
    return this;
  }

  public CreateSecret addSecureAccessHostItem(String secureAccessHostItem) {
    if (this.secureAccessHost == null) {
      this.secureAccessHost = new ArrayList<String>();
    }
    this.secureAccessHost.add(secureAccessHostItem);
    return this;
  }

   /**
   * Get secureAccessHost
   * @return secureAccessHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getSecureAccessHost() {
    return secureAccessHost;
  }


  public void setSecureAccessHost(List<String> secureAccessHost) {
    this.secureAccessHost = secureAccessHost;
  }


  public CreateSecret secureAccessSshCreds(String secureAccessSshCreds) {
    
    this.secureAccessSshCreds = secureAccessSshCreds;
    return this;
  }

   /**
   * Get secureAccessSshCreds
   * @return secureAccessSshCreds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecureAccessSshCreds() {
    return secureAccessSshCreds;
  }


  public void setSecureAccessSshCreds(String secureAccessSshCreds) {
    this.secureAccessSshCreds = secureAccessSshCreds;
  }


  public CreateSecret secureAccessSshUser(String secureAccessSshUser) {
    
    this.secureAccessSshUser = secureAccessSshUser;
    return this;
  }

   /**
   * Get secureAccessSshUser
   * @return secureAccessSshUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecureAccessSshUser() {
    return secureAccessSshUser;
  }


  public void setSecureAccessSshUser(String secureAccessSshUser) {
    this.secureAccessSshUser = secureAccessSshUser;
  }


  public CreateSecret secureAccessUrl(String secureAccessUrl) {
    
    this.secureAccessUrl = secureAccessUrl;
    return this;
  }

   /**
   * Get secureAccessUrl
   * @return secureAccessUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecureAccessUrl() {
    return secureAccessUrl;
  }


  public void setSecureAccessUrl(String secureAccessUrl) {
    this.secureAccessUrl = secureAccessUrl;
  }


  public CreateSecret secureAccessWebBrowsing(Boolean secureAccessWebBrowsing) {
    
    this.secureAccessWebBrowsing = secureAccessWebBrowsing;
    return this;
  }

   /**
   * Get secureAccessWebBrowsing
   * @return secureAccessWebBrowsing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSecureAccessWebBrowsing() {
    return secureAccessWebBrowsing;
  }


  public void setSecureAccessWebBrowsing(Boolean secureAccessWebBrowsing) {
    this.secureAccessWebBrowsing = secureAccessWebBrowsing;
  }


  public CreateSecret secureAccessWebProxy(Boolean secureAccessWebProxy) {
    
    this.secureAccessWebProxy = secureAccessWebProxy;
    return this;
  }

   /**
   * Get secureAccessWebProxy
   * @return secureAccessWebProxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSecureAccessWebProxy() {
    return secureAccessWebProxy;
  }


  public void setSecureAccessWebProxy(Boolean secureAccessWebProxy) {
    this.secureAccessWebProxy = secureAccessWebProxy;
  }


  public CreateSecret tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public CreateSecret addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * List of the tags attached to this secret
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of the tags attached to this secret")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public CreateSecret token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public CreateSecret type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * For Password Management use, reflect the website context
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, reflect the website context")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public CreateSecret uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public CreateSecret value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The secret value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "The secret value")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSecret createSecret = (CreateSecret) o;
    return Objects.equals(this.accessibility, createSecret.accessibility) &&
        Objects.equals(this.deleteProtection, createSecret.deleteProtection) &&
        Objects.equals(this.json, createSecret.json) &&
        Objects.equals(this.metadata, createSecret.metadata) &&
        Objects.equals(this.multilineValue, createSecret.multilineValue) &&
        Objects.equals(this.name, createSecret.name) &&
        Objects.equals(this.passwordManagerCustomField, createSecret.passwordManagerCustomField) &&
        Objects.equals(this.passwordManagerInjectUrl, createSecret.passwordManagerInjectUrl) &&
        Objects.equals(this.passwordManagerPassword, createSecret.passwordManagerPassword) &&
        Objects.equals(this.passwordManagerUsername, createSecret.passwordManagerUsername) &&
        Objects.equals(this.protectionKey, createSecret.protectionKey) &&
        Objects.equals(this.secureAccessBastionIssuer, createSecret.secureAccessBastionIssuer) &&
        Objects.equals(this.secureAccessEnable, createSecret.secureAccessEnable) &&
        Objects.equals(this.secureAccessHost, createSecret.secureAccessHost) &&
        Objects.equals(this.secureAccessSshCreds, createSecret.secureAccessSshCreds) &&
        Objects.equals(this.secureAccessSshUser, createSecret.secureAccessSshUser) &&
        Objects.equals(this.secureAccessUrl, createSecret.secureAccessUrl) &&
        Objects.equals(this.secureAccessWebBrowsing, createSecret.secureAccessWebBrowsing) &&
        Objects.equals(this.secureAccessWebProxy, createSecret.secureAccessWebProxy) &&
        Objects.equals(this.tags, createSecret.tags) &&
        Objects.equals(this.token, createSecret.token) &&
        Objects.equals(this.type, createSecret.type) &&
        Objects.equals(this.uidToken, createSecret.uidToken) &&
        Objects.equals(this.value, createSecret.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibility, deleteProtection, json, metadata, multilineValue, name, passwordManagerCustomField, passwordManagerInjectUrl, passwordManagerPassword, passwordManagerUsername, protectionKey, secureAccessBastionIssuer, secureAccessEnable, secureAccessHost, secureAccessSshCreds, secureAccessSshUser, secureAccessUrl, secureAccessWebBrowsing, secureAccessWebProxy, tags, token, type, uidToken, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSecret {\n");
    sb.append("    accessibility: ").append(toIndentedString(accessibility)).append("\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    multilineValue: ").append(toIndentedString(multilineValue)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    passwordManagerCustomField: ").append(toIndentedString(passwordManagerCustomField)).append("\n");
    sb.append("    passwordManagerInjectUrl: ").append(toIndentedString(passwordManagerInjectUrl)).append("\n");
    sb.append("    passwordManagerPassword: ").append(toIndentedString(passwordManagerPassword)).append("\n");
    sb.append("    passwordManagerUsername: ").append(toIndentedString(passwordManagerUsername)).append("\n");
    sb.append("    protectionKey: ").append(toIndentedString(protectionKey)).append("\n");
    sb.append("    secureAccessBastionIssuer: ").append(toIndentedString(secureAccessBastionIssuer)).append("\n");
    sb.append("    secureAccessEnable: ").append(toIndentedString(secureAccessEnable)).append("\n");
    sb.append("    secureAccessHost: ").append(toIndentedString(secureAccessHost)).append("\n");
    sb.append("    secureAccessSshCreds: ").append(toIndentedString(secureAccessSshCreds)).append("\n");
    sb.append("    secureAccessSshUser: ").append(toIndentedString(secureAccessSshUser)).append("\n");
    sb.append("    secureAccessUrl: ").append(toIndentedString(secureAccessUrl)).append("\n");
    sb.append("    secureAccessWebBrowsing: ").append(toIndentedString(secureAccessWebBrowsing)).append("\n");
    sb.append("    secureAccessWebProxy: ").append(toIndentedString(secureAccessWebProxy)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

