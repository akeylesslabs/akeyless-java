/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * GatewayGetLdapAuthConfigOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GatewayGetLdapAuthConfigOutput {
  public static final String SERIALIZED_NAME_LDAP_ACCESS_ID = "ldap_access_id";
  @SerializedName(SERIALIZED_NAME_LDAP_ACCESS_ID)
  @javax.annotation.Nullable
  private String ldapAccessId;

  public static final String SERIALIZED_NAME_LDAP_ANONYMOUS_SEARCH = "ldap_anonymous_search";
  @SerializedName(SERIALIZED_NAME_LDAP_ANONYMOUS_SEARCH)
  @javax.annotation.Nullable
  private Boolean ldapAnonymousSearch;

  public static final String SERIALIZED_NAME_LDAP_BIND_DN = "ldap_bind_dn";
  @SerializedName(SERIALIZED_NAME_LDAP_BIND_DN)
  @javax.annotation.Nullable
  private String ldapBindDn;

  public static final String SERIALIZED_NAME_LDAP_BIND_PASSWORD = "ldap_bind_password";
  @SerializedName(SERIALIZED_NAME_LDAP_BIND_PASSWORD)
  @javax.annotation.Nullable
  private String ldapBindPassword;

  public static final String SERIALIZED_NAME_LDAP_CERT = "ldap_cert";
  @SerializedName(SERIALIZED_NAME_LDAP_CERT)
  @javax.annotation.Nullable
  private String ldapCert;

  public static final String SERIALIZED_NAME_LDAP_ENABLE = "ldap_enable";
  @SerializedName(SERIALIZED_NAME_LDAP_ENABLE)
  @javax.annotation.Nullable
  private Boolean ldapEnable;

  public static final String SERIALIZED_NAME_LDAP_GROUP_ATTR = "ldap_group_attr";
  @SerializedName(SERIALIZED_NAME_LDAP_GROUP_ATTR)
  @javax.annotation.Nullable
  private String ldapGroupAttr;

  public static final String SERIALIZED_NAME_LDAP_GROUP_DN = "ldap_group_dn";
  @SerializedName(SERIALIZED_NAME_LDAP_GROUP_DN)
  @javax.annotation.Nullable
  private String ldapGroupDn;

  public static final String SERIALIZED_NAME_LDAP_GROUP_FILTER = "ldap_group_filter";
  @SerializedName(SERIALIZED_NAME_LDAP_GROUP_FILTER)
  @javax.annotation.Nullable
  private String ldapGroupFilter;

  public static final String SERIALIZED_NAME_LDAP_PRIVATE_KEY = "ldap_private_key";
  @SerializedName(SERIALIZED_NAME_LDAP_PRIVATE_KEY)
  @javax.annotation.Nullable
  private String ldapPrivateKey;

  public static final String SERIALIZED_NAME_LDAP_TOKEN_EXPIRATION = "ldap_token_expiration";
  @SerializedName(SERIALIZED_NAME_LDAP_TOKEN_EXPIRATION)
  @javax.annotation.Nullable
  private String ldapTokenExpiration;

  public static final String SERIALIZED_NAME_LDAP_URL = "ldap_url";
  @SerializedName(SERIALIZED_NAME_LDAP_URL)
  @javax.annotation.Nullable
  private String ldapUrl;

  public static final String SERIALIZED_NAME_LDAP_USER_ATTR = "ldap_user_attr";
  @SerializedName(SERIALIZED_NAME_LDAP_USER_ATTR)
  @javax.annotation.Nullable
  private String ldapUserAttr;

  public static final String SERIALIZED_NAME_LDAP_USER_DN = "ldap_user_dn";
  @SerializedName(SERIALIZED_NAME_LDAP_USER_DN)
  @javax.annotation.Nullable
  private String ldapUserDn;

  public GatewayGetLdapAuthConfigOutput() {
  }

  public GatewayGetLdapAuthConfigOutput ldapAccessId(@javax.annotation.Nullable String ldapAccessId) {
    this.ldapAccessId = ldapAccessId;
    return this;
  }

  /**
   * Get ldapAccessId
   * @return ldapAccessId
   */
  @javax.annotation.Nullable
  public String getLdapAccessId() {
    return ldapAccessId;
  }

  public void setLdapAccessId(@javax.annotation.Nullable String ldapAccessId) {
    this.ldapAccessId = ldapAccessId;
  }


  public GatewayGetLdapAuthConfigOutput ldapAnonymousSearch(@javax.annotation.Nullable Boolean ldapAnonymousSearch) {
    this.ldapAnonymousSearch = ldapAnonymousSearch;
    return this;
  }

  /**
   * Get ldapAnonymousSearch
   * @return ldapAnonymousSearch
   */
  @javax.annotation.Nullable
  public Boolean getLdapAnonymousSearch() {
    return ldapAnonymousSearch;
  }

  public void setLdapAnonymousSearch(@javax.annotation.Nullable Boolean ldapAnonymousSearch) {
    this.ldapAnonymousSearch = ldapAnonymousSearch;
  }


  public GatewayGetLdapAuthConfigOutput ldapBindDn(@javax.annotation.Nullable String ldapBindDn) {
    this.ldapBindDn = ldapBindDn;
    return this;
  }

  /**
   * Get ldapBindDn
   * @return ldapBindDn
   */
  @javax.annotation.Nullable
  public String getLdapBindDn() {
    return ldapBindDn;
  }

  public void setLdapBindDn(@javax.annotation.Nullable String ldapBindDn) {
    this.ldapBindDn = ldapBindDn;
  }


  public GatewayGetLdapAuthConfigOutput ldapBindPassword(@javax.annotation.Nullable String ldapBindPassword) {
    this.ldapBindPassword = ldapBindPassword;
    return this;
  }

  /**
   * Get ldapBindPassword
   * @return ldapBindPassword
   */
  @javax.annotation.Nullable
  public String getLdapBindPassword() {
    return ldapBindPassword;
  }

  public void setLdapBindPassword(@javax.annotation.Nullable String ldapBindPassword) {
    this.ldapBindPassword = ldapBindPassword;
  }


  public GatewayGetLdapAuthConfigOutput ldapCert(@javax.annotation.Nullable String ldapCert) {
    this.ldapCert = ldapCert;
    return this;
  }

  /**
   * Get ldapCert
   * @return ldapCert
   */
  @javax.annotation.Nullable
  public String getLdapCert() {
    return ldapCert;
  }

  public void setLdapCert(@javax.annotation.Nullable String ldapCert) {
    this.ldapCert = ldapCert;
  }


  public GatewayGetLdapAuthConfigOutput ldapEnable(@javax.annotation.Nullable Boolean ldapEnable) {
    this.ldapEnable = ldapEnable;
    return this;
  }

  /**
   * Get ldapEnable
   * @return ldapEnable
   */
  @javax.annotation.Nullable
  public Boolean getLdapEnable() {
    return ldapEnable;
  }

  public void setLdapEnable(@javax.annotation.Nullable Boolean ldapEnable) {
    this.ldapEnable = ldapEnable;
  }


  public GatewayGetLdapAuthConfigOutput ldapGroupAttr(@javax.annotation.Nullable String ldapGroupAttr) {
    this.ldapGroupAttr = ldapGroupAttr;
    return this;
  }

  /**
   * Get ldapGroupAttr
   * @return ldapGroupAttr
   */
  @javax.annotation.Nullable
  public String getLdapGroupAttr() {
    return ldapGroupAttr;
  }

  public void setLdapGroupAttr(@javax.annotation.Nullable String ldapGroupAttr) {
    this.ldapGroupAttr = ldapGroupAttr;
  }


  public GatewayGetLdapAuthConfigOutput ldapGroupDn(@javax.annotation.Nullable String ldapGroupDn) {
    this.ldapGroupDn = ldapGroupDn;
    return this;
  }

  /**
   * Get ldapGroupDn
   * @return ldapGroupDn
   */
  @javax.annotation.Nullable
  public String getLdapGroupDn() {
    return ldapGroupDn;
  }

  public void setLdapGroupDn(@javax.annotation.Nullable String ldapGroupDn) {
    this.ldapGroupDn = ldapGroupDn;
  }


  public GatewayGetLdapAuthConfigOutput ldapGroupFilter(@javax.annotation.Nullable String ldapGroupFilter) {
    this.ldapGroupFilter = ldapGroupFilter;
    return this;
  }

  /**
   * Get ldapGroupFilter
   * @return ldapGroupFilter
   */
  @javax.annotation.Nullable
  public String getLdapGroupFilter() {
    return ldapGroupFilter;
  }

  public void setLdapGroupFilter(@javax.annotation.Nullable String ldapGroupFilter) {
    this.ldapGroupFilter = ldapGroupFilter;
  }


  public GatewayGetLdapAuthConfigOutput ldapPrivateKey(@javax.annotation.Nullable String ldapPrivateKey) {
    this.ldapPrivateKey = ldapPrivateKey;
    return this;
  }

  /**
   * Get ldapPrivateKey
   * @return ldapPrivateKey
   */
  @javax.annotation.Nullable
  public String getLdapPrivateKey() {
    return ldapPrivateKey;
  }

  public void setLdapPrivateKey(@javax.annotation.Nullable String ldapPrivateKey) {
    this.ldapPrivateKey = ldapPrivateKey;
  }


  public GatewayGetLdapAuthConfigOutput ldapTokenExpiration(@javax.annotation.Nullable String ldapTokenExpiration) {
    this.ldapTokenExpiration = ldapTokenExpiration;
    return this;
  }

  /**
   * Get ldapTokenExpiration
   * @return ldapTokenExpiration
   */
  @javax.annotation.Nullable
  public String getLdapTokenExpiration() {
    return ldapTokenExpiration;
  }

  public void setLdapTokenExpiration(@javax.annotation.Nullable String ldapTokenExpiration) {
    this.ldapTokenExpiration = ldapTokenExpiration;
  }


  public GatewayGetLdapAuthConfigOutput ldapUrl(@javax.annotation.Nullable String ldapUrl) {
    this.ldapUrl = ldapUrl;
    return this;
  }

  /**
   * Get ldapUrl
   * @return ldapUrl
   */
  @javax.annotation.Nullable
  public String getLdapUrl() {
    return ldapUrl;
  }

  public void setLdapUrl(@javax.annotation.Nullable String ldapUrl) {
    this.ldapUrl = ldapUrl;
  }


  public GatewayGetLdapAuthConfigOutput ldapUserAttr(@javax.annotation.Nullable String ldapUserAttr) {
    this.ldapUserAttr = ldapUserAttr;
    return this;
  }

  /**
   * Get ldapUserAttr
   * @return ldapUserAttr
   */
  @javax.annotation.Nullable
  public String getLdapUserAttr() {
    return ldapUserAttr;
  }

  public void setLdapUserAttr(@javax.annotation.Nullable String ldapUserAttr) {
    this.ldapUserAttr = ldapUserAttr;
  }


  public GatewayGetLdapAuthConfigOutput ldapUserDn(@javax.annotation.Nullable String ldapUserDn) {
    this.ldapUserDn = ldapUserDn;
    return this;
  }

  /**
   * Get ldapUserDn
   * @return ldapUserDn
   */
  @javax.annotation.Nullable
  public String getLdapUserDn() {
    return ldapUserDn;
  }

  public void setLdapUserDn(@javax.annotation.Nullable String ldapUserDn) {
    this.ldapUserDn = ldapUserDn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GatewayGetLdapAuthConfigOutput gatewayGetLdapAuthConfigOutput = (GatewayGetLdapAuthConfigOutput) o;
    return Objects.equals(this.ldapAccessId, gatewayGetLdapAuthConfigOutput.ldapAccessId) &&
        Objects.equals(this.ldapAnonymousSearch, gatewayGetLdapAuthConfigOutput.ldapAnonymousSearch) &&
        Objects.equals(this.ldapBindDn, gatewayGetLdapAuthConfigOutput.ldapBindDn) &&
        Objects.equals(this.ldapBindPassword, gatewayGetLdapAuthConfigOutput.ldapBindPassword) &&
        Objects.equals(this.ldapCert, gatewayGetLdapAuthConfigOutput.ldapCert) &&
        Objects.equals(this.ldapEnable, gatewayGetLdapAuthConfigOutput.ldapEnable) &&
        Objects.equals(this.ldapGroupAttr, gatewayGetLdapAuthConfigOutput.ldapGroupAttr) &&
        Objects.equals(this.ldapGroupDn, gatewayGetLdapAuthConfigOutput.ldapGroupDn) &&
        Objects.equals(this.ldapGroupFilter, gatewayGetLdapAuthConfigOutput.ldapGroupFilter) &&
        Objects.equals(this.ldapPrivateKey, gatewayGetLdapAuthConfigOutput.ldapPrivateKey) &&
        Objects.equals(this.ldapTokenExpiration, gatewayGetLdapAuthConfigOutput.ldapTokenExpiration) &&
        Objects.equals(this.ldapUrl, gatewayGetLdapAuthConfigOutput.ldapUrl) &&
        Objects.equals(this.ldapUserAttr, gatewayGetLdapAuthConfigOutput.ldapUserAttr) &&
        Objects.equals(this.ldapUserDn, gatewayGetLdapAuthConfigOutput.ldapUserDn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ldapAccessId, ldapAnonymousSearch, ldapBindDn, ldapBindPassword, ldapCert, ldapEnable, ldapGroupAttr, ldapGroupDn, ldapGroupFilter, ldapPrivateKey, ldapTokenExpiration, ldapUrl, ldapUserAttr, ldapUserDn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GatewayGetLdapAuthConfigOutput {\n");
    sb.append("    ldapAccessId: ").append(toIndentedString(ldapAccessId)).append("\n");
    sb.append("    ldapAnonymousSearch: ").append(toIndentedString(ldapAnonymousSearch)).append("\n");
    sb.append("    ldapBindDn: ").append(toIndentedString(ldapBindDn)).append("\n");
    sb.append("    ldapBindPassword: ").append(toIndentedString(ldapBindPassword)).append("\n");
    sb.append("    ldapCert: ").append(toIndentedString(ldapCert)).append("\n");
    sb.append("    ldapEnable: ").append(toIndentedString(ldapEnable)).append("\n");
    sb.append("    ldapGroupAttr: ").append(toIndentedString(ldapGroupAttr)).append("\n");
    sb.append("    ldapGroupDn: ").append(toIndentedString(ldapGroupDn)).append("\n");
    sb.append("    ldapGroupFilter: ").append(toIndentedString(ldapGroupFilter)).append("\n");
    sb.append("    ldapPrivateKey: ").append(toIndentedString(ldapPrivateKey)).append("\n");
    sb.append("    ldapTokenExpiration: ").append(toIndentedString(ldapTokenExpiration)).append("\n");
    sb.append("    ldapUrl: ").append(toIndentedString(ldapUrl)).append("\n");
    sb.append("    ldapUserAttr: ").append(toIndentedString(ldapUserAttr)).append("\n");
    sb.append("    ldapUserDn: ").append(toIndentedString(ldapUserDn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ldap_access_id");
    openapiFields.add("ldap_anonymous_search");
    openapiFields.add("ldap_bind_dn");
    openapiFields.add("ldap_bind_password");
    openapiFields.add("ldap_cert");
    openapiFields.add("ldap_enable");
    openapiFields.add("ldap_group_attr");
    openapiFields.add("ldap_group_dn");
    openapiFields.add("ldap_group_filter");
    openapiFields.add("ldap_private_key");
    openapiFields.add("ldap_token_expiration");
    openapiFields.add("ldap_url");
    openapiFields.add("ldap_user_attr");
    openapiFields.add("ldap_user_dn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GatewayGetLdapAuthConfigOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GatewayGetLdapAuthConfigOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GatewayGetLdapAuthConfigOutput is not found in the empty JSON string", GatewayGetLdapAuthConfigOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GatewayGetLdapAuthConfigOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GatewayGetLdapAuthConfigOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ldap_access_id") != null && !jsonObj.get("ldap_access_id").isJsonNull()) && !jsonObj.get("ldap_access_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_access_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_access_id").toString()));
      }
      if ((jsonObj.get("ldap_bind_dn") != null && !jsonObj.get("ldap_bind_dn").isJsonNull()) && !jsonObj.get("ldap_bind_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_bind_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_bind_dn").toString()));
      }
      if ((jsonObj.get("ldap_bind_password") != null && !jsonObj.get("ldap_bind_password").isJsonNull()) && !jsonObj.get("ldap_bind_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_bind_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_bind_password").toString()));
      }
      if ((jsonObj.get("ldap_cert") != null && !jsonObj.get("ldap_cert").isJsonNull()) && !jsonObj.get("ldap_cert").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_cert` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_cert").toString()));
      }
      if ((jsonObj.get("ldap_group_attr") != null && !jsonObj.get("ldap_group_attr").isJsonNull()) && !jsonObj.get("ldap_group_attr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_group_attr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_group_attr").toString()));
      }
      if ((jsonObj.get("ldap_group_dn") != null && !jsonObj.get("ldap_group_dn").isJsonNull()) && !jsonObj.get("ldap_group_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_group_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_group_dn").toString()));
      }
      if ((jsonObj.get("ldap_group_filter") != null && !jsonObj.get("ldap_group_filter").isJsonNull()) && !jsonObj.get("ldap_group_filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_group_filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_group_filter").toString()));
      }
      if ((jsonObj.get("ldap_private_key") != null && !jsonObj.get("ldap_private_key").isJsonNull()) && !jsonObj.get("ldap_private_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_private_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_private_key").toString()));
      }
      if ((jsonObj.get("ldap_token_expiration") != null && !jsonObj.get("ldap_token_expiration").isJsonNull()) && !jsonObj.get("ldap_token_expiration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_token_expiration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_token_expiration").toString()));
      }
      if ((jsonObj.get("ldap_url") != null && !jsonObj.get("ldap_url").isJsonNull()) && !jsonObj.get("ldap_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_url").toString()));
      }
      if ((jsonObj.get("ldap_user_attr") != null && !jsonObj.get("ldap_user_attr").isJsonNull()) && !jsonObj.get("ldap_user_attr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_user_attr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_user_attr").toString()));
      }
      if ((jsonObj.get("ldap_user_dn") != null && !jsonObj.get("ldap_user_dn").isJsonNull()) && !jsonObj.get("ldap_user_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ldap_user_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ldap_user_dn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GatewayGetLdapAuthConfigOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GatewayGetLdapAuthConfigOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GatewayGetLdapAuthConfigOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GatewayGetLdapAuthConfigOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<GatewayGetLdapAuthConfigOutput>() {
           @Override
           public void write(JsonWriter out, GatewayGetLdapAuthConfigOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GatewayGetLdapAuthConfigOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GatewayGetLdapAuthConfigOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GatewayGetLdapAuthConfigOutput
   * @throws IOException if the JSON string is invalid with respect to GatewayGetLdapAuthConfigOutput
   */
  public static GatewayGetLdapAuthConfigOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GatewayGetLdapAuthConfigOutput.class);
  }

  /**
   * Convert an instance of GatewayGetLdapAuthConfigOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

