/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.AccessPermissionAssignment;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * GetGroupOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class GetGroupOutput {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String accountId;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime creationDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_GROUP_ALIAS = "group_alias";
  @SerializedName(SERIALIZED_NAME_GROUP_ALIAS)
  @javax.annotation.Nullable
  private String groupAlias;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  @javax.annotation.Nullable
  private String groupId;

  public static final String SERIALIZED_NAME_GROUP_NAME = "group_name";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  @javax.annotation.Nullable
  private String groupName;

  public static final String SERIALIZED_NAME_IS_SUBCLAIMS_WITH_OPERATOR = "is_subclaims_with_operator";
  @SerializedName(SERIALIZED_NAME_IS_SUBCLAIMS_WITH_OPERATOR)
  @javax.annotation.Nullable
  private Boolean isSubclaimsWithOperator;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modification_date";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  @javax.annotation.Nullable
  private OffsetDateTime modificationDate;

  public static final String SERIALIZED_NAME_USER_ASSIGNMENTS = "user_assignments";
  @SerializedName(SERIALIZED_NAME_USER_ASSIGNMENTS)
  @javax.annotation.Nullable
  private List<AccessPermissionAssignment> userAssignments = new ArrayList<>();

  public GetGroupOutput() {
  }

  public GetGroupOutput accountId(@javax.annotation.Nullable String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(@javax.annotation.Nullable String accountId) {
    this.accountId = accountId;
  }


  public GetGroupOutput creationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }


  public GetGroupOutput description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public GetGroupOutput groupAlias(@javax.annotation.Nullable String groupAlias) {
    this.groupAlias = groupAlias;
    return this;
  }

  /**
   * Get groupAlias
   * @return groupAlias
   */
  @javax.annotation.Nullable
  public String getGroupAlias() {
    return groupAlias;
  }

  public void setGroupAlias(@javax.annotation.Nullable String groupAlias) {
    this.groupAlias = groupAlias;
  }


  public GetGroupOutput groupId(@javax.annotation.Nullable String groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * Get groupId
   * @return groupId
   */
  @javax.annotation.Nullable
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(@javax.annotation.Nullable String groupId) {
    this.groupId = groupId;
  }


  public GetGroupOutput groupName(@javax.annotation.Nullable String groupName) {
    this.groupName = groupName;
    return this;
  }

  /**
   * Get groupName
   * @return groupName
   */
  @javax.annotation.Nullable
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(@javax.annotation.Nullable String groupName) {
    this.groupName = groupName;
  }


  public GetGroupOutput isSubclaimsWithOperator(@javax.annotation.Nullable Boolean isSubclaimsWithOperator) {
    this.isSubclaimsWithOperator = isSubclaimsWithOperator;
    return this;
  }

  /**
   * Get isSubclaimsWithOperator
   * @return isSubclaimsWithOperator
   */
  @javax.annotation.Nullable
  public Boolean getIsSubclaimsWithOperator() {
    return isSubclaimsWithOperator;
  }

  public void setIsSubclaimsWithOperator(@javax.annotation.Nullable Boolean isSubclaimsWithOperator) {
    this.isSubclaimsWithOperator = isSubclaimsWithOperator;
  }


  public GetGroupOutput modificationDate(@javax.annotation.Nullable OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

  /**
   * Get modificationDate
   * @return modificationDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(@javax.annotation.Nullable OffsetDateTime modificationDate) {
    this.modificationDate = modificationDate;
  }


  public GetGroupOutput userAssignments(@javax.annotation.Nullable List<AccessPermissionAssignment> userAssignments) {
    this.userAssignments = userAssignments;
    return this;
  }

  public GetGroupOutput addUserAssignmentsItem(AccessPermissionAssignment userAssignmentsItem) {
    if (this.userAssignments == null) {
      this.userAssignments = new ArrayList<>();
    }
    this.userAssignments.add(userAssignmentsItem);
    return this;
  }

  /**
   * Get userAssignments
   * @return userAssignments
   */
  @javax.annotation.Nullable
  public List<AccessPermissionAssignment> getUserAssignments() {
    return userAssignments;
  }

  public void setUserAssignments(@javax.annotation.Nullable List<AccessPermissionAssignment> userAssignments) {
    this.userAssignments = userAssignments;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetGroupOutput getGroupOutput = (GetGroupOutput) o;
    return Objects.equals(this.accountId, getGroupOutput.accountId) &&
        Objects.equals(this.creationDate, getGroupOutput.creationDate) &&
        Objects.equals(this.description, getGroupOutput.description) &&
        Objects.equals(this.groupAlias, getGroupOutput.groupAlias) &&
        Objects.equals(this.groupId, getGroupOutput.groupId) &&
        Objects.equals(this.groupName, getGroupOutput.groupName) &&
        Objects.equals(this.isSubclaimsWithOperator, getGroupOutput.isSubclaimsWithOperator) &&
        Objects.equals(this.modificationDate, getGroupOutput.modificationDate) &&
        Objects.equals(this.userAssignments, getGroupOutput.userAssignments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, creationDate, description, groupAlias, groupId, groupName, isSubclaimsWithOperator, modificationDate, userAssignments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetGroupOutput {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    groupAlias: ").append(toIndentedString(groupAlias)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    isSubclaimsWithOperator: ").append(toIndentedString(isSubclaimsWithOperator)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    userAssignments: ").append(toIndentedString(userAssignments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_id");
    openapiFields.add("creation_date");
    openapiFields.add("description");
    openapiFields.add("group_alias");
    openapiFields.add("group_id");
    openapiFields.add("group_name");
    openapiFields.add("is_subclaims_with_operator");
    openapiFields.add("modification_date");
    openapiFields.add("user_assignments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetGroupOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetGroupOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetGroupOutput is not found in the empty JSON string", GetGroupOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetGroupOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetGroupOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_id") != null && !jsonObj.get("account_id").isJsonNull()) && !jsonObj.get("account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("group_alias") != null && !jsonObj.get("group_alias").isJsonNull()) && !jsonObj.get("group_alias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_alias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_alias").toString()));
      }
      if ((jsonObj.get("group_id") != null && !jsonObj.get("group_id").isJsonNull()) && !jsonObj.get("group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_id").toString()));
      }
      if ((jsonObj.get("group_name") != null && !jsonObj.get("group_name").isJsonNull()) && !jsonObj.get("group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_name").toString()));
      }
      if (jsonObj.get("user_assignments") != null && !jsonObj.get("user_assignments").isJsonNull()) {
        JsonArray jsonArrayuserAssignments = jsonObj.getAsJsonArray("user_assignments");
        if (jsonArrayuserAssignments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("user_assignments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `user_assignments` to be an array in the JSON string but got `%s`", jsonObj.get("user_assignments").toString()));
          }

          // validate the optional field `user_assignments` (array)
          for (int i = 0; i < jsonArrayuserAssignments.size(); i++) {
            AccessPermissionAssignment.validateJsonElement(jsonArrayuserAssignments.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetGroupOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetGroupOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetGroupOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetGroupOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<GetGroupOutput>() {
           @Override
           public void write(JsonWriter out, GetGroupOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetGroupOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetGroupOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetGroupOutput
   * @throws IOException if the JSON string is invalid with respect to GetGroupOutput
   */
  public static GetGroupOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetGroupOutput.class);
  }

  /**
   * Convert an instance of GetGroupOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

