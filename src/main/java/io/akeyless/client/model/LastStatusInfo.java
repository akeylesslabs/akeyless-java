/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.MigrationStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LastStatusInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LastStatusInfo {
  public static final String SERIALIZED_NAME_MIGRATIONS_STATUS = "migrations_status";
  @SerializedName(SERIALIZED_NAME_MIGRATIONS_STATUS)
  private MigrationStatus migrationsStatus;

  public static final String SERIALIZED_NAME_PRODUCERS_ERRORS = "producers_errors";
  @SerializedName(SERIALIZED_NAME_PRODUCERS_ERRORS)
  private Object producersErrors;

  public static final String SERIALIZED_NAME_WAS_MIGRATIONS_COPIED_TO_NEW_TABLE = "was_migrations_copied_to_new_table";
  @SerializedName(SERIALIZED_NAME_WAS_MIGRATIONS_COPIED_TO_NEW_TABLE)
  private Boolean wasMigrationsCopiedToNewTable;

  public LastStatusInfo() { 
  }

  public LastStatusInfo migrationsStatus(MigrationStatus migrationsStatus) {
    
    this.migrationsStatus = migrationsStatus;
    return this;
  }

   /**
   * Get migrationsStatus
   * @return migrationsStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MigrationStatus getMigrationsStatus() {
    return migrationsStatus;
  }


  public void setMigrationsStatus(MigrationStatus migrationsStatus) {
    this.migrationsStatus = migrationsStatus;
  }


  public LastStatusInfo producersErrors(Object producersErrors) {
    
    this.producersErrors = producersErrors;
    return this;
  }

   /**
   * Get producersErrors
   * @return producersErrors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getProducersErrors() {
    return producersErrors;
  }


  public void setProducersErrors(Object producersErrors) {
    this.producersErrors = producersErrors;
  }


  public LastStatusInfo wasMigrationsCopiedToNewTable(Boolean wasMigrationsCopiedToNewTable) {
    
    this.wasMigrationsCopiedToNewTable = wasMigrationsCopiedToNewTable;
    return this;
  }

   /**
   * flag to indicate migrationStatus copied to new table
   * @return wasMigrationsCopiedToNewTable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "flag to indicate migrationStatus copied to new table")

  public Boolean getWasMigrationsCopiedToNewTable() {
    return wasMigrationsCopiedToNewTable;
  }


  public void setWasMigrationsCopiedToNewTable(Boolean wasMigrationsCopiedToNewTable) {
    this.wasMigrationsCopiedToNewTable = wasMigrationsCopiedToNewTable;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LastStatusInfo lastStatusInfo = (LastStatusInfo) o;
    return Objects.equals(this.migrationsStatus, lastStatusInfo.migrationsStatus) &&
        Objects.equals(this.producersErrors, lastStatusInfo.producersErrors) &&
        Objects.equals(this.wasMigrationsCopiedToNewTable, lastStatusInfo.wasMigrationsCopiedToNewTable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(migrationsStatus, producersErrors, wasMigrationsCopiedToNewTable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LastStatusInfo {\n");
    sb.append("    migrationsStatus: ").append(toIndentedString(migrationsStatus)).append("\n");
    sb.append("    producersErrors: ").append(toIndentedString(producersErrors)).append("\n");
    sb.append("    wasMigrationsCopiedToNewTable: ").append(toIndentedString(wasMigrationsCopiedToNewTable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

