/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * KubeconfigCluster
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KubeconfigCluster {
  public static final String SERIALIZED_NAME_CERTIFICATE_AUTHORITY = "certificate-authority";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_AUTHORITY)
  private String certificateAuthority;

  public static final String SERIALIZED_NAME_CERTIFICATE_AUTHORITY_DATA = "certificate-authority-data";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_AUTHORITY_DATA)
  private String certificateAuthorityData;

  public static final String SERIALIZED_NAME_SERVER = "server";
  @SerializedName(SERIALIZED_NAME_SERVER)
  private String server;

  public KubeconfigCluster() { 
  }

  public KubeconfigCluster certificateAuthority(String certificateAuthority) {
    
    this.certificateAuthority = certificateAuthority;
    return this;
  }

   /**
   * CertificateAuthority is optional and can be omitted if not used.
   * @return certificateAuthority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CertificateAuthority is optional and can be omitted if not used.")

  public String getCertificateAuthority() {
    return certificateAuthority;
  }


  public void setCertificateAuthority(String certificateAuthority) {
    this.certificateAuthority = certificateAuthority;
  }


  public KubeconfigCluster certificateAuthorityData(String certificateAuthorityData) {
    
    this.certificateAuthorityData = certificateAuthorityData;
    return this;
  }

   /**
   * Get certificateAuthorityData
   * @return certificateAuthorityData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertificateAuthorityData() {
    return certificateAuthorityData;
  }


  public void setCertificateAuthorityData(String certificateAuthorityData) {
    this.certificateAuthorityData = certificateAuthorityData;
  }


  public KubeconfigCluster server(String server) {
    
    this.server = server;
    return this;
  }

   /**
   * Get server
   * @return server
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getServer() {
    return server;
  }


  public void setServer(String server) {
    this.server = server;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubeconfigCluster kubeconfigCluster = (KubeconfigCluster) o;
    return Objects.equals(this.certificateAuthority, kubeconfigCluster.certificateAuthority) &&
        Objects.equals(this.certificateAuthorityData, kubeconfigCluster.certificateAuthorityData) &&
        Objects.equals(this.server, kubeconfigCluster.server);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateAuthority, certificateAuthorityData, server);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubeconfigCluster {\n");
    sb.append("    certificateAuthority: ").append(toIndentedString(certificateAuthority)).append("\n");
    sb.append("    certificateAuthorityData: ").append(toIndentedString(certificateAuthorityData)).append("\n");
    sb.append("    server: ").append(toIndentedString(server)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

