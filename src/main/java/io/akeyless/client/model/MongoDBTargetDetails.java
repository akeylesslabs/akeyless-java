/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MongoDBTargetDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MongoDBTargetDetails {
  public static final String SERIALIZED_NAME_MONGODB_ATLAS_API_PRIVATE_KEY = "mongodb_atlas_api_private_key";
  @SerializedName(SERIALIZED_NAME_MONGODB_ATLAS_API_PRIVATE_KEY)
  private String mongodbAtlasApiPrivateKey;

  public static final String SERIALIZED_NAME_MONGODB_ATLAS_API_PUBLIC_KEY = "mongodb_atlas_api_public_key";
  @SerializedName(SERIALIZED_NAME_MONGODB_ATLAS_API_PUBLIC_KEY)
  private String mongodbAtlasApiPublicKey;

  public static final String SERIALIZED_NAME_MONGODB_ATLAS_PROJECT_ID = "mongodb_atlas_project_id";
  @SerializedName(SERIALIZED_NAME_MONGODB_ATLAS_PROJECT_ID)
  private String mongodbAtlasProjectId;

  public static final String SERIALIZED_NAME_MONGODB_DB_NAME = "mongodb_db_name";
  @SerializedName(SERIALIZED_NAME_MONGODB_DB_NAME)
  private String mongodbDbName;

  public static final String SERIALIZED_NAME_MONGODB_DEFAULT_AUTH_DB = "mongodb_default_auth_db";
  @SerializedName(SERIALIZED_NAME_MONGODB_DEFAULT_AUTH_DB)
  private String mongodbDefaultAuthDb;

  public static final String SERIALIZED_NAME_MONGODB_HOST_PORT = "mongodb_host_port";
  @SerializedName(SERIALIZED_NAME_MONGODB_HOST_PORT)
  private String mongodbHostPort;

  public static final String SERIALIZED_NAME_MONGODB_IS_ATLAS = "mongodb_is_atlas";
  @SerializedName(SERIALIZED_NAME_MONGODB_IS_ATLAS)
  private Boolean mongodbIsAtlas;

  public static final String SERIALIZED_NAME_MONGODB_PASSWORD = "mongodb_password";
  @SerializedName(SERIALIZED_NAME_MONGODB_PASSWORD)
  private String mongodbPassword;

  public static final String SERIALIZED_NAME_MONGODB_URI_CONNECTION = "mongodb_uri_connection";
  @SerializedName(SERIALIZED_NAME_MONGODB_URI_CONNECTION)
  private String mongodbUriConnection;

  public static final String SERIALIZED_NAME_MONGODB_URI_OPTIONS = "mongodb_uri_options";
  @SerializedName(SERIALIZED_NAME_MONGODB_URI_OPTIONS)
  private String mongodbUriOptions;

  public static final String SERIALIZED_NAME_MONGODB_USERNAME = "mongodb_username";
  @SerializedName(SERIALIZED_NAME_MONGODB_USERNAME)
  private String mongodbUsername;

  public MongoDBTargetDetails() { 
  }

  public MongoDBTargetDetails mongodbAtlasApiPrivateKey(String mongodbAtlasApiPrivateKey) {
    
    this.mongodbAtlasApiPrivateKey = mongodbAtlasApiPrivateKey;
    return this;
  }

   /**
   * Get mongodbAtlasApiPrivateKey
   * @return mongodbAtlasApiPrivateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbAtlasApiPrivateKey() {
    return mongodbAtlasApiPrivateKey;
  }


  public void setMongodbAtlasApiPrivateKey(String mongodbAtlasApiPrivateKey) {
    this.mongodbAtlasApiPrivateKey = mongodbAtlasApiPrivateKey;
  }


  public MongoDBTargetDetails mongodbAtlasApiPublicKey(String mongodbAtlasApiPublicKey) {
    
    this.mongodbAtlasApiPublicKey = mongodbAtlasApiPublicKey;
    return this;
  }

   /**
   * Get mongodbAtlasApiPublicKey
   * @return mongodbAtlasApiPublicKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbAtlasApiPublicKey() {
    return mongodbAtlasApiPublicKey;
  }


  public void setMongodbAtlasApiPublicKey(String mongodbAtlasApiPublicKey) {
    this.mongodbAtlasApiPublicKey = mongodbAtlasApiPublicKey;
  }


  public MongoDBTargetDetails mongodbAtlasProjectId(String mongodbAtlasProjectId) {
    
    this.mongodbAtlasProjectId = mongodbAtlasProjectId;
    return this;
  }

   /**
   * mongodb atlas fields
   * @return mongodbAtlasProjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "mongodb atlas fields")

  public String getMongodbAtlasProjectId() {
    return mongodbAtlasProjectId;
  }


  public void setMongodbAtlasProjectId(String mongodbAtlasProjectId) {
    this.mongodbAtlasProjectId = mongodbAtlasProjectId;
  }


  public MongoDBTargetDetails mongodbDbName(String mongodbDbName) {
    
    this.mongodbDbName = mongodbDbName;
    return this;
  }

   /**
   * common fields
   * @return mongodbDbName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "common fields")

  public String getMongodbDbName() {
    return mongodbDbName;
  }


  public void setMongodbDbName(String mongodbDbName) {
    this.mongodbDbName = mongodbDbName;
  }


  public MongoDBTargetDetails mongodbDefaultAuthDb(String mongodbDefaultAuthDb) {
    
    this.mongodbDefaultAuthDb = mongodbDefaultAuthDb;
    return this;
  }

   /**
   * Get mongodbDefaultAuthDb
   * @return mongodbDefaultAuthDb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbDefaultAuthDb() {
    return mongodbDefaultAuthDb;
  }


  public void setMongodbDefaultAuthDb(String mongodbDefaultAuthDb) {
    this.mongodbDefaultAuthDb = mongodbDefaultAuthDb;
  }


  public MongoDBTargetDetails mongodbHostPort(String mongodbHostPort) {
    
    this.mongodbHostPort = mongodbHostPort;
    return this;
  }

   /**
   * Get mongodbHostPort
   * @return mongodbHostPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbHostPort() {
    return mongodbHostPort;
  }


  public void setMongodbHostPort(String mongodbHostPort) {
    this.mongodbHostPort = mongodbHostPort;
  }


  public MongoDBTargetDetails mongodbIsAtlas(Boolean mongodbIsAtlas) {
    
    this.mongodbIsAtlas = mongodbIsAtlas;
    return this;
  }

   /**
   * Get mongodbIsAtlas
   * @return mongodbIsAtlas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMongodbIsAtlas() {
    return mongodbIsAtlas;
  }


  public void setMongodbIsAtlas(Boolean mongodbIsAtlas) {
    this.mongodbIsAtlas = mongodbIsAtlas;
  }


  public MongoDBTargetDetails mongodbPassword(String mongodbPassword) {
    
    this.mongodbPassword = mongodbPassword;
    return this;
  }

   /**
   * Get mongodbPassword
   * @return mongodbPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbPassword() {
    return mongodbPassword;
  }


  public void setMongodbPassword(String mongodbPassword) {
    this.mongodbPassword = mongodbPassword;
  }


  public MongoDBTargetDetails mongodbUriConnection(String mongodbUriConnection) {
    
    this.mongodbUriConnection = mongodbUriConnection;
    return this;
  }

   /**
   * mongodb fields
   * @return mongodbUriConnection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "mongodb fields")

  public String getMongodbUriConnection() {
    return mongodbUriConnection;
  }


  public void setMongodbUriConnection(String mongodbUriConnection) {
    this.mongodbUriConnection = mongodbUriConnection;
  }


  public MongoDBTargetDetails mongodbUriOptions(String mongodbUriOptions) {
    
    this.mongodbUriOptions = mongodbUriOptions;
    return this;
  }

   /**
   * Get mongodbUriOptions
   * @return mongodbUriOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbUriOptions() {
    return mongodbUriOptions;
  }


  public void setMongodbUriOptions(String mongodbUriOptions) {
    this.mongodbUriOptions = mongodbUriOptions;
  }


  public MongoDBTargetDetails mongodbUsername(String mongodbUsername) {
    
    this.mongodbUsername = mongodbUsername;
    return this;
  }

   /**
   * Get mongodbUsername
   * @return mongodbUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMongodbUsername() {
    return mongodbUsername;
  }


  public void setMongodbUsername(String mongodbUsername) {
    this.mongodbUsername = mongodbUsername;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MongoDBTargetDetails mongoDBTargetDetails = (MongoDBTargetDetails) o;
    return Objects.equals(this.mongodbAtlasApiPrivateKey, mongoDBTargetDetails.mongodbAtlasApiPrivateKey) &&
        Objects.equals(this.mongodbAtlasApiPublicKey, mongoDBTargetDetails.mongodbAtlasApiPublicKey) &&
        Objects.equals(this.mongodbAtlasProjectId, mongoDBTargetDetails.mongodbAtlasProjectId) &&
        Objects.equals(this.mongodbDbName, mongoDBTargetDetails.mongodbDbName) &&
        Objects.equals(this.mongodbDefaultAuthDb, mongoDBTargetDetails.mongodbDefaultAuthDb) &&
        Objects.equals(this.mongodbHostPort, mongoDBTargetDetails.mongodbHostPort) &&
        Objects.equals(this.mongodbIsAtlas, mongoDBTargetDetails.mongodbIsAtlas) &&
        Objects.equals(this.mongodbPassword, mongoDBTargetDetails.mongodbPassword) &&
        Objects.equals(this.mongodbUriConnection, mongoDBTargetDetails.mongodbUriConnection) &&
        Objects.equals(this.mongodbUriOptions, mongoDBTargetDetails.mongodbUriOptions) &&
        Objects.equals(this.mongodbUsername, mongoDBTargetDetails.mongodbUsername);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mongodbAtlasApiPrivateKey, mongodbAtlasApiPublicKey, mongodbAtlasProjectId, mongodbDbName, mongodbDefaultAuthDb, mongodbHostPort, mongodbIsAtlas, mongodbPassword, mongodbUriConnection, mongodbUriOptions, mongodbUsername);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MongoDBTargetDetails {\n");
    sb.append("    mongodbAtlasApiPrivateKey: ").append(toIndentedString(mongodbAtlasApiPrivateKey)).append("\n");
    sb.append("    mongodbAtlasApiPublicKey: ").append(toIndentedString(mongodbAtlasApiPublicKey)).append("\n");
    sb.append("    mongodbAtlasProjectId: ").append(toIndentedString(mongodbAtlasProjectId)).append("\n");
    sb.append("    mongodbDbName: ").append(toIndentedString(mongodbDbName)).append("\n");
    sb.append("    mongodbDefaultAuthDb: ").append(toIndentedString(mongodbDefaultAuthDb)).append("\n");
    sb.append("    mongodbHostPort: ").append(toIndentedString(mongodbHostPort)).append("\n");
    sb.append("    mongodbIsAtlas: ").append(toIndentedString(mongodbIsAtlas)).append("\n");
    sb.append("    mongodbPassword: ").append(toIndentedString(mongodbPassword)).append("\n");
    sb.append("    mongodbUriConnection: ").append(toIndentedString(mongodbUriConnection)).append("\n");
    sb.append("    mongodbUriOptions: ").append(toIndentedString(mongodbUriOptions)).append("\n");
    sb.append("    mongodbUsername: ").append(toIndentedString(mongodbUsername)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

