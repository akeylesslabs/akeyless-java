/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CertAccessRules
 */

public class CertAccessRules {
  public static final String SERIALIZED_NAME_ALLOWED_CORS = "allowed_cors";
  @SerializedName(SERIALIZED_NAME_ALLOWED_CORS)
  private List<String> allowedCors = null;

  public static final String SERIALIZED_NAME_BOUND_COMMON_NAMES = "bound_common_names";
  @SerializedName(SERIALIZED_NAME_BOUND_COMMON_NAMES)
  private List<String> boundCommonNames = null;

  public static final String SERIALIZED_NAME_BOUND_DNS_SANS = "bound_dns_sans";
  @SerializedName(SERIALIZED_NAME_BOUND_DNS_SANS)
  private List<String> boundDnsSans = null;

  public static final String SERIALIZED_NAME_BOUND_EMAIL_SANS = "bound_email_sans";
  @SerializedName(SERIALIZED_NAME_BOUND_EMAIL_SANS)
  private List<String> boundEmailSans = null;

  public static final String SERIALIZED_NAME_BOUND_EXTENSIONS = "bound_extensions";
  @SerializedName(SERIALIZED_NAME_BOUND_EXTENSIONS)
  private List<String> boundExtensions = null;

  public static final String SERIALIZED_NAME_BOUND_ORGANIZATIONAL_UNITS = "bound_organizational_units";
  @SerializedName(SERIALIZED_NAME_BOUND_ORGANIZATIONAL_UNITS)
  private List<String> boundOrganizationalUnits = null;

  public static final String SERIALIZED_NAME_BOUND_URI_SANS = "bound_uri_sans";
  @SerializedName(SERIALIZED_NAME_BOUND_URI_SANS)
  private List<String> boundUriSans = null;

  public static final String SERIALIZED_NAME_CERTIFICATE = "certificate";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE)
  private String certificate;

  public static final String SERIALIZED_NAME_REVOKED_CERT_IDS = "revoked_cert_ids";
  @SerializedName(SERIALIZED_NAME_REVOKED_CERT_IDS)
  private List<String> revokedCertIds = null;

  public static final String SERIALIZED_NAME_UNIQUE_IDENTIFIER = "unique_identifier";
  @SerializedName(SERIALIZED_NAME_UNIQUE_IDENTIFIER)
  private String uniqueIdentifier;


  public CertAccessRules allowedCors(List<String> allowedCors) {
    
    this.allowedCors = allowedCors;
    return this;
  }

  public CertAccessRules addAllowedCorsItem(String allowedCorsItem) {
    if (this.allowedCors == null) {
      this.allowedCors = new ArrayList<String>();
    }
    this.allowedCors.add(allowedCorsItem);
    return this;
  }

   /**
   * a list of allowed cors domains if used for browser authentication
   * @return allowedCors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "a list of allowed cors domains if used for browser authentication")

  public List<String> getAllowedCors() {
    return allowedCors;
  }


  public void setAllowedCors(List<String> allowedCors) {
    this.allowedCors = allowedCors;
  }


  public CertAccessRules boundCommonNames(List<String> boundCommonNames) {
    
    this.boundCommonNames = boundCommonNames;
    return this;
  }

  public CertAccessRules addBoundCommonNamesItem(String boundCommonNamesItem) {
    if (this.boundCommonNames == null) {
      this.boundCommonNames = new ArrayList<String>();
    }
    this.boundCommonNames.add(boundCommonNamesItem);
    return this;
  }

   /**
   * A list of names. At least one must exist in the Common Name. Supports globbing.
   * @return boundCommonNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of names. At least one must exist in the Common Name. Supports globbing.")

  public List<String> getBoundCommonNames() {
    return boundCommonNames;
  }


  public void setBoundCommonNames(List<String> boundCommonNames) {
    this.boundCommonNames = boundCommonNames;
  }


  public CertAccessRules boundDnsSans(List<String> boundDnsSans) {
    
    this.boundDnsSans = boundDnsSans;
    return this;
  }

  public CertAccessRules addBoundDnsSansItem(String boundDnsSansItem) {
    if (this.boundDnsSans == null) {
      this.boundDnsSans = new ArrayList<String>();
    }
    this.boundDnsSans.add(boundDnsSansItem);
    return this;
  }

   /**
   * A list of DNS names. At least one must exist in the SANs. Supports globbing.
   * @return boundDnsSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of DNS names. At least one must exist in the SANs. Supports globbing.")

  public List<String> getBoundDnsSans() {
    return boundDnsSans;
  }


  public void setBoundDnsSans(List<String> boundDnsSans) {
    this.boundDnsSans = boundDnsSans;
  }


  public CertAccessRules boundEmailSans(List<String> boundEmailSans) {
    
    this.boundEmailSans = boundEmailSans;
    return this;
  }

  public CertAccessRules addBoundEmailSansItem(String boundEmailSansItem) {
    if (this.boundEmailSans == null) {
      this.boundEmailSans = new ArrayList<String>();
    }
    this.boundEmailSans.add(boundEmailSansItem);
    return this;
  }

   /**
   * A list of Email Addresses. At least one must exist in the SANs. Supports globbing.
   * @return boundEmailSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Email Addresses. At least one must exist in the SANs. Supports globbing.")

  public List<String> getBoundEmailSans() {
    return boundEmailSans;
  }


  public void setBoundEmailSans(List<String> boundEmailSans) {
    this.boundEmailSans = boundEmailSans;
  }


  public CertAccessRules boundExtensions(List<String> boundExtensions) {
    
    this.boundExtensions = boundExtensions;
    return this;
  }

  public CertAccessRules addBoundExtensionsItem(String boundExtensionsItem) {
    if (this.boundExtensions == null) {
      this.boundExtensions = new ArrayList<String>();
    }
    this.boundExtensions.add(boundExtensionsItem);
    return this;
  }

   /**
   * A list of extensions formatted as \&quot;oid:value\&quot;. Expects the extension value to be some type of ASN1 encoded string. All values must match. Supports globbing on \&quot;value\&quot;.
   * @return boundExtensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of extensions formatted as \"oid:value\". Expects the extension value to be some type of ASN1 encoded string. All values must match. Supports globbing on \"value\".")

  public List<String> getBoundExtensions() {
    return boundExtensions;
  }


  public void setBoundExtensions(List<String> boundExtensions) {
    this.boundExtensions = boundExtensions;
  }


  public CertAccessRules boundOrganizationalUnits(List<String> boundOrganizationalUnits) {
    
    this.boundOrganizationalUnits = boundOrganizationalUnits;
    return this;
  }

  public CertAccessRules addBoundOrganizationalUnitsItem(String boundOrganizationalUnitsItem) {
    if (this.boundOrganizationalUnits == null) {
      this.boundOrganizationalUnits = new ArrayList<String>();
    }
    this.boundOrganizationalUnits.add(boundOrganizationalUnitsItem);
    return this;
  }

   /**
   * A list of Organizational Units names. At least one must exist in the OU field.
   * @return boundOrganizationalUnits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of Organizational Units names. At least one must exist in the OU field.")

  public List<String> getBoundOrganizationalUnits() {
    return boundOrganizationalUnits;
  }


  public void setBoundOrganizationalUnits(List<String> boundOrganizationalUnits) {
    this.boundOrganizationalUnits = boundOrganizationalUnits;
  }


  public CertAccessRules boundUriSans(List<String> boundUriSans) {
    
    this.boundUriSans = boundUriSans;
    return this;
  }

  public CertAccessRules addBoundUriSansItem(String boundUriSansItem) {
    if (this.boundUriSans == null) {
      this.boundUriSans = new ArrayList<String>();
    }
    this.boundUriSans.add(boundUriSansItem);
    return this;
  }

   /**
   * A list of URIs. At least one must exist in the SANs. Supports globbing.
   * @return boundUriSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of URIs. At least one must exist in the SANs. Supports globbing.")

  public List<String> getBoundUriSans() {
    return boundUriSans;
  }


  public void setBoundUriSans(List<String> boundUriSans) {
    this.boundUriSans = boundUriSans;
  }


  public CertAccessRules certificate(String certificate) {
    
    this.certificate = certificate;
    return this;
  }

   /**
   * Base64 encdoed PEM certificate
   * @return certificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64 encdoed PEM certificate")

  public String getCertificate() {
    return certificate;
  }


  public void setCertificate(String certificate) {
    this.certificate = certificate;
  }


  public CertAccessRules revokedCertIds(List<String> revokedCertIds) {
    
    this.revokedCertIds = revokedCertIds;
    return this;
  }

  public CertAccessRules addRevokedCertIdsItem(String revokedCertIdsItem) {
    if (this.revokedCertIds == null) {
      this.revokedCertIds = new ArrayList<String>();
    }
    this.revokedCertIds.add(revokedCertIdsItem);
    return this;
  }

   /**
   * A list of revoked cert ids
   * @return revokedCertIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of revoked cert ids")

  public List<String> getRevokedCertIds() {
    return revokedCertIds;
  }


  public void setRevokedCertIds(List<String> revokedCertIds) {
    this.revokedCertIds = revokedCertIds;
  }


  public CertAccessRules uniqueIdentifier(String uniqueIdentifier) {
    
    this.uniqueIdentifier = uniqueIdentifier;
    return this;
  }

   /**
   * A unique identifier to distinguish different users
   * @return uniqueIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique identifier to distinguish different users")

  public String getUniqueIdentifier() {
    return uniqueIdentifier;
  }


  public void setUniqueIdentifier(String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertAccessRules certAccessRules = (CertAccessRules) o;
    return Objects.equals(this.allowedCors, certAccessRules.allowedCors) &&
        Objects.equals(this.boundCommonNames, certAccessRules.boundCommonNames) &&
        Objects.equals(this.boundDnsSans, certAccessRules.boundDnsSans) &&
        Objects.equals(this.boundEmailSans, certAccessRules.boundEmailSans) &&
        Objects.equals(this.boundExtensions, certAccessRules.boundExtensions) &&
        Objects.equals(this.boundOrganizationalUnits, certAccessRules.boundOrganizationalUnits) &&
        Objects.equals(this.boundUriSans, certAccessRules.boundUriSans) &&
        Objects.equals(this.certificate, certAccessRules.certificate) &&
        Objects.equals(this.revokedCertIds, certAccessRules.revokedCertIds) &&
        Objects.equals(this.uniqueIdentifier, certAccessRules.uniqueIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedCors, boundCommonNames, boundDnsSans, boundEmailSans, boundExtensions, boundOrganizationalUnits, boundUriSans, certificate, revokedCertIds, uniqueIdentifier);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertAccessRules {\n");
    sb.append("    allowedCors: ").append(toIndentedString(allowedCors)).append("\n");
    sb.append("    boundCommonNames: ").append(toIndentedString(boundCommonNames)).append("\n");
    sb.append("    boundDnsSans: ").append(toIndentedString(boundDnsSans)).append("\n");
    sb.append("    boundEmailSans: ").append(toIndentedString(boundEmailSans)).append("\n");
    sb.append("    boundExtensions: ").append(toIndentedString(boundExtensions)).append("\n");
    sb.append("    boundOrganizationalUnits: ").append(toIndentedString(boundOrganizationalUnits)).append("\n");
    sb.append("    boundUriSans: ").append(toIndentedString(boundUriSans)).append("\n");
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("    revokedCertIds: ").append(toIndentedString(revokedCertIds)).append("\n");
    sb.append("    uniqueIdentifier: ").append(toIndentedString(uniqueIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

