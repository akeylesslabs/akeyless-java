/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * ItemSraStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ItemSraStatus {
  public static final String SERIALIZED_NAME_COUNT_BY_HOST_INFO = "count_by_host_info";
  @SerializedName(SERIALIZED_NAME_COUNT_BY_HOST_INFO)
  private Map<String, Long> countByHostInfo = null;

  public static final String SERIALIZED_NAME_COUNT_INFO = "count_info";
  @SerializedName(SERIALIZED_NAME_COUNT_INFO)
  private Map<String, Map<String, Long>> countInfo = null;

  public static final String SERIALIZED_NAME_HOSTS_IN_USE = "hosts_in_use";
  @SerializedName(SERIALIZED_NAME_HOSTS_IN_USE)
  private List<String> hostsInUse = null;

  public static final String SERIALIZED_NAME_IS_IN_USE = "is_in_use";
  @SerializedName(SERIALIZED_NAME_IS_IN_USE)
  private Boolean isInUse;

  public static final String SERIALIZED_NAME_LAST_USED_ITEM = "last_used_item";
  @SerializedName(SERIALIZED_NAME_LAST_USED_ITEM)
  private OffsetDateTime lastUsedItem;

  public ItemSraStatus() { 
  }

  public ItemSraStatus countByHostInfo(Map<String, Long> countByHostInfo) {
    
    this.countByHostInfo = countByHostInfo;
    return this;
  }

  public ItemSraStatus putCountByHostInfoItem(String key, Long countByHostInfoItem) {
    if (this.countByHostInfo == null) {
      this.countByHostInfo = new HashMap<String, Long>();
    }
    this.countByHostInfo.put(key, countByHostInfoItem);
    return this;
  }

   /**
   * Get countByHostInfo
   * @return countByHostInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Long> getCountByHostInfo() {
    return countByHostInfo;
  }


  public void setCountByHostInfo(Map<String, Long> countByHostInfo) {
    this.countByHostInfo = countByHostInfo;
  }


  public ItemSraStatus countInfo(Map<String, Map<String, Long>> countInfo) {
    
    this.countInfo = countInfo;
    return this;
  }

  public ItemSraStatus putCountInfoItem(String key, Map<String, Long> countInfoItem) {
    if (this.countInfo == null) {
      this.countInfo = new HashMap<String, Map<String, Long>>();
    }
    this.countInfo.put(key, countInfoItem);
    return this;
  }

   /**
   * Get countInfo
   * @return countInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Map<String, Long>> getCountInfo() {
    return countInfo;
  }


  public void setCountInfo(Map<String, Map<String, Long>> countInfo) {
    this.countInfo = countInfo;
  }


  public ItemSraStatus hostsInUse(List<String> hostsInUse) {
    
    this.hostsInUse = hostsInUse;
    return this;
  }

  public ItemSraStatus addHostsInUseItem(String hostsInUseItem) {
    if (this.hostsInUse == null) {
      this.hostsInUse = new ArrayList<String>();
    }
    this.hostsInUse.add(hostsInUseItem);
    return this;
  }

   /**
   * Get hostsInUse
   * @return hostsInUse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getHostsInUse() {
    return hostsInUse;
  }


  public void setHostsInUse(List<String> hostsInUse) {
    this.hostsInUse = hostsInUse;
  }


  public ItemSraStatus isInUse(Boolean isInUse) {
    
    this.isInUse = isInUse;
    return this;
  }

   /**
   * Get isInUse
   * @return isInUse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsInUse() {
    return isInUse;
  }


  public void setIsInUse(Boolean isInUse) {
    this.isInUse = isInUse;
  }


  public ItemSraStatus lastUsedItem(OffsetDateTime lastUsedItem) {
    
    this.lastUsedItem = lastUsedItem;
    return this;
  }

   /**
   * Get lastUsedItem
   * @return lastUsedItem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastUsedItem() {
    return lastUsedItem;
  }


  public void setLastUsedItem(OffsetDateTime lastUsedItem) {
    this.lastUsedItem = lastUsedItem;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemSraStatus itemSraStatus = (ItemSraStatus) o;
    return Objects.equals(this.countByHostInfo, itemSraStatus.countByHostInfo) &&
        Objects.equals(this.countInfo, itemSraStatus.countInfo) &&
        Objects.equals(this.hostsInUse, itemSraStatus.hostsInUse) &&
        Objects.equals(this.isInUse, itemSraStatus.isInUse) &&
        Objects.equals(this.lastUsedItem, itemSraStatus.lastUsedItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countByHostInfo, countInfo, hostsInUse, isInUse, lastUsedItem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemSraStatus {\n");
    sb.append("    countByHostInfo: ").append(toIndentedString(countByHostInfo)).append("\n");
    sb.append("    countInfo: ").append(toIndentedString(countInfo)).append("\n");
    sb.append("    hostsInUse: ").append(toIndentedString(hostsInUse)).append("\n");
    sb.append("    isInUse: ").append(toIndentedString(isInUse)).append("\n");
    sb.append("    lastUsedItem: ").append(toIndentedString(lastUsedItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

