/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.OIDCCustomClaim;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * OIDCAccessRules contains access rules specific to Open Id Connect authentication method.
 */
@ApiModel(description = "OIDCAccessRules contains access rules specific to Open Id Connect authentication method.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OIDCAccessRules {
  public static final String SERIALIZED_NAME_ALLOWED_REDIRECT_U_R_IS = "allowed_redirect_URIs";
  @SerializedName(SERIALIZED_NAME_ALLOWED_REDIRECT_U_R_IS)
  private List<String> allowedRedirectURIs = null;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  private String audience;

  public static final String SERIALIZED_NAME_BOUND_CLAIMS = "bound_claims";
  @SerializedName(SERIALIZED_NAME_BOUND_CLAIMS)
  private List<OIDCCustomClaim> boundClaims = null;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_SECRET = "client_secret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private String clientSecret;

  public static final String SERIALIZED_NAME_IS_INTERNAL = "is_internal";
  @SerializedName(SERIALIZED_NAME_IS_INTERNAL)
  private Boolean isInternal;

  public static final String SERIALIZED_NAME_ISSUER = "issuer";
  @SerializedName(SERIALIZED_NAME_ISSUER)
  private String issuer;

  public static final String SERIALIZED_NAME_REQUIRED_SCOPES = "required_scopes";
  @SerializedName(SERIALIZED_NAME_REQUIRED_SCOPES)
  private List<String> requiredScopes = null;

  public static final String SERIALIZED_NAME_REQUIRED_SCOPES_PREFIX = "required_scopes_prefix";
  @SerializedName(SERIALIZED_NAME_REQUIRED_SCOPES_PREFIX)
  private String requiredScopesPrefix;

  public static final String SERIALIZED_NAME_UNIQUE_IDENTIFIER = "unique_identifier";
  @SerializedName(SERIALIZED_NAME_UNIQUE_IDENTIFIER)
  private String uniqueIdentifier;

  public OIDCAccessRules() { 
  }

  public OIDCAccessRules allowedRedirectURIs(List<String> allowedRedirectURIs) {
    
    this.allowedRedirectURIs = allowedRedirectURIs;
    return this;
  }

  public OIDCAccessRules addAllowedRedirectURIsItem(String allowedRedirectURIsItem) {
    if (this.allowedRedirectURIs == null) {
      this.allowedRedirectURIs = new ArrayList<String>();
    }
    this.allowedRedirectURIs.add(allowedRedirectURIsItem);
    return this;
  }

   /**
   * Allowed redirect URIs after the authentication
   * @return allowedRedirectURIs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allowed redirect URIs after the authentication")

  public List<String> getAllowedRedirectURIs() {
    return allowedRedirectURIs;
  }


  public void setAllowedRedirectURIs(List<String> allowedRedirectURIs) {
    this.allowedRedirectURIs = allowedRedirectURIs;
  }


  public OIDCAccessRules audience(String audience) {
    
    this.audience = audience;
    return this;
  }

   /**
   * Audience claim to be used as part of the authentication flow. In case set, it must match the one configured on the Identity Provider&#39;s Application
   * @return audience
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Audience claim to be used as part of the authentication flow. In case set, it must match the one configured on the Identity Provider's Application")

  public String getAudience() {
    return audience;
  }


  public void setAudience(String audience) {
    this.audience = audience;
  }


  public OIDCAccessRules boundClaims(List<OIDCCustomClaim> boundClaims) {
    
    this.boundClaims = boundClaims;
    return this;
  }

  public OIDCAccessRules addBoundClaimsItem(OIDCCustomClaim boundClaimsItem) {
    if (this.boundClaims == null) {
      this.boundClaims = new ArrayList<OIDCCustomClaim>();
    }
    this.boundClaims.add(boundClaimsItem);
    return this;
  }

   /**
   * The claims that login is restricted to.
   * @return boundClaims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The claims that login is restricted to.")

  public List<OIDCCustomClaim> getBoundClaims() {
    return boundClaims;
  }


  public void setBoundClaims(List<OIDCCustomClaim> boundClaims) {
    this.boundClaims = boundClaims;
  }


  public OIDCAccessRules clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Client ID
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Client ID")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public OIDCAccessRules clientSecret(String clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Client Secret
   * @return clientSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Client Secret")

  public String getClientSecret() {
    return clientSecret;
  }


  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public OIDCAccessRules isInternal(Boolean isInternal) {
    
    this.isInternal = isInternal;
    return this;
  }

   /**
   * IsInternal indicates whether this is an internal Auth Method where the client has no control over it, or it was created by the client e.g - Sign In with Google will create an OIDC Auth Method with IsInternal&#x3D;true
   * @return isInternal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IsInternal indicates whether this is an internal Auth Method where the client has no control over it, or it was created by the client e.g - Sign In with Google will create an OIDC Auth Method with IsInternal=true")

  public Boolean getIsInternal() {
    return isInternal;
  }


  public void setIsInternal(Boolean isInternal) {
    this.isInternal = isInternal;
  }


  public OIDCAccessRules issuer(String issuer) {
    
    this.issuer = issuer;
    return this;
  }

   /**
   * Issuer URL
   * @return issuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Issuer URL")

  public String getIssuer() {
    return issuer;
  }


  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }


  public OIDCAccessRules requiredScopes(List<String> requiredScopes) {
    
    this.requiredScopes = requiredScopes;
    return this;
  }

  public OIDCAccessRules addRequiredScopesItem(String requiredScopesItem) {
    if (this.requiredScopes == null) {
      this.requiredScopes = new ArrayList<String>();
    }
    this.requiredScopes.add(requiredScopesItem);
    return this;
  }

   /**
   * A list of required scopes to request from the oidc provider, and to check on the token
   * @return requiredScopes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of required scopes to request from the oidc provider, and to check on the token")

  public List<String> getRequiredScopes() {
    return requiredScopes;
  }


  public void setRequiredScopes(List<String> requiredScopes) {
    this.requiredScopes = requiredScopes;
  }


  public OIDCAccessRules requiredScopesPrefix(String requiredScopesPrefix) {
    
    this.requiredScopesPrefix = requiredScopesPrefix;
    return this;
  }

   /**
   * A prefix to add to the required scopes (for example, azures&#39; Application ID URI)
   * @return requiredScopesPrefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A prefix to add to the required scopes (for example, azures' Application ID URI)")

  public String getRequiredScopesPrefix() {
    return requiredScopesPrefix;
  }


  public void setRequiredScopesPrefix(String requiredScopesPrefix) {
    this.requiredScopesPrefix = requiredScopesPrefix;
  }


  public OIDCAccessRules uniqueIdentifier(String uniqueIdentifier) {
    
    this.uniqueIdentifier = uniqueIdentifier;
    return this;
  }

   /**
   * A unique identifier to distinguish different users
   * @return uniqueIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A unique identifier to distinguish different users")

  public String getUniqueIdentifier() {
    return uniqueIdentifier;
  }


  public void setUniqueIdentifier(String uniqueIdentifier) {
    this.uniqueIdentifier = uniqueIdentifier;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OIDCAccessRules oiDCAccessRules = (OIDCAccessRules) o;
    return Objects.equals(this.allowedRedirectURIs, oiDCAccessRules.allowedRedirectURIs) &&
        Objects.equals(this.audience, oiDCAccessRules.audience) &&
        Objects.equals(this.boundClaims, oiDCAccessRules.boundClaims) &&
        Objects.equals(this.clientId, oiDCAccessRules.clientId) &&
        Objects.equals(this.clientSecret, oiDCAccessRules.clientSecret) &&
        Objects.equals(this.isInternal, oiDCAccessRules.isInternal) &&
        Objects.equals(this.issuer, oiDCAccessRules.issuer) &&
        Objects.equals(this.requiredScopes, oiDCAccessRules.requiredScopes) &&
        Objects.equals(this.requiredScopesPrefix, oiDCAccessRules.requiredScopesPrefix) &&
        Objects.equals(this.uniqueIdentifier, oiDCAccessRules.uniqueIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedRedirectURIs, audience, boundClaims, clientId, clientSecret, isInternal, issuer, requiredScopes, requiredScopesPrefix, uniqueIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OIDCAccessRules {\n");
    sb.append("    allowedRedirectURIs: ").append(toIndentedString(allowedRedirectURIs)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    boundClaims: ").append(toIndentedString(boundClaims)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    requiredScopes: ").append(toIndentedString(requiredScopes)).append("\n");
    sb.append("    requiredScopesPrefix: ").append(toIndentedString(requiredScopesPrefix)).append("\n");
    sb.append("    uniqueIdentifier: ").append(toIndentedString(uniqueIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

