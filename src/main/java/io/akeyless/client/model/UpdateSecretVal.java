/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * UpdateSecretVal
 */

public class UpdateSecretVal {
  public static final String SERIALIZED_NAME_ACCESSIBILITY = "accessibility";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY)
  private String accessibility = "regular";

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_KEEP_PREV_VERSION = "keep-prev-version";
  @SerializedName(SERIALIZED_NAME_KEEP_PREV_VERSION)
  private String keepPrevVersion;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_MULTILINE = "multiline";
  @SerializedName(SERIALIZED_NAME_MULTILINE)
  private Boolean multiline;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEW_VERSION = "new-version";
  @SerializedName(SERIALIZED_NAME_NEW_VERSION)
  private Boolean newVersion;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_CUSTOM_FIELD = "password-manager-custom-field";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_CUSTOM_FIELD)
  private Map<String, String> passwordManagerCustomField = null;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_INJECT_URL = "password-manager-inject-url";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_INJECT_URL)
  private List<String> passwordManagerInjectUrl = null;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_PASSWORD = "password-manager-password";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_PASSWORD)
  private String passwordManagerPassword;

  public static final String SERIALIZED_NAME_PASSWORD_MANAGER_USERNAME = "password-manager-username";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MANAGER_USERNAME)
  private String passwordManagerUsername;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;


  public UpdateSecretVal accessibility(String accessibility) {
    
    this.accessibility = accessibility;
    return this;
  }

   /**
   * for personal password manager
   * @return accessibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "for personal password manager")

  public String getAccessibility() {
    return accessibility;
  }


  public void setAccessibility(String accessibility) {
    this.accessibility = accessibility;
  }


  public UpdateSecretVal json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public UpdateSecretVal keepPrevVersion(String keepPrevVersion) {
    
    this.keepPrevVersion = keepPrevVersion;
    return this;
  }

   /**
   * Whether to keep previous version [true/false]. If not set, use default according to account settings
   * @return keepPrevVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to keep previous version [true/false]. If not set, use default according to account settings")

  public String getKeepPrevVersion() {
    return keepPrevVersion;
  }


  public void setKeepPrevVersion(String keepPrevVersion) {
    this.keepPrevVersion = keepPrevVersion;
  }


  public UpdateSecretVal key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of a key that used to encrypt the secret value (if empty, the account default protectionKey key will be used)")

  public String getKey() {
    return key;
  }


  public void setKey(String key) {
    this.key = key;
  }


  public UpdateSecretVal multiline(Boolean multiline) {
    
    this.multiline = multiline;
    return this;
  }

   /**
   * The provided value is a multiline value (separated by &#39;\\n&#39;)
   * @return multiline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The provided value is a multiline value (separated by '\\n')")

  public Boolean getMultiline() {
    return multiline;
  }


  public void setMultiline(Boolean multiline) {
    this.multiline = multiline;
  }


  public UpdateSecretVal name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Secret name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Secret name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UpdateSecretVal newVersion(Boolean newVersion) {
    
    this.newVersion = newVersion;
    return this;
  }

   /**
   * Deprecated
   * @return newVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated")

  public Boolean getNewVersion() {
    return newVersion;
  }


  public void setNewVersion(Boolean newVersion) {
    this.newVersion = newVersion;
  }


  public UpdateSecretVal passwordManagerCustomField(Map<String, String> passwordManagerCustomField) {
    
    this.passwordManagerCustomField = passwordManagerCustomField;
    return this;
  }

  public UpdateSecretVal putPasswordManagerCustomFieldItem(String key, String passwordManagerCustomFieldItem) {
    if (this.passwordManagerCustomField == null) {
      this.passwordManagerCustomField = new HashMap<String, String>();
    }
    this.passwordManagerCustomField.put(key, passwordManagerCustomFieldItem);
    return this;
  }

   /**
   * For Password Management use, additional fields
   * @return passwordManagerCustomField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, additional fields")

  public Map<String, String> getPasswordManagerCustomField() {
    return passwordManagerCustomField;
  }


  public void setPasswordManagerCustomField(Map<String, String> passwordManagerCustomField) {
    this.passwordManagerCustomField = passwordManagerCustomField;
  }


  public UpdateSecretVal passwordManagerInjectUrl(List<String> passwordManagerInjectUrl) {
    
    this.passwordManagerInjectUrl = passwordManagerInjectUrl;
    return this;
  }

  public UpdateSecretVal addPasswordManagerInjectUrlItem(String passwordManagerInjectUrlItem) {
    if (this.passwordManagerInjectUrl == null) {
      this.passwordManagerInjectUrl = new ArrayList<String>();
    }
    this.passwordManagerInjectUrl.add(passwordManagerInjectUrlItem);
    return this;
  }

   /**
   * For Password Management use, reflect the website context
   * @return passwordManagerInjectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, reflect the website context")

  public List<String> getPasswordManagerInjectUrl() {
    return passwordManagerInjectUrl;
  }


  public void setPasswordManagerInjectUrl(List<String> passwordManagerInjectUrl) {
    this.passwordManagerInjectUrl = passwordManagerInjectUrl;
  }


  public UpdateSecretVal passwordManagerPassword(String passwordManagerPassword) {
    
    this.passwordManagerPassword = passwordManagerPassword;
    return this;
  }

   /**
   * For Password Management use, additional fields
   * @return passwordManagerPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use, additional fields")

  public String getPasswordManagerPassword() {
    return passwordManagerPassword;
  }


  public void setPasswordManagerPassword(String passwordManagerPassword) {
    this.passwordManagerPassword = passwordManagerPassword;
  }


  public UpdateSecretVal passwordManagerUsername(String passwordManagerUsername) {
    
    this.passwordManagerUsername = passwordManagerUsername;
    return this;
  }

   /**
   * For Password Management use
   * @return passwordManagerUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For Password Management use")

  public String getPasswordManagerUsername() {
    return passwordManagerUsername;
  }


  public void setPasswordManagerUsername(String passwordManagerUsername) {
    this.passwordManagerUsername = passwordManagerUsername;
  }


  public UpdateSecretVal token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public UpdateSecretVal uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public UpdateSecretVal value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * The new secret value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "The new secret value")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSecretVal updateSecretVal = (UpdateSecretVal) o;
    return Objects.equals(this.accessibility, updateSecretVal.accessibility) &&
        Objects.equals(this.json, updateSecretVal.json) &&
        Objects.equals(this.keepPrevVersion, updateSecretVal.keepPrevVersion) &&
        Objects.equals(this.key, updateSecretVal.key) &&
        Objects.equals(this.multiline, updateSecretVal.multiline) &&
        Objects.equals(this.name, updateSecretVal.name) &&
        Objects.equals(this.newVersion, updateSecretVal.newVersion) &&
        Objects.equals(this.passwordManagerCustomField, updateSecretVal.passwordManagerCustomField) &&
        Objects.equals(this.passwordManagerInjectUrl, updateSecretVal.passwordManagerInjectUrl) &&
        Objects.equals(this.passwordManagerPassword, updateSecretVal.passwordManagerPassword) &&
        Objects.equals(this.passwordManagerUsername, updateSecretVal.passwordManagerUsername) &&
        Objects.equals(this.token, updateSecretVal.token) &&
        Objects.equals(this.uidToken, updateSecretVal.uidToken) &&
        Objects.equals(this.value, updateSecretVal.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibility, json, keepPrevVersion, key, multiline, name, newVersion, passwordManagerCustomField, passwordManagerInjectUrl, passwordManagerPassword, passwordManagerUsername, token, uidToken, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSecretVal {\n");
    sb.append("    accessibility: ").append(toIndentedString(accessibility)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    keepPrevVersion: ").append(toIndentedString(keepPrevVersion)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    multiline: ").append(toIndentedString(multiline)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newVersion: ").append(toIndentedString(newVersion)).append("\n");
    sb.append("    passwordManagerCustomField: ").append(toIndentedString(passwordManagerCustomField)).append("\n");
    sb.append("    passwordManagerInjectUrl: ").append(toIndentedString(passwordManagerInjectUrl)).append("\n");
    sb.append("    passwordManagerPassword: ").append(toIndentedString(passwordManagerPassword)).append("\n");
    sb.append("    passwordManagerUsername: ").append(toIndentedString(passwordManagerUsername)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

