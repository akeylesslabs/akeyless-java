/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * uidRotateToken is a command that rotates an Akeyless Universal Identity token.
 */
@ApiModel(description = "uidRotateToken is a command that rotates an Akeyless Universal Identity token.")

public class UidRotateToken {
  public static final String SERIALIZED_NAME_FORK = "fork";
  @SerializedName(SERIALIZED_NAME_FORK)
  private Boolean fork;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_SEND_MANUAL_ACK_TOKEN = "send-manual-ack-token";
  @SerializedName(SERIALIZED_NAME_SEND_MANUAL_ACK_TOKEN)
  private String sendManualAckToken;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_WITH_MANUAL_ACK = "with-manual-ack";
  @SerializedName(SERIALIZED_NAME_WITH_MANUAL_ACK)
  private Boolean withManualAck;


  public UidRotateToken fork(Boolean fork) {
    
    this.fork = fork;
    return this;
  }

   /**
   * Create a new child token with default parameters
   * @return fork
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Create a new child token with default parameters")

  public Boolean getFork() {
    return fork;
  }


  public void setFork(Boolean fork) {
    this.fork = fork;
  }


  public UidRotateToken json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public UidRotateToken sendManualAckToken(String sendManualAckToken) {
    
    this.sendManualAckToken = sendManualAckToken;
    return this;
  }

   /**
   * The new rotated token to send manual ack for (with uid-token&#x3D;the-orig-token)
   * @return sendManualAckToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new rotated token to send manual ack for (with uid-token=the-orig-token)")

  public String getSendManualAckToken() {
    return sendManualAckToken;
  }


  public void setSendManualAckToken(String sendManualAckToken) {
    this.sendManualAckToken = sendManualAckToken;
  }


  public UidRotateToken uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The Universal identity token
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Universal identity token")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public UidRotateToken withManualAck(Boolean withManualAck) {
    
    this.withManualAck = withManualAck;
    return this;
  }

   /**
   * Disable automatic ack
   * @return withManualAck
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disable automatic ack")

  public Boolean getWithManualAck() {
    return withManualAck;
  }


  public void setWithManualAck(Boolean withManualAck) {
    this.withManualAck = withManualAck;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UidRotateToken uidRotateToken = (UidRotateToken) o;
    return Objects.equals(this.fork, uidRotateToken.fork) &&
        Objects.equals(this.json, uidRotateToken.json) &&
        Objects.equals(this.sendManualAckToken, uidRotateToken.sendManualAckToken) &&
        Objects.equals(this.uidToken, uidRotateToken.uidToken) &&
        Objects.equals(this.withManualAck, uidRotateToken.withManualAck);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fork, json, sendManualAckToken, uidToken, withManualAck);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UidRotateToken {\n");
    sb.append("    fork: ").append(toIndentedString(fork)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    sendManualAckToken: ").append(toIndentedString(sendManualAckToken)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    withManualAck: ").append(toIndentedString(withManualAck)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

