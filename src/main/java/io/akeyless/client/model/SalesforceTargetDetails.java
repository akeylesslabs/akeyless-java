/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SalesforceTargetDetails
 */
@ApiModel(description = "SalesforceTargetDetails")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SalesforceTargetDetails {
  public static final String SERIALIZED_NAME_APP_PRIVATE_KEY = "app_private_key";
  @SerializedName(SERIALIZED_NAME_APP_PRIVATE_KEY)
  private List<Integer> appPrivateKey = null;

  public static final String SERIALIZED_NAME_AUTH_FLOW = "auth_flow";
  @SerializedName(SERIALIZED_NAME_AUTH_FLOW)
  private String authFlow;

  public static final String SERIALIZED_NAME_CA_CERT_DATA = "ca_cert_data";
  @SerializedName(SERIALIZED_NAME_CA_CERT_DATA)
  private List<Integer> caCertData = null;

  public static final String SERIALIZED_NAME_CA_CERT_NAME = "ca_cert_name";
  @SerializedName(SERIALIZED_NAME_CA_CERT_NAME)
  private String caCertName;

  public static final String SERIALIZED_NAME_CLIENT_ID = "client_id";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_CLIENT_SECRET = "client_secret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private String clientSecret;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_SECURITY_TOKEN = "security_token";
  @SerializedName(SERIALIZED_NAME_SECURITY_TOKEN)
  private String securityToken;

  public static final String SERIALIZED_NAME_TENANT_URL = "tenant_url";
  @SerializedName(SERIALIZED_NAME_TENANT_URL)
  private String tenantUrl;

  public static final String SERIALIZED_NAME_USER_NAME = "user_name";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public SalesforceTargetDetails() { 
  }

  public SalesforceTargetDetails appPrivateKey(List<Integer> appPrivateKey) {
    
    this.appPrivateKey = appPrivateKey;
    return this;
  }

  public SalesforceTargetDetails addAppPrivateKeyItem(Integer appPrivateKeyItem) {
    if (this.appPrivateKey == null) {
      this.appPrivateKey = new ArrayList<Integer>();
    }
    this.appPrivateKey.add(appPrivateKeyItem);
    return this;
  }

   /**
   * params needed for jwt auth AppPrivateKey is the rsa private key in PEM format
   * @return appPrivateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "params needed for jwt auth AppPrivateKey is the rsa private key in PEM format")

  public List<Integer> getAppPrivateKey() {
    return appPrivateKey;
  }


  public void setAppPrivateKey(List<Integer> appPrivateKey) {
    this.appPrivateKey = appPrivateKey;
  }


  public SalesforceTargetDetails authFlow(String authFlow) {
    
    this.authFlow = authFlow;
    return this;
  }

   /**
   * Get authFlow
   * @return authFlow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthFlow() {
    return authFlow;
  }


  public void setAuthFlow(String authFlow) {
    this.authFlow = authFlow;
  }


  public SalesforceTargetDetails caCertData(List<Integer> caCertData) {
    
    this.caCertData = caCertData;
    return this;
  }

  public SalesforceTargetDetails addCaCertDataItem(Integer caCertDataItem) {
    if (this.caCertData == null) {
      this.caCertData = new ArrayList<Integer>();
    }
    this.caCertData.add(caCertDataItem);
    return this;
  }

   /**
   * CACertData is the rsa 4096 certificate data in PEM format
   * @return caCertData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CACertData is the rsa 4096 certificate data in PEM format")

  public List<Integer> getCaCertData() {
    return caCertData;
  }


  public void setCaCertData(List<Integer> caCertData) {
    this.caCertData = caCertData;
  }


  public SalesforceTargetDetails caCertName(String caCertName) {
    
    this.caCertName = caCertName;
    return this;
  }

   /**
   * CACertName is the name of the certificate in SalesForce tenant
   * @return caCertName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CACertName is the name of the certificate in SalesForce tenant")

  public String getCaCertName() {
    return caCertName;
  }


  public void setCaCertName(String caCertName) {
    this.caCertName = caCertName;
  }


  public SalesforceTargetDetails clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public SalesforceTargetDetails clientSecret(String clientSecret) {
    
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * params needed for password auth
   * @return clientSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "params needed for password auth")

  public String getClientSecret() {
    return clientSecret;
  }


  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public SalesforceTargetDetails password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public SalesforceTargetDetails securityToken(String securityToken) {
    
    this.securityToken = securityToken;
    return this;
  }

   /**
   * Get securityToken
   * @return securityToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecurityToken() {
    return securityToken;
  }


  public void setSecurityToken(String securityToken) {
    this.securityToken = securityToken;
  }


  public SalesforceTargetDetails tenantUrl(String tenantUrl) {
    
    this.tenantUrl = tenantUrl;
    return this;
  }

   /**
   * Get tenantUrl
   * @return tenantUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTenantUrl() {
    return tenantUrl;
  }


  public void setTenantUrl(String tenantUrl) {
    this.tenantUrl = tenantUrl;
  }


  public SalesforceTargetDetails userName(String userName) {
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesforceTargetDetails salesforceTargetDetails = (SalesforceTargetDetails) o;
    return Objects.equals(this.appPrivateKey, salesforceTargetDetails.appPrivateKey) &&
        Objects.equals(this.authFlow, salesforceTargetDetails.authFlow) &&
        Objects.equals(this.caCertData, salesforceTargetDetails.caCertData) &&
        Objects.equals(this.caCertName, salesforceTargetDetails.caCertName) &&
        Objects.equals(this.clientId, salesforceTargetDetails.clientId) &&
        Objects.equals(this.clientSecret, salesforceTargetDetails.clientSecret) &&
        Objects.equals(this.password, salesforceTargetDetails.password) &&
        Objects.equals(this.securityToken, salesforceTargetDetails.securityToken) &&
        Objects.equals(this.tenantUrl, salesforceTargetDetails.tenantUrl) &&
        Objects.equals(this.userName, salesforceTargetDetails.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appPrivateKey, authFlow, caCertData, caCertName, clientId, clientSecret, password, securityToken, tenantUrl, userName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesforceTargetDetails {\n");
    sb.append("    appPrivateKey: ").append(toIndentedString(appPrivateKey)).append("\n");
    sb.append("    authFlow: ").append(toIndentedString(authFlow)).append("\n");
    sb.append("    caCertData: ").append(toIndentedString(caCertData)).append("\n");
    sb.append("    caCertName: ").append(toIndentedString(caCertName)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    securityToken: ").append(toIndentedString(securityToken)).append("\n");
    sb.append("    tenantUrl: ").append(toIndentedString(tenantUrl)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

