/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GenerateCsr
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GenerateCsr {
  public static final String SERIALIZED_NAME_ALG = "alg";
  @SerializedName(SERIALIZED_NAME_ALG)
  private String alg;

  public static final String SERIALIZED_NAME_ALT_NAMES = "alt-names";
  @SerializedName(SERIALIZED_NAME_ALT_NAMES)
  private String altNames;

  public static final String SERIALIZED_NAME_CERTIFICATE_TYPE = "certificate-type";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_TYPE)
  private String certificateType;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMMON_NAME = "common-name";
  @SerializedName(SERIALIZED_NAME_COMMON_NAME)
  private String commonName;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CRITICAL = "critical";
  @SerializedName(SERIALIZED_NAME_CRITICAL)
  private Boolean critical;

  public static final String SERIALIZED_NAME_DEP = "dep";
  @SerializedName(SERIALIZED_NAME_DEP)
  private String dep;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESSES = "email-addresses";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESSES)
  private String emailAddresses;

  public static final String SERIALIZED_NAME_GENERATE_KEY = "generate-key";
  @SerializedName(SERIALIZED_NAME_GENERATE_KEY)
  private Boolean generateKey;

  public static final String SERIALIZED_NAME_IP_ADDRESSES = "ip-addresses";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESSES)
  private String ipAddresses;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORG = "org";
  @SerializedName(SERIALIZED_NAME_ORG)
  private String org;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_URI_SANS = "uri-sans";
  @SerializedName(SERIALIZED_NAME_URI_SANS)
  private String uriSans;

  public GenerateCsr() { 
  }

  public GenerateCsr alg(String alg) {
    
    this.alg = alg;
    return this;
  }

   /**
   * Get alg
   * @return alg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAlg() {
    return alg;
  }


  public void setAlg(String alg) {
    this.alg = alg;
  }


  public GenerateCsr altNames(String altNames) {
    
    this.altNames = altNames;
    return this;
  }

   /**
   * A comma-separated list of dns alternative names
   * @return altNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated list of dns alternative names")

  public String getAltNames() {
    return altNames;
  }


  public void setAltNames(String altNames) {
    this.altNames = altNames;
  }


  public GenerateCsr certificateType(String certificateType) {
    
    this.certificateType = certificateType;
    return this;
  }

   /**
   * The certificate type to be included in the CSR certificate (ssl-client/ssl-server/certificate-signing)
   * @return certificateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The certificate type to be included in the CSR certificate (ssl-client/ssl-server/certificate-signing)")

  public String getCertificateType() {
    return certificateType;
  }


  public void setCertificateType(String certificateType) {
    this.certificateType = certificateType;
  }


  public GenerateCsr city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * The city to be included in the CSR certificate
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The city to be included in the CSR certificate")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public GenerateCsr commonName(String commonName) {
    
    this.commonName = commonName;
    return this;
  }

   /**
   * The common name to be included in the CSR certificate
   * @return commonName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The common name to be included in the CSR certificate")

  public String getCommonName() {
    return commonName;
  }


  public void setCommonName(String commonName) {
    this.commonName = commonName;
  }


  public GenerateCsr country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * The country to be included in the CSR certificate
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The country to be included in the CSR certificate")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public GenerateCsr critical(Boolean critical) {
    
    this.critical = critical;
    return this;
  }

   /**
   * Add critical to the key usage extension (will be false if not added)
   * @return critical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add critical to the key usage extension (will be false if not added)")

  public Boolean getCritical() {
    return critical;
  }


  public void setCritical(Boolean critical) {
    this.critical = critical;
  }


  public GenerateCsr dep(String dep) {
    
    this.dep = dep;
    return this;
  }

   /**
   * The department to be included in the CSR certificate
   * @return dep
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The department to be included in the CSR certificate")

  public String getDep() {
    return dep;
  }


  public void setDep(String dep) {
    this.dep = dep;
  }


  public GenerateCsr emailAddresses(String emailAddresses) {
    
    this.emailAddresses = emailAddresses;
    return this;
  }

   /**
   * A comma-separated list of email addresses alternative names
   * @return emailAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated list of email addresses alternative names")

  public String getEmailAddresses() {
    return emailAddresses;
  }


  public void setEmailAddresses(String emailAddresses) {
    this.emailAddresses = emailAddresses;
  }


  public GenerateCsr generateKey(Boolean generateKey) {
    
    this.generateKey = generateKey;
    return this;
  }

   /**
   * Generate a new classic key for the csr
   * @return generateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Generate a new classic key for the csr")

  public Boolean getGenerateKey() {
    return generateKey;
  }


  public void setGenerateKey(Boolean generateKey) {
    this.generateKey = generateKey;
  }


  public GenerateCsr ipAddresses(String ipAddresses) {
    
    this.ipAddresses = ipAddresses;
    return this;
  }

   /**
   * A comma-separated list of ip addresses alternative names
   * @return ipAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated list of ip addresses alternative names")

  public String getIpAddresses() {
    return ipAddresses;
  }


  public void setIpAddresses(String ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  public GenerateCsr json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public GenerateCsr name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The classic key name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The classic key name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GenerateCsr org(String org) {
    
    this.org = org;
    return this;
  }

   /**
   * The organization to be included in the CSR certificate
   * @return org
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The organization to be included in the CSR certificate")

  public String getOrg() {
    return org;
  }


  public void setOrg(String org) {
    this.org = org;
  }


  public GenerateCsr state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * The state to be included in the CSR certificate
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The state to be included in the CSR certificate")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public GenerateCsr token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public GenerateCsr uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public GenerateCsr uriSans(String uriSans) {
    
    this.uriSans = uriSans;
    return this;
  }

   /**
   * A comma-separated list of uri alternative names
   * @return uriSans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A comma-separated list of uri alternative names")

  public String getUriSans() {
    return uriSans;
  }


  public void setUriSans(String uriSans) {
    this.uriSans = uriSans;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateCsr generateCsr = (GenerateCsr) o;
    return Objects.equals(this.alg, generateCsr.alg) &&
        Objects.equals(this.altNames, generateCsr.altNames) &&
        Objects.equals(this.certificateType, generateCsr.certificateType) &&
        Objects.equals(this.city, generateCsr.city) &&
        Objects.equals(this.commonName, generateCsr.commonName) &&
        Objects.equals(this.country, generateCsr.country) &&
        Objects.equals(this.critical, generateCsr.critical) &&
        Objects.equals(this.dep, generateCsr.dep) &&
        Objects.equals(this.emailAddresses, generateCsr.emailAddresses) &&
        Objects.equals(this.generateKey, generateCsr.generateKey) &&
        Objects.equals(this.ipAddresses, generateCsr.ipAddresses) &&
        Objects.equals(this.json, generateCsr.json) &&
        Objects.equals(this.name, generateCsr.name) &&
        Objects.equals(this.org, generateCsr.org) &&
        Objects.equals(this.state, generateCsr.state) &&
        Objects.equals(this.token, generateCsr.token) &&
        Objects.equals(this.uidToken, generateCsr.uidToken) &&
        Objects.equals(this.uriSans, generateCsr.uriSans);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alg, altNames, certificateType, city, commonName, country, critical, dep, emailAddresses, generateKey, ipAddresses, json, name, org, state, token, uidToken, uriSans);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateCsr {\n");
    sb.append("    alg: ").append(toIndentedString(alg)).append("\n");
    sb.append("    altNames: ").append(toIndentedString(altNames)).append("\n");
    sb.append("    certificateType: ").append(toIndentedString(certificateType)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    commonName: ").append(toIndentedString(commonName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    critical: ").append(toIndentedString(critical)).append("\n");
    sb.append("    dep: ").append(toIndentedString(dep)).append("\n");
    sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
    sb.append("    generateKey: ").append(toIndentedString(generateKey)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    org: ").append(toIndentedString(org)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    uriSans: ").append(toIndentedString(uriSans)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

