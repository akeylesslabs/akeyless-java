/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GetSecretValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetSecretValue {
  public static final String SERIALIZED_NAME_ACCESSIBILITY = "accessibility";
  @SerializedName(SERIALIZED_NAME_ACCESSIBILITY)
  private String accessibility = "regular";

  public static final String SERIALIZED_NAME_IGNORE_CACHE = "ignore-cache";
  @SerializedName(SERIALIZED_NAME_IGNORE_CACHE)
  private String ignoreCache = "false";

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_NAMES = "names";
  @SerializedName(SERIALIZED_NAME_NAMES)
  private List<String> names = new ArrayList<String>();

  public static final String SERIALIZED_NAME_PRETTY_PRINT = "pretty-print";
  @SerializedName(SERIALIZED_NAME_PRETTY_PRINT)
  private Boolean prettyPrint;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public GetSecretValue() { 
  }

  public GetSecretValue accessibility(String accessibility) {
    
    this.accessibility = accessibility;
    return this;
  }

   /**
   * for personal password manager
   * @return accessibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "for personal password manager")

  public String getAccessibility() {
    return accessibility;
  }


  public void setAccessibility(String accessibility) {
    this.accessibility = accessibility;
  }


  public GetSecretValue ignoreCache(String ignoreCache) {
    
    this.ignoreCache = ignoreCache;
    return this;
  }

   /**
   * Retrieve the Secret value without checking the Gateway&#39;s cache [true/false]. This flag is only relevant when using the RestAPI
   * @return ignoreCache
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Retrieve the Secret value without checking the Gateway's cache [true/false]. This flag is only relevant when using the RestAPI")

  public String getIgnoreCache() {
    return ignoreCache;
  }


  public void setIgnoreCache(String ignoreCache) {
    this.ignoreCache = ignoreCache;
  }


  public GetSecretValue json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public GetSecretValue names(List<String> names) {
    
    this.names = names;
    return this;
  }

  public GetSecretValue addNamesItem(String namesItem) {
    this.names.add(namesItem);
    return this;
  }

   /**
   * Secret name
   * @return names
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Secret name")

  public List<String> getNames() {
    return names;
  }


  public void setNames(List<String> names) {
    this.names = names;
  }


  public GetSecretValue prettyPrint(Boolean prettyPrint) {
    
    this.prettyPrint = prettyPrint;
    return this;
  }

   /**
   * Print the secret value with json-pretty-print (not relevent to SDK)
   * @return prettyPrint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Print the secret value with json-pretty-print (not relevent to SDK)")

  public Boolean getPrettyPrint() {
    return prettyPrint;
  }


  public void setPrettyPrint(Boolean prettyPrint) {
    this.prettyPrint = prettyPrint;
  }


  public GetSecretValue token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public GetSecretValue uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public GetSecretValue version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Secret version, if negative value N is provided the last N versions will return (maximum 20)
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secret version, if negative value N is provided the last N versions will return (maximum 20)")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSecretValue getSecretValue = (GetSecretValue) o;
    return Objects.equals(this.accessibility, getSecretValue.accessibility) &&
        Objects.equals(this.ignoreCache, getSecretValue.ignoreCache) &&
        Objects.equals(this.json, getSecretValue.json) &&
        Objects.equals(this.names, getSecretValue.names) &&
        Objects.equals(this.prettyPrint, getSecretValue.prettyPrint) &&
        Objects.equals(this.token, getSecretValue.token) &&
        Objects.equals(this.uidToken, getSecretValue.uidToken) &&
        Objects.equals(this.version, getSecretValue.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessibility, ignoreCache, json, names, prettyPrint, token, uidToken, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSecretValue {\n");
    sb.append("    accessibility: ").append(toIndentedString(accessibility)).append("\n");
    sb.append("    ignoreCache: ").append(toIndentedString(ignoreCache)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    prettyPrint: ").append(toIndentedString(prettyPrint)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

