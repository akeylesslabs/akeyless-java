/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * EKSTargetDetails defines details related to connecting to a EKS (Elastic Container Service) target
 */
@ApiModel(description = "EKSTargetDetails defines details related to connecting to a EKS (Elastic Container Service) target")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EKSTargetDetails {
  public static final String SERIALIZED_NAME_EKS_ACCESS_KEY_ID = "eks_access_key_id";
  @SerializedName(SERIALIZED_NAME_EKS_ACCESS_KEY_ID)
  private String eksAccessKeyId;

  public static final String SERIALIZED_NAME_EKS_CLUSTER_CA_CERTIFICATE = "eks_cluster_ca_certificate";
  @SerializedName(SERIALIZED_NAME_EKS_CLUSTER_CA_CERTIFICATE)
  private String eksClusterCaCertificate;

  public static final String SERIALIZED_NAME_EKS_CLUSTER_ENDPOINT = "eks_cluster_endpoint";
  @SerializedName(SERIALIZED_NAME_EKS_CLUSTER_ENDPOINT)
  private String eksClusterEndpoint;

  public static final String SERIALIZED_NAME_EKS_CLUSTER_NAME = "eks_cluster_name";
  @SerializedName(SERIALIZED_NAME_EKS_CLUSTER_NAME)
  private String eksClusterName;

  public static final String SERIALIZED_NAME_EKS_REGION = "eks_region";
  @SerializedName(SERIALIZED_NAME_EKS_REGION)
  private String eksRegion;

  public static final String SERIALIZED_NAME_EKS_SECRET_ACCESS_KEY = "eks_secret_access_key";
  @SerializedName(SERIALIZED_NAME_EKS_SECRET_ACCESS_KEY)
  private String eksSecretAccessKey;

  public static final String SERIALIZED_NAME_USE_GW_CLOUD_IDENTITY = "use_gw_cloud_identity";
  @SerializedName(SERIALIZED_NAME_USE_GW_CLOUD_IDENTITY)
  private Boolean useGwCloudIdentity;

  public EKSTargetDetails() { 
  }

  public EKSTargetDetails eksAccessKeyId(String eksAccessKeyId) {
    
    this.eksAccessKeyId = eksAccessKeyId;
    return this;
  }

   /**
   * Get eksAccessKeyId
   * @return eksAccessKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEksAccessKeyId() {
    return eksAccessKeyId;
  }


  public void setEksAccessKeyId(String eksAccessKeyId) {
    this.eksAccessKeyId = eksAccessKeyId;
  }


  public EKSTargetDetails eksClusterCaCertificate(String eksClusterCaCertificate) {
    
    this.eksClusterCaCertificate = eksClusterCaCertificate;
    return this;
  }

   /**
   * Get eksClusterCaCertificate
   * @return eksClusterCaCertificate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEksClusterCaCertificate() {
    return eksClusterCaCertificate;
  }


  public void setEksClusterCaCertificate(String eksClusterCaCertificate) {
    this.eksClusterCaCertificate = eksClusterCaCertificate;
  }


  public EKSTargetDetails eksClusterEndpoint(String eksClusterEndpoint) {
    
    this.eksClusterEndpoint = eksClusterEndpoint;
    return this;
  }

   /**
   * Get eksClusterEndpoint
   * @return eksClusterEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEksClusterEndpoint() {
    return eksClusterEndpoint;
  }


  public void setEksClusterEndpoint(String eksClusterEndpoint) {
    this.eksClusterEndpoint = eksClusterEndpoint;
  }


  public EKSTargetDetails eksClusterName(String eksClusterName) {
    
    this.eksClusterName = eksClusterName;
    return this;
  }

   /**
   * Get eksClusterName
   * @return eksClusterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEksClusterName() {
    return eksClusterName;
  }


  public void setEksClusterName(String eksClusterName) {
    this.eksClusterName = eksClusterName;
  }


  public EKSTargetDetails eksRegion(String eksRegion) {
    
    this.eksRegion = eksRegion;
    return this;
  }

   /**
   * Get eksRegion
   * @return eksRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEksRegion() {
    return eksRegion;
  }


  public void setEksRegion(String eksRegion) {
    this.eksRegion = eksRegion;
  }


  public EKSTargetDetails eksSecretAccessKey(String eksSecretAccessKey) {
    
    this.eksSecretAccessKey = eksSecretAccessKey;
    return this;
  }

   /**
   * Get eksSecretAccessKey
   * @return eksSecretAccessKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEksSecretAccessKey() {
    return eksSecretAccessKey;
  }


  public void setEksSecretAccessKey(String eksSecretAccessKey) {
    this.eksSecretAccessKey = eksSecretAccessKey;
  }


  public EKSTargetDetails useGwCloudIdentity(Boolean useGwCloudIdentity) {
    
    this.useGwCloudIdentity = useGwCloudIdentity;
    return this;
  }

   /**
   * Get useGwCloudIdentity
   * @return useGwCloudIdentity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseGwCloudIdentity() {
    return useGwCloudIdentity;
  }


  public void setUseGwCloudIdentity(Boolean useGwCloudIdentity) {
    this.useGwCloudIdentity = useGwCloudIdentity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EKSTargetDetails ekSTargetDetails = (EKSTargetDetails) o;
    return Objects.equals(this.eksAccessKeyId, ekSTargetDetails.eksAccessKeyId) &&
        Objects.equals(this.eksClusterCaCertificate, ekSTargetDetails.eksClusterCaCertificate) &&
        Objects.equals(this.eksClusterEndpoint, ekSTargetDetails.eksClusterEndpoint) &&
        Objects.equals(this.eksClusterName, ekSTargetDetails.eksClusterName) &&
        Objects.equals(this.eksRegion, ekSTargetDetails.eksRegion) &&
        Objects.equals(this.eksSecretAccessKey, ekSTargetDetails.eksSecretAccessKey) &&
        Objects.equals(this.useGwCloudIdentity, ekSTargetDetails.useGwCloudIdentity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eksAccessKeyId, eksClusterCaCertificate, eksClusterEndpoint, eksClusterName, eksRegion, eksSecretAccessKey, useGwCloudIdentity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EKSTargetDetails {\n");
    sb.append("    eksAccessKeyId: ").append(toIndentedString(eksAccessKeyId)).append("\n");
    sb.append("    eksClusterCaCertificate: ").append(toIndentedString(eksClusterCaCertificate)).append("\n");
    sb.append("    eksClusterEndpoint: ").append(toIndentedString(eksClusterEndpoint)).append("\n");
    sb.append("    eksClusterName: ").append(toIndentedString(eksClusterName)).append("\n");
    sb.append("    eksRegion: ").append(toIndentedString(eksRegion)).append("\n");
    sb.append("    eksSecretAccessKey: ").append(toIndentedString(eksSecretAccessKey)).append("\n");
    sb.append("    useGwCloudIdentity: ").append(toIndentedString(useGwCloudIdentity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

