/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * tokenize is a command that encrypts text with a tokenizer
 */
@ApiModel(description = "tokenize is a command that encrypts text with a tokenizer")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Tokenize {
  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_PLAINTEXT = "plaintext";
  @SerializedName(SERIALIZED_NAME_PLAINTEXT)
  private String plaintext;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_TOKENIZER_NAME = "tokenizer-name";
  @SerializedName(SERIALIZED_NAME_TOKENIZER_NAME)
  private String tokenizerName;

  public static final String SERIALIZED_NAME_TWEAK = "tweak";
  @SerializedName(SERIALIZED_NAME_TWEAK)
  private String tweak;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public Tokenize() { 
  }

  public Tokenize json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public Tokenize plaintext(String plaintext) {
    
    this.plaintext = plaintext;
    return this;
  }

   /**
   * Data to be encrypted
   * @return plaintext
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Data to be encrypted")

  public String getPlaintext() {
    return plaintext;
  }


  public void setPlaintext(String plaintext) {
    this.plaintext = plaintext;
  }


  public Tokenize token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public Tokenize tokenizerName(String tokenizerName) {
    
    this.tokenizerName = tokenizerName;
    return this;
  }

   /**
   * The name of the tokenizer to use in the encryption process
   * @return tokenizerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name of the tokenizer to use in the encryption process")

  public String getTokenizerName() {
    return tokenizerName;
  }


  public void setTokenizerName(String tokenizerName) {
    this.tokenizerName = tokenizerName;
  }


  public Tokenize tweak(String tweak) {
    
    this.tweak = tweak;
    return this;
  }

   /**
   * Base64 encoded tweak for vaultless encryption
   * @return tweak
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Base64 encoded tweak for vaultless encryption")

  public String getTweak() {
    return tweak;
  }


  public void setTweak(String tweak) {
    this.tweak = tweak;
  }


  public Tokenize uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tokenize tokenize = (Tokenize) o;
    return Objects.equals(this.json, tokenize.json) &&
        Objects.equals(this.plaintext, tokenize.plaintext) &&
        Objects.equals(this.token, tokenize.token) &&
        Objects.equals(this.tokenizerName, tokenize.tokenizerName) &&
        Objects.equals(this.tweak, tokenize.tweak) &&
        Objects.equals(this.uidToken, tokenize.uidToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(json, plaintext, token, tokenizerName, tweak, uidToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tokenize {\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    plaintext: ").append(toIndentedString(plaintext)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    tokenizerName: ").append(toIndentedString(tokenizerName)).append("\n");
    sb.append("    tweak: ").append(toIndentedString(tweak)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

