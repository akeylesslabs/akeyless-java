/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.akeyless.client.JSON;

/**
 * KubernetesAccessRules
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class KubernetesAccessRules {
  public static final String SERIALIZED_NAME_ALG = "alg";
  @SerializedName(SERIALIZED_NAME_ALG)
  @javax.annotation.Nullable
  private String alg;

  public static final String SERIALIZED_NAME_AUDIENCE = "audience";
  @SerializedName(SERIALIZED_NAME_AUDIENCE)
  @javax.annotation.Nullable
  private String audience;

  public static final String SERIALIZED_NAME_BOUND_NAMESPACES = "bound_namespaces";
  @SerializedName(SERIALIZED_NAME_BOUND_NAMESPACES)
  @javax.annotation.Nullable
  private List<String> boundNamespaces = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_POD_NAMES = "bound_pod_names";
  @SerializedName(SERIALIZED_NAME_BOUND_POD_NAMES)
  @javax.annotation.Nullable
  private List<String> boundPodNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_BOUND_SERVICE_ACCOUNT_NAMES = "bound_service_account_names";
  @SerializedName(SERIALIZED_NAME_BOUND_SERVICE_ACCOUNT_NAMES)
  @javax.annotation.Nullable
  private List<String> boundServiceAccountNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_GEN_KEY_PAIR = "gen_key_pair";
  @SerializedName(SERIALIZED_NAME_GEN_KEY_PAIR)
  @javax.annotation.Nullable
  private String genKeyPair;

  public static final String SERIALIZED_NAME_PUB_KEY = "pub_key";
  @SerializedName(SERIALIZED_NAME_PUB_KEY)
  @javax.annotation.Nullable
  private String pubKey;

  public KubernetesAccessRules() {
  }

  public KubernetesAccessRules alg(@javax.annotation.Nullable String alg) {
    this.alg = alg;
    return this;
  }

  /**
   * Get alg
   * @return alg
   */
  @javax.annotation.Nullable
  public String getAlg() {
    return alg;
  }

  public void setAlg(@javax.annotation.Nullable String alg) {
    this.alg = alg;
  }


  public KubernetesAccessRules audience(@javax.annotation.Nullable String audience) {
    this.audience = audience;
    return this;
  }

  /**
   * Audience is an optional Kubernetes jwt claim to verify
   * @return audience
   */
  @javax.annotation.Nullable
  public String getAudience() {
    return audience;
  }

  public void setAudience(@javax.annotation.Nullable String audience) {
    this.audience = audience;
  }


  public KubernetesAccessRules boundNamespaces(@javax.annotation.Nullable List<String> boundNamespaces) {
    this.boundNamespaces = boundNamespaces;
    return this;
  }

  public KubernetesAccessRules addBoundNamespacesItem(String boundNamespacesItem) {
    if (this.boundNamespaces == null) {
      this.boundNamespaces = new ArrayList<>();
    }
    this.boundNamespaces.add(boundNamespacesItem);
    return this;
  }

  /**
   * A list of namespaces that the authentication is restricted to.
   * @return boundNamespaces
   */
  @javax.annotation.Nullable
  public List<String> getBoundNamespaces() {
    return boundNamespaces;
  }

  public void setBoundNamespaces(@javax.annotation.Nullable List<String> boundNamespaces) {
    this.boundNamespaces = boundNamespaces;
  }


  public KubernetesAccessRules boundPodNames(@javax.annotation.Nullable List<String> boundPodNames) {
    this.boundPodNames = boundPodNames;
    return this;
  }

  public KubernetesAccessRules addBoundPodNamesItem(String boundPodNamesItem) {
    if (this.boundPodNames == null) {
      this.boundPodNames = new ArrayList<>();
    }
    this.boundPodNames.add(boundPodNamesItem);
    return this;
  }

  /**
   * A list of pods names that the authentication is restricted to.
   * @return boundPodNames
   */
  @javax.annotation.Nullable
  public List<String> getBoundPodNames() {
    return boundPodNames;
  }

  public void setBoundPodNames(@javax.annotation.Nullable List<String> boundPodNames) {
    this.boundPodNames = boundPodNames;
  }


  public KubernetesAccessRules boundServiceAccountNames(@javax.annotation.Nullable List<String> boundServiceAccountNames) {
    this.boundServiceAccountNames = boundServiceAccountNames;
    return this;
  }

  public KubernetesAccessRules addBoundServiceAccountNamesItem(String boundServiceAccountNamesItem) {
    if (this.boundServiceAccountNames == null) {
      this.boundServiceAccountNames = new ArrayList<>();
    }
    this.boundServiceAccountNames.add(boundServiceAccountNamesItem);
    return this;
  }

  /**
   * A list of service account names that the authentication is restricted to.
   * @return boundServiceAccountNames
   */
  @javax.annotation.Nullable
  public List<String> getBoundServiceAccountNames() {
    return boundServiceAccountNames;
  }

  public void setBoundServiceAccountNames(@javax.annotation.Nullable List<String> boundServiceAccountNames) {
    this.boundServiceAccountNames = boundServiceAccountNames;
  }


  public KubernetesAccessRules genKeyPair(@javax.annotation.Nullable String genKeyPair) {
    this.genKeyPair = genKeyPair;
    return this;
  }

  /**
   * Generate public/private key (the private key is required for the K8S Auth Config in the Akeyless Gateway)
   * @return genKeyPair
   */
  @javax.annotation.Nullable
  public String getGenKeyPair() {
    return genKeyPair;
  }

  public void setGenKeyPair(@javax.annotation.Nullable String genKeyPair) {
    this.genKeyPair = genKeyPair;
  }


  public KubernetesAccessRules pubKey(@javax.annotation.Nullable String pubKey) {
    this.pubKey = pubKey;
    return this;
  }

  /**
   * The public key value of the Kubernetes auth method configuration in the Akeyless Gateway.
   * @return pubKey
   */
  @javax.annotation.Nullable
  public String getPubKey() {
    return pubKey;
  }

  public void setPubKey(@javax.annotation.Nullable String pubKey) {
    this.pubKey = pubKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubernetesAccessRules kubernetesAccessRules = (KubernetesAccessRules) o;
    return Objects.equals(this.alg, kubernetesAccessRules.alg) &&
        Objects.equals(this.audience, kubernetesAccessRules.audience) &&
        Objects.equals(this.boundNamespaces, kubernetesAccessRules.boundNamespaces) &&
        Objects.equals(this.boundPodNames, kubernetesAccessRules.boundPodNames) &&
        Objects.equals(this.boundServiceAccountNames, kubernetesAccessRules.boundServiceAccountNames) &&
        Objects.equals(this.genKeyPair, kubernetesAccessRules.genKeyPair) &&
        Objects.equals(this.pubKey, kubernetesAccessRules.pubKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alg, audience, boundNamespaces, boundPodNames, boundServiceAccountNames, genKeyPair, pubKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubernetesAccessRules {\n");
    sb.append("    alg: ").append(toIndentedString(alg)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    boundNamespaces: ").append(toIndentedString(boundNamespaces)).append("\n");
    sb.append("    boundPodNames: ").append(toIndentedString(boundPodNames)).append("\n");
    sb.append("    boundServiceAccountNames: ").append(toIndentedString(boundServiceAccountNames)).append("\n");
    sb.append("    genKeyPair: ").append(toIndentedString(genKeyPair)).append("\n");
    sb.append("    pubKey: ").append(toIndentedString(pubKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alg");
    openapiFields.add("audience");
    openapiFields.add("bound_namespaces");
    openapiFields.add("bound_pod_names");
    openapiFields.add("bound_service_account_names");
    openapiFields.add("gen_key_pair");
    openapiFields.add("pub_key");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to KubernetesAccessRules
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KubernetesAccessRules.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KubernetesAccessRules is not found in the empty JSON string", KubernetesAccessRules.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!KubernetesAccessRules.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KubernetesAccessRules` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("alg") != null && !jsonObj.get("alg").isJsonNull()) && !jsonObj.get("alg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alg").toString()));
      }
      if ((jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull()) && !jsonObj.get("audience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `audience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("audience").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound_namespaces") != null && !jsonObj.get("bound_namespaces").isJsonNull() && !jsonObj.get("bound_namespaces").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound_namespaces` to be an array in the JSON string but got `%s`", jsonObj.get("bound_namespaces").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound_pod_names") != null && !jsonObj.get("bound_pod_names").isJsonNull() && !jsonObj.get("bound_pod_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound_pod_names` to be an array in the JSON string but got `%s`", jsonObj.get("bound_pod_names").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("bound_service_account_names") != null && !jsonObj.get("bound_service_account_names").isJsonNull() && !jsonObj.get("bound_service_account_names").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bound_service_account_names` to be an array in the JSON string but got `%s`", jsonObj.get("bound_service_account_names").toString()));
      }
      if ((jsonObj.get("gen_key_pair") != null && !jsonObj.get("gen_key_pair").isJsonNull()) && !jsonObj.get("gen_key_pair").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gen_key_pair` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gen_key_pair").toString()));
      }
      if ((jsonObj.get("pub_key") != null && !jsonObj.get("pub_key").isJsonNull()) && !jsonObj.get("pub_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pub_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pub_key").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KubernetesAccessRules.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KubernetesAccessRules' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KubernetesAccessRules> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KubernetesAccessRules.class));

       return (TypeAdapter<T>) new TypeAdapter<KubernetesAccessRules>() {
           @Override
           public void write(JsonWriter out, KubernetesAccessRules value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KubernetesAccessRules read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of KubernetesAccessRules given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of KubernetesAccessRules
   * @throws IOException if the JSON string is invalid with respect to KubernetesAccessRules
   */
  public static KubernetesAccessRules fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KubernetesAccessRules.class);
  }

  /**
   * Convert an instance of KubernetesAccessRules to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

