/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.akeyless.client.model.LogForwardingConfigPart;
import io.akeyless.client.model.SshBastionSessionTermination;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SshBastionConf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SshBastionConf {
  public static final String SERIALIZED_NAME_HIDE_SESSION_RECORDING = "hide_session_recording";
  @SerializedName(SERIALIZED_NAME_HIDE_SESSION_RECORDING)
  private Boolean hideSessionRecording;

  public static final String SERIALIZED_NAME_KEXALGS = "kexalgs";
  @SerializedName(SERIALIZED_NAME_KEXALGS)
  private String kexalgs;

  public static final String SERIALIZED_NAME_LOG_FORWARDING = "log_forwarding";
  @SerializedName(SERIALIZED_NAME_LOG_FORWARDING)
  private LogForwardingConfigPart logForwarding;

  public static final String SERIALIZED_NAME_SESSION_TERMINATION = "session_termination";
  @SerializedName(SERIALIZED_NAME_SESSION_TERMINATION)
  private SshBastionSessionTermination sessionTermination;

  public SshBastionConf() { 
  }

  public SshBastionConf hideSessionRecording(Boolean hideSessionRecording) {
    
    this.hideSessionRecording = hideSessionRecording;
    return this;
  }

   /**
   * Get hideSessionRecording
   * @return hideSessionRecording
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHideSessionRecording() {
    return hideSessionRecording;
  }


  public void setHideSessionRecording(Boolean hideSessionRecording) {
    this.hideSessionRecording = hideSessionRecording;
  }


  public SshBastionConf kexalgs(String kexalgs) {
    
    this.kexalgs = kexalgs;
    return this;
  }

   /**
   * Get kexalgs
   * @return kexalgs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKexalgs() {
    return kexalgs;
  }


  public void setKexalgs(String kexalgs) {
    this.kexalgs = kexalgs;
  }


  public SshBastionConf logForwarding(LogForwardingConfigPart logForwarding) {
    
    this.logForwarding = logForwarding;
    return this;
  }

   /**
   * Get logForwarding
   * @return logForwarding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LogForwardingConfigPart getLogForwarding() {
    return logForwarding;
  }


  public void setLogForwarding(LogForwardingConfigPart logForwarding) {
    this.logForwarding = logForwarding;
  }


  public SshBastionConf sessionTermination(SshBastionSessionTermination sessionTermination) {
    
    this.sessionTermination = sessionTermination;
    return this;
  }

   /**
   * Get sessionTermination
   * @return sessionTermination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SshBastionSessionTermination getSessionTermination() {
    return sessionTermination;
  }


  public void setSessionTermination(SshBastionSessionTermination sessionTermination) {
    this.sessionTermination = sessionTermination;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SshBastionConf sshBastionConf = (SshBastionConf) o;
    return Objects.equals(this.hideSessionRecording, sshBastionConf.hideSessionRecording) &&
        Objects.equals(this.kexalgs, sshBastionConf.kexalgs) &&
        Objects.equals(this.logForwarding, sshBastionConf.logForwarding) &&
        Objects.equals(this.sessionTermination, sshBastionConf.sessionTermination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hideSessionRecording, kexalgs, logForwarding, sessionTermination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SshBastionConf {\n");
    sb.append("    hideSessionRecording: ").append(toIndentedString(hideSessionRecording)).append("\n");
    sb.append("    kexalgs: ").append(toIndentedString(kexalgs)).append("\n");
    sb.append("    logForwarding: ").append(toIndentedString(logForwarding)).append("\n");
    sb.append("    sessionTermination: ").append(toIndentedString(sessionTermination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

