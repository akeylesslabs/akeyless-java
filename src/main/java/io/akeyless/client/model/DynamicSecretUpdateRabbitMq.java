/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * dynamicSecretUpdateRabbitMq is a command that updates rabbitmq dynamic secret
 */
@ApiModel(description = "dynamicSecretUpdateRabbitMq is a command that updates rabbitmq dynamic secret")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DynamicSecretUpdateRabbitMq {
  public static final String SERIALIZED_NAME_DELETE_PROTECTION = "delete_protection";
  @SerializedName(SERIALIZED_NAME_DELETE_PROTECTION)
  private String deleteProtection;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEW_NAME = "new-name";
  @SerializedName(SERIALIZED_NAME_NEW_NAME)
  private String newName;

  public static final String SERIALIZED_NAME_PASSWORD_LENGTH = "password-length";
  @SerializedName(SERIALIZED_NAME_PASSWORD_LENGTH)
  private String passwordLength;

  public static final String SERIALIZED_NAME_PRODUCER_ENCRYPTION_KEY_NAME = "producer-encryption-key-name";
  @SerializedName(SERIALIZED_NAME_PRODUCER_ENCRYPTION_KEY_NAME)
  private String producerEncryptionKeyName;

  public static final String SERIALIZED_NAME_RABBITMQ_ADMIN_PWD = "rabbitmq-admin-pwd";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_ADMIN_PWD)
  private String rabbitmqAdminPwd;

  public static final String SERIALIZED_NAME_RABBITMQ_ADMIN_USER = "rabbitmq-admin-user";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_ADMIN_USER)
  private String rabbitmqAdminUser;

  public static final String SERIALIZED_NAME_RABBITMQ_SERVER_URI = "rabbitmq-server-uri";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_SERVER_URI)
  private String rabbitmqServerUri;

  public static final String SERIALIZED_NAME_RABBITMQ_USER_CONF_PERMISSION = "rabbitmq-user-conf-permission";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_USER_CONF_PERMISSION)
  private String rabbitmqUserConfPermission;

  public static final String SERIALIZED_NAME_RABBITMQ_USER_READ_PERMISSION = "rabbitmq-user-read-permission";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_USER_READ_PERMISSION)
  private String rabbitmqUserReadPermission;

  public static final String SERIALIZED_NAME_RABBITMQ_USER_TAGS = "rabbitmq-user-tags";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_USER_TAGS)
  private String rabbitmqUserTags;

  public static final String SERIALIZED_NAME_RABBITMQ_USER_VHOST = "rabbitmq-user-vhost";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_USER_VHOST)
  private String rabbitmqUserVhost;

  public static final String SERIALIZED_NAME_RABBITMQ_USER_WRITE_PERMISSION = "rabbitmq-user-write-permission";
  @SerializedName(SERIALIZED_NAME_RABBITMQ_USER_WRITE_PERMISSION)
  private String rabbitmqUserWritePermission;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_ENABLE = "secure-access-enable";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_ENABLE)
  private String secureAccessEnable;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_URL = "secure-access-url";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_URL)
  private String secureAccessUrl;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB = "secure-access-web";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB)
  private Boolean secureAccessWeb = true;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB_BROWSING = "secure-access-web-browsing";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB_BROWSING)
  private Boolean secureAccessWebBrowsing = false;

  public static final String SERIALIZED_NAME_SECURE_ACCESS_WEB_PROXY = "secure-access-web-proxy";
  @SerializedName(SERIALIZED_NAME_SECURE_ACCESS_WEB_PROXY)
  private Boolean secureAccessWebProxy = false;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_TARGET_NAME = "target-name";
  @SerializedName(SERIALIZED_NAME_TARGET_NAME)
  private String targetName;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_USER_TTL = "user-ttl";
  @SerializedName(SERIALIZED_NAME_USER_TTL)
  private String userTtl = "60m";

  public DynamicSecretUpdateRabbitMq() { 
  }

  public DynamicSecretUpdateRabbitMq deleteProtection(String deleteProtection) {
    
    this.deleteProtection = deleteProtection;
    return this;
  }

   /**
   * Protection from accidental deletion of this object [true/false]
   * @return deleteProtection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Protection from accidental deletion of this object [true/false]")

  public String getDeleteProtection() {
    return deleteProtection;
  }


  public void setDeleteProtection(String deleteProtection) {
    this.deleteProtection = deleteProtection;
  }


  public DynamicSecretUpdateRabbitMq description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the object
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the object")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public DynamicSecretUpdateRabbitMq json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public DynamicSecretUpdateRabbitMq name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Dynamic secret name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Dynamic secret name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public DynamicSecretUpdateRabbitMq newName(String newName) {
    
    this.newName = newName;
    return this;
  }

   /**
   * Dynamic secret name
   * @return newName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dynamic secret name")

  public String getNewName() {
    return newName;
  }


  public void setNewName(String newName) {
    this.newName = newName;
  }


  public DynamicSecretUpdateRabbitMq passwordLength(String passwordLength) {
    
    this.passwordLength = passwordLength;
    return this;
  }

   /**
   * The length of the password to be generated
   * @return passwordLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The length of the password to be generated")

  public String getPasswordLength() {
    return passwordLength;
  }


  public void setPasswordLength(String passwordLength) {
    this.passwordLength = passwordLength;
  }


  public DynamicSecretUpdateRabbitMq producerEncryptionKeyName(String producerEncryptionKeyName) {
    
    this.producerEncryptionKeyName = producerEncryptionKeyName;
    return this;
  }

   /**
   * Dynamic producer encryption key
   * @return producerEncryptionKeyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Dynamic producer encryption key")

  public String getProducerEncryptionKeyName() {
    return producerEncryptionKeyName;
  }


  public void setProducerEncryptionKeyName(String producerEncryptionKeyName) {
    this.producerEncryptionKeyName = producerEncryptionKeyName;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqAdminPwd(String rabbitmqAdminPwd) {
    
    this.rabbitmqAdminPwd = rabbitmqAdminPwd;
    return this;
  }

   /**
   * RabbitMQ Admin password
   * @return rabbitmqAdminPwd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RabbitMQ Admin password")

  public String getRabbitmqAdminPwd() {
    return rabbitmqAdminPwd;
  }


  public void setRabbitmqAdminPwd(String rabbitmqAdminPwd) {
    this.rabbitmqAdminPwd = rabbitmqAdminPwd;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqAdminUser(String rabbitmqAdminUser) {
    
    this.rabbitmqAdminUser = rabbitmqAdminUser;
    return this;
  }

   /**
   * RabbitMQ Admin User
   * @return rabbitmqAdminUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RabbitMQ Admin User")

  public String getRabbitmqAdminUser() {
    return rabbitmqAdminUser;
  }


  public void setRabbitmqAdminUser(String rabbitmqAdminUser) {
    this.rabbitmqAdminUser = rabbitmqAdminUser;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqServerUri(String rabbitmqServerUri) {
    
    this.rabbitmqServerUri = rabbitmqServerUri;
    return this;
  }

   /**
   * Server URI
   * @return rabbitmqServerUri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Server URI")

  public String getRabbitmqServerUri() {
    return rabbitmqServerUri;
  }


  public void setRabbitmqServerUri(String rabbitmqServerUri) {
    this.rabbitmqServerUri = rabbitmqServerUri;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqUserConfPermission(String rabbitmqUserConfPermission) {
    
    this.rabbitmqUserConfPermission = rabbitmqUserConfPermission;
    return this;
  }

   /**
   * User configuration permission
   * @return rabbitmqUserConfPermission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User configuration permission")

  public String getRabbitmqUserConfPermission() {
    return rabbitmqUserConfPermission;
  }


  public void setRabbitmqUserConfPermission(String rabbitmqUserConfPermission) {
    this.rabbitmqUserConfPermission = rabbitmqUserConfPermission;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqUserReadPermission(String rabbitmqUserReadPermission) {
    
    this.rabbitmqUserReadPermission = rabbitmqUserReadPermission;
    return this;
  }

   /**
   * User read permission
   * @return rabbitmqUserReadPermission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User read permission")

  public String getRabbitmqUserReadPermission() {
    return rabbitmqUserReadPermission;
  }


  public void setRabbitmqUserReadPermission(String rabbitmqUserReadPermission) {
    this.rabbitmqUserReadPermission = rabbitmqUserReadPermission;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqUserTags(String rabbitmqUserTags) {
    
    this.rabbitmqUserTags = rabbitmqUserTags;
    return this;
  }

   /**
   * User Tags
   * @return rabbitmqUserTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Tags")

  public String getRabbitmqUserTags() {
    return rabbitmqUserTags;
  }


  public void setRabbitmqUserTags(String rabbitmqUserTags) {
    this.rabbitmqUserTags = rabbitmqUserTags;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqUserVhost(String rabbitmqUserVhost) {
    
    this.rabbitmqUserVhost = rabbitmqUserVhost;
    return this;
  }

   /**
   * User Virtual Host
   * @return rabbitmqUserVhost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Virtual Host")

  public String getRabbitmqUserVhost() {
    return rabbitmqUserVhost;
  }


  public void setRabbitmqUserVhost(String rabbitmqUserVhost) {
    this.rabbitmqUserVhost = rabbitmqUserVhost;
  }


  public DynamicSecretUpdateRabbitMq rabbitmqUserWritePermission(String rabbitmqUserWritePermission) {
    
    this.rabbitmqUserWritePermission = rabbitmqUserWritePermission;
    return this;
  }

   /**
   * User write permission
   * @return rabbitmqUserWritePermission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User write permission")

  public String getRabbitmqUserWritePermission() {
    return rabbitmqUserWritePermission;
  }


  public void setRabbitmqUserWritePermission(String rabbitmqUserWritePermission) {
    this.rabbitmqUserWritePermission = rabbitmqUserWritePermission;
  }


  public DynamicSecretUpdateRabbitMq secureAccessEnable(String secureAccessEnable) {
    
    this.secureAccessEnable = secureAccessEnable;
    return this;
  }

   /**
   * Enable/Disable secure remote access [true/false]
   * @return secureAccessEnable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable/Disable secure remote access [true/false]")

  public String getSecureAccessEnable() {
    return secureAccessEnable;
  }


  public void setSecureAccessEnable(String secureAccessEnable) {
    this.secureAccessEnable = secureAccessEnable;
  }


  public DynamicSecretUpdateRabbitMq secureAccessUrl(String secureAccessUrl) {
    
    this.secureAccessUrl = secureAccessUrl;
    return this;
  }

   /**
   * Destination URL to inject secrets
   * @return secureAccessUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Destination URL to inject secrets")

  public String getSecureAccessUrl() {
    return secureAccessUrl;
  }


  public void setSecureAccessUrl(String secureAccessUrl) {
    this.secureAccessUrl = secureAccessUrl;
  }


  public DynamicSecretUpdateRabbitMq secureAccessWeb(Boolean secureAccessWeb) {
    
    this.secureAccessWeb = secureAccessWeb;
    return this;
  }

   /**
   * Enable Web Secure Remote Access
   * @return secureAccessWeb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable Web Secure Remote Access")

  public Boolean getSecureAccessWeb() {
    return secureAccessWeb;
  }


  public void setSecureAccessWeb(Boolean secureAccessWeb) {
    this.secureAccessWeb = secureAccessWeb;
  }


  public DynamicSecretUpdateRabbitMq secureAccessWebBrowsing(Boolean secureAccessWebBrowsing) {
    
    this.secureAccessWebBrowsing = secureAccessWebBrowsing;
    return this;
  }

   /**
   * Secure browser via Akeyless Web Access Bastion
   * @return secureAccessWebBrowsing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secure browser via Akeyless Web Access Bastion")

  public Boolean getSecureAccessWebBrowsing() {
    return secureAccessWebBrowsing;
  }


  public void setSecureAccessWebBrowsing(Boolean secureAccessWebBrowsing) {
    this.secureAccessWebBrowsing = secureAccessWebBrowsing;
  }


  public DynamicSecretUpdateRabbitMq secureAccessWebProxy(Boolean secureAccessWebProxy) {
    
    this.secureAccessWebProxy = secureAccessWebProxy;
    return this;
  }

   /**
   * Web-Proxy via Akeyless Web Access Bastion
   * @return secureAccessWebProxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Web-Proxy via Akeyless Web Access Bastion")

  public Boolean getSecureAccessWebProxy() {
    return secureAccessWebProxy;
  }


  public void setSecureAccessWebProxy(Boolean secureAccessWebProxy) {
    this.secureAccessWebProxy = secureAccessWebProxy;
  }


  public DynamicSecretUpdateRabbitMq tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public DynamicSecretUpdateRabbitMq addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Add tags attached to this object
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add tags attached to this object")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public DynamicSecretUpdateRabbitMq targetName(String targetName) {
    
    this.targetName = targetName;
    return this;
  }

   /**
   * Target name
   * @return targetName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Target name")

  public String getTargetName() {
    return targetName;
  }


  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }


  public DynamicSecretUpdateRabbitMq token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public DynamicSecretUpdateRabbitMq uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public DynamicSecretUpdateRabbitMq userTtl(String userTtl) {
    
    this.userTtl = userTtl;
    return this;
  }

   /**
   * User TTL
   * @return userTtl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User TTL")

  public String getUserTtl() {
    return userTtl;
  }


  public void setUserTtl(String userTtl) {
    this.userTtl = userTtl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicSecretUpdateRabbitMq dynamicSecretUpdateRabbitMq = (DynamicSecretUpdateRabbitMq) o;
    return Objects.equals(this.deleteProtection, dynamicSecretUpdateRabbitMq.deleteProtection) &&
        Objects.equals(this.description, dynamicSecretUpdateRabbitMq.description) &&
        Objects.equals(this.json, dynamicSecretUpdateRabbitMq.json) &&
        Objects.equals(this.name, dynamicSecretUpdateRabbitMq.name) &&
        Objects.equals(this.newName, dynamicSecretUpdateRabbitMq.newName) &&
        Objects.equals(this.passwordLength, dynamicSecretUpdateRabbitMq.passwordLength) &&
        Objects.equals(this.producerEncryptionKeyName, dynamicSecretUpdateRabbitMq.producerEncryptionKeyName) &&
        Objects.equals(this.rabbitmqAdminPwd, dynamicSecretUpdateRabbitMq.rabbitmqAdminPwd) &&
        Objects.equals(this.rabbitmqAdminUser, dynamicSecretUpdateRabbitMq.rabbitmqAdminUser) &&
        Objects.equals(this.rabbitmqServerUri, dynamicSecretUpdateRabbitMq.rabbitmqServerUri) &&
        Objects.equals(this.rabbitmqUserConfPermission, dynamicSecretUpdateRabbitMq.rabbitmqUserConfPermission) &&
        Objects.equals(this.rabbitmqUserReadPermission, dynamicSecretUpdateRabbitMq.rabbitmqUserReadPermission) &&
        Objects.equals(this.rabbitmqUserTags, dynamicSecretUpdateRabbitMq.rabbitmqUserTags) &&
        Objects.equals(this.rabbitmqUserVhost, dynamicSecretUpdateRabbitMq.rabbitmqUserVhost) &&
        Objects.equals(this.rabbitmqUserWritePermission, dynamicSecretUpdateRabbitMq.rabbitmqUserWritePermission) &&
        Objects.equals(this.secureAccessEnable, dynamicSecretUpdateRabbitMq.secureAccessEnable) &&
        Objects.equals(this.secureAccessUrl, dynamicSecretUpdateRabbitMq.secureAccessUrl) &&
        Objects.equals(this.secureAccessWeb, dynamicSecretUpdateRabbitMq.secureAccessWeb) &&
        Objects.equals(this.secureAccessWebBrowsing, dynamicSecretUpdateRabbitMq.secureAccessWebBrowsing) &&
        Objects.equals(this.secureAccessWebProxy, dynamicSecretUpdateRabbitMq.secureAccessWebProxy) &&
        Objects.equals(this.tags, dynamicSecretUpdateRabbitMq.tags) &&
        Objects.equals(this.targetName, dynamicSecretUpdateRabbitMq.targetName) &&
        Objects.equals(this.token, dynamicSecretUpdateRabbitMq.token) &&
        Objects.equals(this.uidToken, dynamicSecretUpdateRabbitMq.uidToken) &&
        Objects.equals(this.userTtl, dynamicSecretUpdateRabbitMq.userTtl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteProtection, description, json, name, newName, passwordLength, producerEncryptionKeyName, rabbitmqAdminPwd, rabbitmqAdminUser, rabbitmqServerUri, rabbitmqUserConfPermission, rabbitmqUserReadPermission, rabbitmqUserTags, rabbitmqUserVhost, rabbitmqUserWritePermission, secureAccessEnable, secureAccessUrl, secureAccessWeb, secureAccessWebBrowsing, secureAccessWebProxy, tags, targetName, token, uidToken, userTtl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicSecretUpdateRabbitMq {\n");
    sb.append("    deleteProtection: ").append(toIndentedString(deleteProtection)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newName: ").append(toIndentedString(newName)).append("\n");
    sb.append("    passwordLength: ").append(toIndentedString(passwordLength)).append("\n");
    sb.append("    producerEncryptionKeyName: ").append(toIndentedString(producerEncryptionKeyName)).append("\n");
    sb.append("    rabbitmqAdminPwd: ").append(toIndentedString(rabbitmqAdminPwd)).append("\n");
    sb.append("    rabbitmqAdminUser: ").append(toIndentedString(rabbitmqAdminUser)).append("\n");
    sb.append("    rabbitmqServerUri: ").append(toIndentedString(rabbitmqServerUri)).append("\n");
    sb.append("    rabbitmqUserConfPermission: ").append(toIndentedString(rabbitmqUserConfPermission)).append("\n");
    sb.append("    rabbitmqUserReadPermission: ").append(toIndentedString(rabbitmqUserReadPermission)).append("\n");
    sb.append("    rabbitmqUserTags: ").append(toIndentedString(rabbitmqUserTags)).append("\n");
    sb.append("    rabbitmqUserVhost: ").append(toIndentedString(rabbitmqUserVhost)).append("\n");
    sb.append("    rabbitmqUserWritePermission: ").append(toIndentedString(rabbitmqUserWritePermission)).append("\n");
    sb.append("    secureAccessEnable: ").append(toIndentedString(secureAccessEnable)).append("\n");
    sb.append("    secureAccessUrl: ").append(toIndentedString(secureAccessUrl)).append("\n");
    sb.append("    secureAccessWeb: ").append(toIndentedString(secureAccessWeb)).append("\n");
    sb.append("    secureAccessWebBrowsing: ").append(toIndentedString(secureAccessWebBrowsing)).append("\n");
    sb.append("    secureAccessWebProxy: ").append(toIndentedString(secureAccessWebProxy)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    userTtl: ").append(toIndentedString(userTtl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

