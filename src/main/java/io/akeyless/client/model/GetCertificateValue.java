/*
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.akeyless.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GetCertificateValue
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetCertificateValue {
  public static final String SERIALIZED_NAME_CERT_ISSUER_NAME = "cert-issuer-name";
  @SerializedName(SERIALIZED_NAME_CERT_ISSUER_NAME)
  private String certIssuerName;

  public static final String SERIALIZED_NAME_CERTIFICATE_FILE_OUTPUT = "certificate-file-output";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_FILE_OUTPUT)
  private String certificateFileOutput;

  public static final String SERIALIZED_NAME_DISPLAY_ID = "display-id";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ID)
  private String displayId;

  public static final String SERIALIZED_NAME_IGNORE_CACHE = "ignore-cache";
  @SerializedName(SERIALIZED_NAME_IGNORE_CACHE)
  private String ignoreCache = "false";

  public static final String SERIALIZED_NAME_ISSUANCE_TOKEN = "issuance-token";
  @SerializedName(SERIALIZED_NAME_ISSUANCE_TOKEN)
  private String issuanceToken;

  public static final String SERIALIZED_NAME_JSON = "json";
  @SerializedName(SERIALIZED_NAME_JSON)
  private Boolean json = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = "dummy_certificate_name";

  public static final String SERIALIZED_NAME_PRIVATE_KEY_FILE_OUTPUT = "private-key-file-output";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY_FILE_OUTPUT)
  private String privateKeyFileOutput;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_UID_TOKEN = "uid-token";
  @SerializedName(SERIALIZED_NAME_UID_TOKEN)
  private String uidToken;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public GetCertificateValue() { 
  }

  public GetCertificateValue certIssuerName(String certIssuerName) {
    
    this.certIssuerName = certIssuerName;
    return this;
  }

   /**
   * The parent PKI Certificate Issuer&#39;s name of the certificate, required when used with display-id and token
   * @return certIssuerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The parent PKI Certificate Issuer's name of the certificate, required when used with display-id and token")

  public String getCertIssuerName() {
    return certIssuerName;
  }


  public void setCertIssuerName(String certIssuerName) {
    this.certIssuerName = certIssuerName;
  }


  public GetCertificateValue certificateFileOutput(String certificateFileOutput) {
    
    this.certificateFileOutput = certificateFileOutput;
    return this;
  }

   /**
   * File to write the certificates to.
   * @return certificateFileOutput
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "File to write the certificates to.")

  public String getCertificateFileOutput() {
    return certificateFileOutput;
  }


  public void setCertificateFileOutput(String certificateFileOutput) {
    this.certificateFileOutput = certificateFileOutput;
  }


  public GetCertificateValue displayId(String displayId) {
    
    this.displayId = displayId;
    return this;
  }

   /**
   * Certificate display ID
   * @return displayId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Certificate display ID")

  public String getDisplayId() {
    return displayId;
  }


  public void setDisplayId(String displayId) {
    this.displayId = displayId;
  }


  public GetCertificateValue ignoreCache(String ignoreCache) {
    
    this.ignoreCache = ignoreCache;
    return this;
  }

   /**
   * Retrieve the Secret value without checking the Gateway&#39;s cache [true/false]. This flag is only relevant when using the RestAPI
   * @return ignoreCache
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Retrieve the Secret value without checking the Gateway's cache [true/false]. This flag is only relevant when using the RestAPI")

  public String getIgnoreCache() {
    return ignoreCache;
  }


  public void setIgnoreCache(String ignoreCache) {
    this.ignoreCache = ignoreCache;
  }


  public GetCertificateValue issuanceToken(String issuanceToken) {
    
    this.issuanceToken = issuanceToken;
    return this;
  }

   /**
   * Token for getting the issued certificate
   * @return issuanceToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token for getting the issued certificate")

  public String getIssuanceToken() {
    return issuanceToken;
  }


  public void setIssuanceToken(String issuanceToken) {
    this.issuanceToken = issuanceToken;
  }


  public GetCertificateValue json(Boolean json) {
    
    this.json = json;
    return this;
  }

   /**
   * Set output format to JSON
   * @return json
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set output format to JSON")

  public Boolean getJson() {
    return json;
  }


  public void setJson(Boolean json) {
    this.json = json;
  }


  public GetCertificateValue name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Certificate name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Certificate name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GetCertificateValue privateKeyFileOutput(String privateKeyFileOutput) {
    
    this.privateKeyFileOutput = privateKeyFileOutput;
    return this;
  }

   /**
   * File to write the private key to.
   * @return privateKeyFileOutput
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "File to write the private key to.")

  public String getPrivateKeyFileOutput() {
    return privateKeyFileOutput;
  }


  public void setPrivateKeyFileOutput(String privateKeyFileOutput) {
    this.privateKeyFileOutput = privateKeyFileOutput;
  }


  public GetCertificateValue token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authentication token (see `/auth` and `/configure`)")

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public GetCertificateValue uidToken(String uidToken) {
    
    this.uidToken = uidToken;
    return this;
  }

   /**
   * The universal identity token, Required only for universal_identity authentication
   * @return uidToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The universal identity token, Required only for universal_identity authentication")

  public String getUidToken() {
    return uidToken;
  }


  public void setUidToken(String uidToken) {
    this.uidToken = uidToken;
  }


  public GetCertificateValue version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Certificate version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Certificate version")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetCertificateValue getCertificateValue = (GetCertificateValue) o;
    return Objects.equals(this.certIssuerName, getCertificateValue.certIssuerName) &&
        Objects.equals(this.certificateFileOutput, getCertificateValue.certificateFileOutput) &&
        Objects.equals(this.displayId, getCertificateValue.displayId) &&
        Objects.equals(this.ignoreCache, getCertificateValue.ignoreCache) &&
        Objects.equals(this.issuanceToken, getCertificateValue.issuanceToken) &&
        Objects.equals(this.json, getCertificateValue.json) &&
        Objects.equals(this.name, getCertificateValue.name) &&
        Objects.equals(this.privateKeyFileOutput, getCertificateValue.privateKeyFileOutput) &&
        Objects.equals(this.token, getCertificateValue.token) &&
        Objects.equals(this.uidToken, getCertificateValue.uidToken) &&
        Objects.equals(this.version, getCertificateValue.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certIssuerName, certificateFileOutput, displayId, ignoreCache, issuanceToken, json, name, privateKeyFileOutput, token, uidToken, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetCertificateValue {\n");
    sb.append("    certIssuerName: ").append(toIndentedString(certIssuerName)).append("\n");
    sb.append("    certificateFileOutput: ").append(toIndentedString(certificateFileOutput)).append("\n");
    sb.append("    displayId: ").append(toIndentedString(displayId)).append("\n");
    sb.append("    ignoreCache: ").append(toIndentedString(ignoreCache)).append("\n");
    sb.append("    issuanceToken: ").append(toIndentedString(issuanceToken)).append("\n");
    sb.append("    json: ").append(toIndentedString(json)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privateKeyFileOutput: ").append(toIndentedString(privateKeyFileOutput)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    uidToken: ").append(toIndentedString(uidToken)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

